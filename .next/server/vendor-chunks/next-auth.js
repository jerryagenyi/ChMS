/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(rsc)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(rsc)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(rsc)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(rsc)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(rsc)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(rsc)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(rsc)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(rsc)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(rsc)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _callSuper(t, o, e) {\n  return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nvar UnknownError = exports.UnknownError = function (_Error) {\n  function UnknownError(error) {\n    var _message;\n    var _this;\n    (0, _classCallCheck2.default)(this, UnknownError);\n    _this = _callSuper(this, UnknownError, [(_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error]);\n    _this.name = \"UnknownError\";\n    _this.code = error.code;\n    if (error instanceof Error) {\n      _this.stack = error.stack;\n    }\n    return _this;\n  }\n  (0, _inherits2.default)(UnknownError, _Error);\n  return (0, _createClass2.default)(UnknownError, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        name: this.name,\n        message: this.message,\n        stack: this.stack\n      };\n    }\n  }]);\n}((0, _wrapNativeSuper2.default)(Error));\nvar OAuthCallbackError = exports.OAuthCallbackError = function (_UnknownError) {\n  function OAuthCallbackError() {\n    var _this2;\n    (0, _classCallCheck2.default)(this, OAuthCallbackError);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _callSuper(this, OAuthCallbackError, [].concat(args));\n    (0, _defineProperty2.default)(_this2, \"name\", \"OAuthCallbackError\");\n    return _this2;\n  }\n  (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n  return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nvar AccountNotLinkedError = exports.AccountNotLinkedError = function (_UnknownError2) {\n  function AccountNotLinkedError() {\n    var _this3;\n    (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    _this3 = _callSuper(this, AccountNotLinkedError, [].concat(args));\n    (0, _defineProperty2.default)(_this3, \"name\", \"AccountNotLinkedError\");\n    return _this3;\n  }\n  (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n  return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nvar MissingAPIRoute = exports.MissingAPIRoute = function (_UnknownError3) {\n  function MissingAPIRoute() {\n    var _this4;\n    (0, _classCallCheck2.default)(this, MissingAPIRoute);\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _this4 = _callSuper(this, MissingAPIRoute, [].concat(args));\n    (0, _defineProperty2.default)(_this4, \"name\", \"MissingAPIRouteError\");\n    (0, _defineProperty2.default)(_this4, \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n    return _this4;\n  }\n  (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n  return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nvar MissingSecret = exports.MissingSecret = function (_UnknownError4) {\n  function MissingSecret() {\n    var _this5;\n    (0, _classCallCheck2.default)(this, MissingSecret);\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    _this5 = _callSuper(this, MissingSecret, [].concat(args));\n    (0, _defineProperty2.default)(_this5, \"name\", \"MissingSecretError\");\n    (0, _defineProperty2.default)(_this5, \"code\", \"NO_SECRET\");\n    return _this5;\n  }\n  (0, _inherits2.default)(MissingSecret, _UnknownError4);\n  return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nvar MissingAuthorize = exports.MissingAuthorize = function (_UnknownError5) {\n  function MissingAuthorize() {\n    var _this6;\n    (0, _classCallCheck2.default)(this, MissingAuthorize);\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    _this6 = _callSuper(this, MissingAuthorize, [].concat(args));\n    (0, _defineProperty2.default)(_this6, \"name\", \"MissingAuthorizeError\");\n    (0, _defineProperty2.default)(_this6, \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n    return _this6;\n  }\n  (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n  return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nvar MissingAdapter = exports.MissingAdapter = function (_UnknownError6) {\n  function MissingAdapter() {\n    var _this7;\n    (0, _classCallCheck2.default)(this, MissingAdapter);\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    _this7 = _callSuper(this, MissingAdapter, [].concat(args));\n    (0, _defineProperty2.default)(_this7, \"name\", \"MissingAdapterError\");\n    (0, _defineProperty2.default)(_this7, \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n    return _this7;\n  }\n  (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n  return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nvar MissingAdapterMethods = exports.MissingAdapterMethods = function (_UnknownError7) {\n  function MissingAdapterMethods() {\n    var _this8;\n    (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    _this8 = _callSuper(this, MissingAdapterMethods, [].concat(args));\n    (0, _defineProperty2.default)(_this8, \"name\", \"MissingAdapterMethodsError\");\n    (0, _defineProperty2.default)(_this8, \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n    return _this8;\n  }\n  (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n  return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nvar UnsupportedStrategy = exports.UnsupportedStrategy = function (_UnknownError8) {\n  function UnsupportedStrategy() {\n    var _this9;\n    (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    _this9 = _callSuper(this, UnsupportedStrategy, [].concat(args));\n    (0, _defineProperty2.default)(_this9, \"name\", \"UnsupportedStrategyError\");\n    (0, _defineProperty2.default)(_this9, \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n    return _this9;\n  }\n  (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n  return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nvar InvalidCallbackUrl = exports.InvalidCallbackUrl = function (_UnknownError9) {\n  function InvalidCallbackUrl() {\n    var _this10;\n    (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    _this10 = _callSuper(this, InvalidCallbackUrl, [].concat(args));\n    (0, _defineProperty2.default)(_this10, \"name\", \"InvalidCallbackUrl\");\n    (0, _defineProperty2.default)(_this10, \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n    return _this10;\n  }\n  (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n  return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nfunction upperSnake(s) {\n  return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n  return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n  return Object.keys(methods).reduce(function (acc, name) {\n    acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n      var method,\n        _args = arguments;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            method = methods[name];\n            _context.next = 4;\n            return method.apply(void 0, _args);\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return acc;\n  }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n  if (!adapter) return;\n  return Object.keys(adapter).reduce(function (acc, name) {\n    acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n      var _len10,\n        args,\n        _key10,\n        method,\n        e,\n        _args2 = arguments;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            for (_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n              args[_key10] = _args2[_key10];\n            }\n            logger.debug(\"adapter_\".concat(name), {\n              args: args\n            });\n            method = adapter[name];\n            _context2.next = 6;\n            return method.apply(void 0, args);\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n            e = new UnknownError(_context2.t0);\n            e.name = \"\".concat(capitalize(name), \"Error\");\n            throw e;\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n    return acc;\n  }, {});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"code\", \"level\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AuthHandler = AuthHandler;\nvar _logger = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(rsc)/./node_modules/next-auth/utils/logger.js\"));\nvar _detectOrigin = __webpack_require__(/*! ../utils/detect-origin */ \"(rsc)/./node_modules/next-auth/utils/detect-origin.js\");\nvar routes = _interopRequireWildcard(__webpack_require__(/*! ./routes */ \"(rsc)/./node_modules/next-auth/core/routes/index.js\"));\nvar _pages = _interopRequireDefault(__webpack_require__(/*! ./pages */ \"(rsc)/./node_modules/next-auth/core/pages/index.js\"));\nvar _init = __webpack_require__(/*! ./init */ \"(rsc)/./node_modules/next-auth/core/init.js\");\nvar _assert = __webpack_require__(/*! ./lib/assert */ \"(rsc)/./node_modules/next-auth/core/lib/assert.js\");\nvar _cookie = __webpack_require__(/*! ./lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _cookie2 = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/next-auth/node_modules/cookie/index.js\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nasync function getBody(req) {\n  try {\n    return await req.json();\n  } catch (_unused) {}\n}\nasync function toInternalRequest(req) {\n  var _headers$xForwarded2;\n  if (req instanceof Request) {\n    var _req$headers$get, _url$searchParams$get, _headers$xForwarded;\n    const url = new URL(req.url);\n    const nextauth = url.pathname.split(\"/\").slice(3);\n    const headers = Object.fromEntries(req.headers);\n    const query = Object.fromEntries(url.searchParams);\n    query.nextauth = nextauth;\n    return {\n      action: nextauth[0],\n      method: req.method,\n      headers,\n      body: await getBody(req),\n      cookies: (0, _cookie2.parse)((_req$headers$get = req.headers.get(\"cookie\")) !== null && _req$headers$get !== void 0 ? _req$headers$get : \"\"),\n      providerId: nextauth[1],\n      error: (_url$searchParams$get = url.searchParams.get(\"error\")) !== null && _url$searchParams$get !== void 0 ? _url$searchParams$get : nextauth[1],\n      origin: (0, _detectOrigin.detectOrigin)((_headers$xForwarded = headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host, headers[\"x-forwarded-proto\"]),\n      query\n    };\n  }\n  const {\n    headers\n  } = req;\n  const host = (_headers$xForwarded2 = headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded2 !== void 0 ? _headers$xForwarded2 : headers === null || headers === void 0 ? void 0 : headers.host;\n  req.origin = (0, _detectOrigin.detectOrigin)(host, headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-proto\"]);\n  return req;\n}\nasync function AuthHandler(params) {\n  var _req$body$callbackUrl, _req$body, _req$query2, _req$body2;\n  const {\n    options: authOptions,\n    req: incomingRequest\n  } = params;\n  const req = await toInternalRequest(incomingRequest);\n  (0, _logger.setLogger)(authOptions.logger, authOptions.debug);\n  const assertionResult = (0, _assert.assertConfig)({\n    options: authOptions,\n    req\n  });\n  if (Array.isArray(assertionResult)) {\n    assertionResult.forEach(_logger.default.warn);\n  } else if (assertionResult instanceof Error) {\n    var _req$query;\n    _logger.default.error(assertionResult.code, assertionResult);\n    const htmlPages = [\"signin\", \"signout\", \"error\", \"verify-request\"];\n    if (!htmlPages.includes(req.action) || req.method !== \"GET\") {\n      const message = `There is a problem with the server configuration. Check the server logs for more information.`;\n      return {\n        status: 500,\n        headers: [{\n          key: \"Content-Type\",\n          value: \"application/json\"\n        }],\n        body: {\n          message\n        }\n      };\n    }\n    const {\n      pages,\n      theme\n    } = authOptions;\n    const authOnErrorPage = (pages === null || pages === void 0 ? void 0 : pages.error) && ((_req$query = req.query) === null || _req$query === void 0 || (_req$query = _req$query.callbackUrl) === null || _req$query === void 0 ? void 0 : _req$query.startsWith(pages.error));\n    if (!(pages !== null && pages !== void 0 && pages.error) || authOnErrorPage) {\n      if (authOnErrorPage) {\n        _logger.default.error(\"AUTH_ON_ERROR_PAGE_ERROR\", new Error(`The error page ${pages === null || pages === void 0 ? void 0 : pages.error} should not require authentication`));\n      }\n      const render = (0, _pages.default)({\n        theme\n      });\n      return render.error({\n        error: \"configuration\"\n      });\n    }\n    return {\n      redirect: `${pages.error}?error=Configuration`\n    };\n  }\n  const {\n    action,\n    providerId,\n    error,\n    method = \"GET\"\n  } = req;\n  const {\n    options,\n    cookies\n  } = await (0, _init.init)({\n    authOptions,\n    action,\n    providerId,\n    origin: req.origin,\n    callbackUrl: (_req$body$callbackUrl = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.callbackUrl) !== null && _req$body$callbackUrl !== void 0 ? _req$body$callbackUrl : (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl,\n    csrfToken: (_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.csrfToken,\n    cookies: req.cookies,\n    isPost: method === \"POST\"\n  });\n  const sessionStore = new _cookie.SessionStore(options.cookies.sessionToken, req, options.logger);\n  if (method === \"GET\") {\n    const render = (0, _pages.default)(_objectSpread(_objectSpread({}, options), {}, {\n      query: req.query,\n      cookies\n    }));\n    const {\n      pages\n    } = options;\n    switch (action) {\n      case \"providers\":\n        return await routes.providers(options.providers);\n      case \"session\":\n        {\n          const session = await routes.session({\n            options,\n            sessionStore\n          });\n          if (session.cookies) cookies.push(...session.cookies);\n          return _objectSpread(_objectSpread({}, session), {}, {\n            cookies\n          });\n        }\n      case \"csrf\":\n        return {\n          headers: [{\n            key: \"Content-Type\",\n            value: \"application/json\"\n          }],\n          body: {\n            csrfToken: options.csrfToken\n          },\n          cookies\n        };\n      case \"signin\":\n        if (pages.signIn) {\n          let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(options.callbackUrl)}`;\n          if (error) signinUrl = `${signinUrl}&error=${encodeURIComponent(error)}`;\n          return {\n            redirect: signinUrl,\n            cookies\n          };\n        }\n        return render.signin();\n      case \"signout\":\n        if (pages.signOut) return {\n          redirect: pages.signOut,\n          cookies\n        };\n        return render.signout();\n      case \"callback\":\n        if (options.provider) {\n          const callback = await routes.callback({\n            body: req.body,\n            query: req.query,\n            headers: req.headers,\n            cookies: req.cookies,\n            method,\n            options,\n            sessionStore\n          });\n          if (callback.cookies) cookies.push(...callback.cookies);\n          return _objectSpread(_objectSpread({}, callback), {}, {\n            cookies\n          });\n        }\n        break;\n      case \"verify-request\":\n        if (pages.verifyRequest) {\n          return {\n            redirect: pages.verifyRequest,\n            cookies\n          };\n        }\n        return render.verifyRequest();\n      case \"error\":\n        if ([\"Signin\", \"OAuthSignin\", \"OAuthCallback\", \"OAuthCreateAccount\", \"EmailCreateAccount\", \"Callback\", \"OAuthAccountNotLinked\", \"EmailSignin\", \"CredentialsSignin\", \"SessionRequired\"].includes(error)) {\n          return {\n            redirect: `${options.url}/signin?error=${error}`,\n            cookies\n          };\n        }\n        if (pages.error) {\n          return {\n            redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n            cookies\n          };\n        }\n        return render.error({\n          error: error\n        });\n      default:\n    }\n  } else if (method === \"POST\") {\n    switch (action) {\n      case \"signin\":\n        if (options.csrfTokenVerified && options.provider) {\n          const signin = await routes.signin({\n            query: req.query,\n            body: req.body,\n            options\n          });\n          if (signin.cookies) cookies.push(...signin.cookies);\n          return _objectSpread(_objectSpread({}, signin), {}, {\n            cookies\n          });\n        }\n        return {\n          redirect: `${options.url}/signin?csrf=true`,\n          cookies\n        };\n      case \"signout\":\n        if (options.csrfTokenVerified) {\n          const signout = await routes.signout({\n            options,\n            sessionStore\n          });\n          if (signout.cookies) cookies.push(...signout.cookies);\n          return _objectSpread(_objectSpread({}, signout), {}, {\n            cookies\n          });\n        }\n        return {\n          redirect: `${options.url}/signout?csrf=true`,\n          cookies\n        };\n      case \"callback\":\n        if (options.provider) {\n          if (options.provider.type === \"credentials\" && !options.csrfTokenVerified) {\n            return {\n              redirect: `${options.url}/signin?csrf=true`,\n              cookies\n            };\n          }\n          const callback = await routes.callback({\n            body: req.body,\n            query: req.query,\n            headers: req.headers,\n            cookies: req.cookies,\n            method,\n            options,\n            sessionStore\n          });\n          if (callback.cookies) cookies.push(...callback.cookies);\n          return _objectSpread(_objectSpread({}, callback), {}, {\n            cookies\n          });\n        }\n        break;\n      case \"_log\":\n        {\n          if (authOptions.logger) {\n            try {\n              var _req$body3;\n              const _ref = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {},\n                {\n                  code,\n                  level\n                } = _ref,\n                metadata = _objectWithoutProperties(_ref, _excluded);\n              _logger.default[level](code, metadata);\n            } catch (error) {\n              _logger.default.error(\"LOGGER_ERROR\", error);\n            }\n          }\n          return {};\n        }\n      case \"session\":\n        {\n          if (options.csrfTokenVerified) {\n            var _req$body4;\n            const session = await routes.session({\n              options,\n              sessionStore,\n              newSession: (_req$body4 = req.body) === null || _req$body4 === void 0 ? void 0 : _req$body4.data,\n              isUpdate: true\n            });\n            if (session.cookies) cookies.push(...session.cookies);\n            return _objectSpread(_objectSpread({}, session), {}, {\n              cookies\n            });\n          }\n          return {\n            status: 400,\n            body: {},\n            cookies\n          };\n        }\n      default:\n    }\n  }\n  return {\n    status: 400,\n    body: `Error: This action with HTTP ${method} is not supported by NextAuth.js`\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/init.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/core/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.init = init;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _logger = _interopRequireDefault(__webpack_require__(/*! ../utils/logger */ \"(rsc)/./node_modules/next-auth/utils/logger.js\"));\nvar _errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./lib/providers */ \"(rsc)/./node_modules/next-auth/core/lib/providers.js\"));\nvar _utils = __webpack_require__(/*! ./lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nvar cookie = _interopRequireWildcard(__webpack_require__(/*! ./lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\"));\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\"));\nvar _defaultCallbacks = __webpack_require__(/*! ./lib/default-callbacks */ \"(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js\");\nvar _csrfToken = __webpack_require__(/*! ./lib/csrf-token */ \"(rsc)/./node_modules/next-auth/core/lib/csrf-token.js\");\nvar _callbackUrl = __webpack_require__(/*! ./lib/callback-url */ \"(rsc)/./node_modules/next-auth/core/lib/callback-url.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(rsc)/./node_modules/next-auth/utils/parse-url.js\"));\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nasync function init({\n  authOptions,\n  providerId,\n  action,\n  origin,\n  cookies: reqCookies,\n  callbackUrl: reqCallbackUrl,\n  csrfToken: reqCsrfToken,\n  isPost\n}) {\n  var _authOptions$useSecur, _authOptions$events;\n  const url = (0, _parseUrl.default)(origin);\n  const secret = (0, _utils.createSecret)({\n    authOptions,\n    url\n  });\n  const {\n    providers,\n    provider\n  } = (0, _providers.default)({\n    providers: authOptions.providers,\n    url,\n    providerId\n  });\n  const maxAge = 30 * 24 * 60 * 60;\n  const options = _objectSpread(_objectSpread({\n    debug: false,\n    pages: {},\n    theme: {\n      colorScheme: \"auto\",\n      logo: \"\",\n      brandColor: \"\",\n      buttonText: \"\"\n    }\n  }, authOptions), {}, {\n    url,\n    action,\n    provider,\n    cookies: _objectSpread(_objectSpread({}, cookie.defaultCookies((_authOptions$useSecur = authOptions.useSecureCookies) !== null && _authOptions$useSecur !== void 0 ? _authOptions$useSecur : url.base.startsWith(\"https://\"))), authOptions.cookies),\n    secret,\n    providers,\n    session: _objectSpread({\n      strategy: authOptions.adapter ? \"database\" : \"jwt\",\n      maxAge,\n      updateAge: 24 * 60 * 60,\n      generateSessionToken: () => {\n        var _randomUUID;\n        return (_randomUUID = _crypto.randomUUID === null || _crypto.randomUUID === void 0 ? void 0 : (0, _crypto.randomUUID)()) !== null && _randomUUID !== void 0 ? _randomUUID : (0, _crypto.randomBytes)(32).toString(\"hex\");\n      }\n    }, authOptions.session),\n    jwt: _objectSpread({\n      secret,\n      maxAge,\n      encode: jwt.encode,\n      decode: jwt.decode\n    }, authOptions.jwt),\n    events: (0, _errors.eventsErrorHandler)((_authOptions$events = authOptions.events) !== null && _authOptions$events !== void 0 ? _authOptions$events : {}, _logger.default),\n    adapter: (0, _errors.adapterErrorHandler)(authOptions.adapter, _logger.default),\n    callbacks: _objectSpread(_objectSpread({}, _defaultCallbacks.defaultCallbacks), authOptions.callbacks),\n    logger: _logger.default,\n    callbackUrl: url.origin\n  });\n  const cookies = [];\n  const {\n    csrfToken,\n    cookie: csrfCookie,\n    csrfTokenVerified\n  } = (0, _csrfToken.createCSRFToken)({\n    options,\n    cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.csrfToken.name],\n    isPost,\n    bodyValue: reqCsrfToken\n  });\n  options.csrfToken = csrfToken;\n  options.csrfTokenVerified = csrfTokenVerified;\n  if (csrfCookie) {\n    cookies.push({\n      name: options.cookies.csrfToken.name,\n      value: csrfCookie,\n      options: options.cookies.csrfToken.options\n    });\n  }\n  const {\n    callbackUrl,\n    callbackUrlCookie\n  } = await (0, _callbackUrl.createCallbackUrl)({\n    options,\n    cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.callbackUrl.name],\n    paramValue: reqCallbackUrl\n  });\n  options.callbackUrl = callbackUrl;\n  if (callbackUrlCookie) {\n    cookies.push({\n      name: options.cookies.callbackUrl.name,\n      value: callbackUrlCookie,\n      options: options.cookies.callbackUrl.options\n    });\n  }\n  return {\n    options,\n    cookies\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/init.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/assert.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/assert.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.assertConfig = assertConfig;\nvar _errors = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../../utils/parse-url */ \"(rsc)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _cookie = __webpack_require__(/*! ./cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n  try {\n    return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n  } catch (_unused) {\n    return false;\n  }\n}\nfunction assertConfig(params) {\n  var _req$query, _req$query2, _options$useSecureCoo, _req$cookies, _options$cookies$call, _options$cookies;\n  const {\n    options,\n    req\n  } = params;\n  const warnings = [];\n  if (!warned) {\n    if (!req.origin) warnings.push(\"NEXTAUTH_URL\");\n    if (!options.secret && true) warnings.push(\"NO_SECRET\");\n    if (options.debug) warnings.push(\"DEBUG_ENABLED\");\n  }\n  if (!options.secret && false) {}\n  if (!((_req$query = req.query) !== null && _req$query !== void 0 && _req$query.nextauth) && !req.action) {\n    return new _errors.MissingAPIRoute(\"Cannot find [...nextauth].{js,ts} in `/pages/api/auth`. Make sure the filename is written correctly.\");\n  }\n  const callbackUrlParam = (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl;\n  const url = (0, _parseUrl.default)(req.origin);\n  if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {\n    return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n  }\n  const {\n    callbackUrl: defaultCallbackUrl\n  } = (0, _cookie.defaultCookies)((_options$useSecureCoo = options.useSecureCookies) !== null && _options$useSecureCoo !== void 0 ? _options$useSecureCoo : url.base.startsWith(\"https://\"));\n  const callbackUrlCookie = (_req$cookies = req.cookies) === null || _req$cookies === void 0 ? void 0 : _req$cookies[(_options$cookies$call = (_options$cookies = options.cookies) === null || _options$cookies === void 0 || (_options$cookies = _options$cookies.callbackUrl) === null || _options$cookies === void 0 ? void 0 : _options$cookies.name) !== null && _options$cookies$call !== void 0 ? _options$cookies$call : defaultCallbackUrl.name];\n  if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.base)) {\n    return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n  }\n  let hasCredentials, hasEmail;\n  let hasTwitterOAuth2;\n  for (const provider of options.providers) {\n    if (provider.type === \"credentials\") hasCredentials = true;else if (provider.type === \"email\") hasEmail = true;else if (provider.id === \"twitter\" && provider.version === \"2.0\") hasTwitterOAuth2 = true;\n  }\n  if (hasCredentials) {\n    var _options$session;\n    const dbStrategy = ((_options$session = options.session) === null || _options$session === void 0 ? void 0 : _options$session.strategy) === \"database\";\n    const onlyCredentials = !options.providers.some(p => p.type !== \"credentials\");\n    if (dbStrategy && onlyCredentials) {\n      return new _errors.UnsupportedStrategy(\"Signin in with credentials only supported if JWT strategy is enabled\");\n    }\n    const credentialsNoAuthorize = options.providers.some(p => p.type === \"credentials\" && !p.authorize);\n    if (credentialsNoAuthorize) {\n      return new _errors.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n    }\n  }\n  if (hasEmail) {\n    const {\n      adapter\n    } = options;\n    if (!adapter) {\n      return new _errors.MissingAdapter(\"E-mail login requires an adapter.\");\n    }\n    const missingMethods = [\"createVerificationToken\", \"useVerificationToken\", \"getUserByEmail\"].filter(method => !adapter[method]);\n    if (missingMethods.length) {\n      return new _errors.MissingAdapterMethods(`Required adapter methods were missing: ${missingMethods.join(\", \")}`);\n    }\n  }\n  if (!warned) {\n    if (hasTwitterOAuth2) warnings.push(\"TWITTER_OAUTH_2_BETA\");\n    warned = true;\n  }\n  return warnings;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/assert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/callback-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-handler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = callbackHandler;\nvar _errors = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function callbackHandler(params) {\n  const {\n    sessionToken,\n    profile: _profile,\n    account,\n    options\n  } = params;\n  if (!(account !== null && account !== void 0 && account.providerAccountId) || !account.type) throw new Error(\"Missing or invalid provider account\");\n  if (![\"email\", \"oauth\"].includes(account.type)) throw new Error(\"Provider not supported\");\n  const {\n    adapter,\n    jwt,\n    events,\n    session: {\n      strategy: sessionStrategy,\n      generateSessionToken\n    }\n  } = options;\n  if (!adapter) {\n    return {\n      user: _profile,\n      account\n    };\n  }\n  const profile = _profile;\n  const {\n    createUser,\n    updateUser,\n    getUser,\n    getUserByAccount,\n    getUserByEmail,\n    linkAccount,\n    createSession,\n    getSessionAndUser,\n    deleteSession\n  } = adapter;\n  let session = null;\n  let user = null;\n  let isNewUser = false;\n  const useJwtSession = sessionStrategy === \"jwt\";\n  if (sessionToken) {\n    if (useJwtSession) {\n      try {\n        session = await jwt.decode(_objectSpread(_objectSpread({}, jwt), {}, {\n          token: sessionToken\n        }));\n        if (session && \"sub\" in session && session.sub) {\n          user = await getUser(session.sub);\n        }\n      } catch (_unused) {}\n    } else {\n      const userAndSession = await getSessionAndUser(sessionToken);\n      if (userAndSession) {\n        session = userAndSession.session;\n        user = userAndSession.user;\n      }\n    }\n  }\n  if (account.type === \"email\") {\n    const userByEmail = await getUserByEmail(profile.email);\n    if (userByEmail) {\n      var _user, _events$updateUser;\n      if (((_user = user) === null || _user === void 0 ? void 0 : _user.id) !== userByEmail.id && !useJwtSession && sessionToken) {\n        await deleteSession(sessionToken);\n      }\n      user = await updateUser({\n        id: userByEmail.id,\n        emailVerified: new Date()\n      });\n      await ((_events$updateUser = events.updateUser) === null || _events$updateUser === void 0 ? void 0 : _events$updateUser.call(events, {\n        user\n      }));\n    } else {\n      var _events$createUser;\n      const _profile$emailVerifie = _objectSpread(_objectSpread({}, profile), {}, {\n          emailVerified: new Date()\n        }),\n        {\n          id: _\n        } = _profile$emailVerifie,\n        newUser = _objectWithoutProperties(_profile$emailVerifie, _excluded);\n      user = await createUser(newUser);\n      await ((_events$createUser = events.createUser) === null || _events$createUser === void 0 ? void 0 : _events$createUser.call(events, {\n        user\n      }));\n      isNewUser = true;\n    }\n    session = useJwtSession ? {} : await createSession({\n      sessionToken: await generateSessionToken(),\n      userId: user.id,\n      expires: (0, _utils.fromDate)(options.session.maxAge)\n    });\n    return {\n      session,\n      user,\n      isNewUser\n    };\n  } else if (account.type === \"oauth\") {\n    const userByAccount = await getUserByAccount({\n      providerAccountId: account.providerAccountId,\n      provider: account.provider\n    });\n    if (userByAccount) {\n      if (user) {\n        if (userByAccount.id === user.id) {\n          return {\n            session,\n            user,\n            isNewUser\n          };\n        }\n        throw new _errors.AccountNotLinkedError(\"The account is already associated with another user\");\n      }\n      session = useJwtSession ? {} : await createSession({\n        sessionToken: await generateSessionToken(),\n        userId: userByAccount.id,\n        expires: (0, _utils.fromDate)(options.session.maxAge)\n      });\n      return {\n        session,\n        user: userByAccount,\n        isNewUser\n      };\n    } else {\n      var _events$createUser2, _events$linkAccount2;\n      if (user) {\n        var _events$linkAccount;\n        await linkAccount(_objectSpread(_objectSpread({}, account), {}, {\n          userId: user.id\n        }));\n        await ((_events$linkAccount = events.linkAccount) === null || _events$linkAccount === void 0 ? void 0 : _events$linkAccount.call(events, {\n          user,\n          account,\n          profile\n        }));\n        return {\n          session,\n          user,\n          isNewUser\n        };\n      }\n      const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n      if (userByEmail) {\n        const provider = options.provider;\n        if (provider !== null && provider !== void 0 && provider.allowDangerousEmailAccountLinking) {\n          user = userByEmail;\n        } else {\n          throw new _errors.AccountNotLinkedError(\"Another account already exists with the same e-mail address\");\n        }\n      } else {\n        const _profile$emailVerifie2 = _objectSpread(_objectSpread({}, profile), {}, {\n            emailVerified: null\n          }),\n          {\n            id: _\n          } = _profile$emailVerifie2,\n          newUser = _objectWithoutProperties(_profile$emailVerifie2, _excluded2);\n        user = await createUser(newUser);\n      }\n      await ((_events$createUser2 = events.createUser) === null || _events$createUser2 === void 0 ? void 0 : _events$createUser2.call(events, {\n        user\n      }));\n      await linkAccount(_objectSpread(_objectSpread({}, account), {}, {\n        userId: user.id\n      }));\n      await ((_events$linkAccount2 = events.linkAccount) === null || _events$linkAccount2 === void 0 ? void 0 : _events$linkAccount2.call(events, {\n        user,\n        account,\n        profile\n      }));\n      session = useJwtSession ? {} : await createSession({\n        sessionToken: await generateSessionToken(),\n        userId: user.id,\n        expires: (0, _utils.fromDate)(options.session.maxAge)\n      });\n      return {\n        session,\n        user,\n        isNewUser: true\n      };\n    }\n  }\n  throw new Error(\"Unsupported account type\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/callback-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/callback-url.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-url.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createCallbackUrl = createCallbackUrl;\nasync function createCallbackUrl({\n  options,\n  paramValue,\n  cookieValue\n}) {\n  const {\n    url,\n    callbacks\n  } = options;\n  let callbackUrl = url.origin;\n  if (paramValue) {\n    callbackUrl = await callbacks.redirect({\n      url: paramValue,\n      baseUrl: url.origin\n    });\n  } else if (cookieValue) {\n    callbackUrl = await callbacks.redirect({\n      url: cookieValue,\n      baseUrl: url.origin\n    });\n  }\n  return {\n    callbackUrl,\n    callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQseUJBQXlCLEdBQUdFLGlCQUFpQjtBQUM3QyxlQUFlQSxpQkFBaUJBLENBQUM7RUFDL0JDLE9BQU87RUFDUEMsVUFBVTtFQUNWQztBQUNGLENBQUMsRUFBRTtFQUNELE1BQU07SUFDSkMsR0FBRztJQUNIQztFQUNGLENBQUMsR0FBR0osT0FBTztFQUNYLElBQUlLLFdBQVcsR0FBR0YsR0FBRyxDQUFDRyxNQUFNO0VBQzVCLElBQUlMLFVBQVUsRUFBRTtJQUNkSSxXQUFXLEdBQUcsTUFBTUQsU0FBUyxDQUFDRyxRQUFRLENBQUM7TUFDckNKLEdBQUcsRUFBRUYsVUFBVTtNQUNmTyxPQUFPLEVBQUVMLEdBQUcsQ0FBQ0c7SUFDZixDQUFDLENBQUM7RUFDSixDQUFDLE1BQU0sSUFBSUosV0FBVyxFQUFFO0lBQ3RCRyxXQUFXLEdBQUcsTUFBTUQsU0FBUyxDQUFDRyxRQUFRLENBQUM7TUFDckNKLEdBQUcsRUFBRUQsV0FBVztNQUNoQk0sT0FBTyxFQUFFTCxHQUFHLENBQUNHO0lBQ2YsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxPQUFPO0lBQ0xELFdBQVc7SUFDWEksaUJBQWlCLEVBQUVKLFdBQVcsS0FBS0gsV0FBVyxHQUFHRyxXQUFXLEdBQUdLO0VBQ2pFLENBQUM7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlQ2FsbGJhY2tVcmwgPSBjcmVhdGVDYWxsYmFja1VybDtcbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNhbGxiYWNrVXJsKHtcbiAgb3B0aW9ucyxcbiAgcGFyYW1WYWx1ZSxcbiAgY29va2llVmFsdWVcbn0pIHtcbiAgY29uc3Qge1xuICAgIHVybCxcbiAgICBjYWxsYmFja3NcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCBjYWxsYmFja1VybCA9IHVybC5vcmlnaW47XG4gIGlmIChwYXJhbVZhbHVlKSB7XG4gICAgY2FsbGJhY2tVcmwgPSBhd2FpdCBjYWxsYmFja3MucmVkaXJlY3Qoe1xuICAgICAgdXJsOiBwYXJhbVZhbHVlLFxuICAgICAgYmFzZVVybDogdXJsLm9yaWdpblxuICAgIH0pO1xuICB9IGVsc2UgaWYgKGNvb2tpZVZhbHVlKSB7XG4gICAgY2FsbGJhY2tVcmwgPSBhd2FpdCBjYWxsYmFja3MucmVkaXJlY3Qoe1xuICAgICAgdXJsOiBjb29raWVWYWx1ZSxcbiAgICAgIGJhc2VVcmw6IHVybC5vcmlnaW5cbiAgICB9KTtcbiAgfVxuICByZXR1cm4ge1xuICAgIGNhbGxiYWNrVXJsLFxuICAgIGNhbGxiYWNrVXJsQ29va2llOiBjYWxsYmFja1VybCAhPT0gY29va2llVmFsdWUgPyBjYWxsYmFja1VybCA6IHVuZGVmaW5lZFxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZUNhbGxiYWNrVXJsIiwib3B0aW9ucyIsInBhcmFtVmFsdWUiLCJjb29raWVWYWx1ZSIsInVybCIsImNhbGxiYWNrcyIsImNhbGxiYWNrVXJsIiwib3JpZ2luIiwicmVkaXJlY3QiLCJiYXNlVXJsIiwiY2FsbGJhY2tVcmxDb29raWUiLCJ1bmRlZmluZWQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/callback-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/cookie.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/cookie.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SessionStore = void 0;\nexports.defaultCookies = defaultCookies;\nfunction _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nconst ALLOWED_COOKIE_SIZE = 4096;\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 163;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\nfunction defaultCookies(useSecureCookies) {\n  const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n  return {\n    sessionToken: {\n      name: `${cookiePrefix}next-auth.session-token`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies\n      }\n    },\n    callbackUrl: {\n      name: `${cookiePrefix}next-auth.callback-url`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies\n      }\n    },\n    csrfToken: {\n      name: `${useSecureCookies ? \"__Host-\" : \"\"}next-auth.csrf-token`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies\n      }\n    },\n    pkceCodeVerifier: {\n      name: `${cookiePrefix}next-auth.pkce.code_verifier`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies,\n        maxAge: 60 * 15\n      }\n    },\n    state: {\n      name: `${cookiePrefix}next-auth.state`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies,\n        maxAge: 60 * 15\n      }\n    },\n    nonce: {\n      name: `${cookiePrefix}next-auth.nonce`,\n      options: {\n        httpOnly: true,\n        sameSite: \"lax\",\n        path: \"/\",\n        secure: useSecureCookies\n      }\n    }\n  };\n}\nvar _chunks = new WeakMap();\nvar _option = new WeakMap();\nvar _logger = new WeakMap();\nvar _SessionStore_brand = new WeakSet();\nclass SessionStore {\n  constructor(option, req, logger) {\n    _classPrivateMethodInitSpec(this, _SessionStore_brand);\n    _classPrivateFieldInitSpec(this, _chunks, {});\n    _classPrivateFieldInitSpec(this, _option, void 0);\n    _classPrivateFieldInitSpec(this, _logger, void 0);\n    _classPrivateFieldSet(_logger, this, logger);\n    _classPrivateFieldSet(_option, this, option);\n    const {\n      cookies: _cookies\n    } = req;\n    const {\n      name: cookieName\n    } = option;\n    if (typeof (_cookies === null || _cookies === void 0 ? void 0 : _cookies.getAll) === \"function\") {\n      for (const {\n        name,\n        value\n      } of _cookies.getAll()) {\n        if (name.startsWith(cookieName)) {\n          _classPrivateFieldGet(_chunks, this)[name] = value;\n        }\n      }\n    } else if (_cookies instanceof Map) {\n      for (const name of _cookies.keys()) {\n        if (name.startsWith(cookieName)) _classPrivateFieldGet(_chunks, this)[name] = _cookies.get(name);\n      }\n    } else {\n      for (const name in _cookies) {\n        if (name.startsWith(cookieName)) _classPrivateFieldGet(_chunks, this)[name] = _cookies[name];\n      }\n    }\n  }\n  get value() {\n    const sortedKeys = Object.keys(_classPrivateFieldGet(_chunks, this)).sort((a, b) => {\n      var _a$split$pop, _b$split$pop;\n      const aSuffix = parseInt((_a$split$pop = a.split(\".\").pop()) !== null && _a$split$pop !== void 0 ? _a$split$pop : \"0\");\n      const bSuffix = parseInt((_b$split$pop = b.split(\".\").pop()) !== null && _b$split$pop !== void 0 ? _b$split$pop : \"0\");\n      return aSuffix - bSuffix;\n    });\n    return sortedKeys.map(key => _classPrivateFieldGet(_chunks, this)[key]).join(\"\");\n  }\n  chunk(value, options) {\n    const cookies = _assertClassBrand(_SessionStore_brand, this, _clean).call(this);\n    const chunked = _assertClassBrand(_SessionStore_brand, this, _chunk).call(this, {\n      name: _classPrivateFieldGet(_option, this).name,\n      value,\n      options: _objectSpread(_objectSpread({}, _classPrivateFieldGet(_option, this).options), options)\n    });\n    for (const chunk of chunked) {\n      cookies[chunk.name] = chunk;\n    }\n    return Object.values(cookies);\n  }\n  clean() {\n    return Object.values(_assertClassBrand(_SessionStore_brand, this, _clean).call(this));\n  }\n}\nexports.SessionStore = SessionStore;\nfunction _chunk(cookie) {\n  const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n  if (chunkCount === 1) {\n    _classPrivateFieldGet(_chunks, this)[cookie.name] = cookie.value;\n    return [cookie];\n  }\n  const cookies = [];\n  for (let i = 0; i < chunkCount; i++) {\n    const name = `${cookie.name}.${i}`;\n    const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n    cookies.push(_objectSpread(_objectSpread({}, cookie), {}, {\n      name,\n      value\n    }));\n    _classPrivateFieldGet(_chunks, this)[name] = value;\n  }\n  _classPrivateFieldGet(_logger, this).debug(\"CHUNKING_SESSION_COOKIE\", {\n    message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n    emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n    valueSize: cookie.value.length,\n    chunks: cookies.map(c => c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n  });\n  return cookies;\n}\nfunction _clean() {\n  const cleanedChunks = {};\n  for (const name in _classPrivateFieldGet(_chunks, this)) {\n    var _classPrivateFieldGet2;\n    (_classPrivateFieldGet2 = _classPrivateFieldGet(_chunks, this)) === null || _classPrivateFieldGet2 === void 0 || delete _classPrivateFieldGet2[name];\n    cleanedChunks[name] = {\n      name,\n      value: \"\",\n      options: _objectSpread(_objectSpread({}, _classPrivateFieldGet(_option, this).options), {}, {\n        maxAge: 0\n      })\n    };\n  }\n  return cleanedChunks;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/csrf-token.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/csrf-token.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createCSRFToken = createCSRFToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction createCSRFToken({\n  options,\n  cookieValue,\n  isPost,\n  bodyValue\n}) {\n  if (cookieValue) {\n    const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n    const expectedCsrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n    if (csrfTokenHash === expectedCsrfTokenHash) {\n      const csrfTokenVerified = isPost && csrfToken === bodyValue;\n      return {\n        csrfTokenVerified,\n        csrfToken\n      };\n    }\n  }\n  const csrfToken = (0, _crypto.randomBytes)(32).toString(\"hex\");\n  const csrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n  const cookie = `${csrfToken}|${csrfTokenHash}`;\n  return {\n    cookie,\n    csrfToken\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHVCQUF1QixHQUFHRSxlQUFlO0FBQ3pDLElBQUlDLE9BQU8sR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQy9CLFNBQVNGLGVBQWVBLENBQUM7RUFDdkJHLE9BQU87RUFDUEMsV0FBVztFQUNYQyxNQUFNO0VBQ05DO0FBQ0YsQ0FBQyxFQUFFO0VBQ0QsSUFBSUYsV0FBVyxFQUFFO0lBQ2YsTUFBTSxDQUFDRyxTQUFTLEVBQUVDLGFBQWEsQ0FBQyxHQUFHSixXQUFXLENBQUNLLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDekQsTUFBTUMscUJBQXFCLEdBQUcsQ0FBQyxDQUFDLEVBQUVULE9BQU8sQ0FBQ1UsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDQyxNQUFNLENBQUUsR0FBRUwsU0FBVSxHQUFFSixPQUFPLENBQUNVLE1BQU8sRUFBQyxDQUFDLENBQUNDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDckgsSUFBSU4sYUFBYSxLQUFLRSxxQkFBcUIsRUFBRTtNQUMzQyxNQUFNSyxpQkFBaUIsR0FBR1YsTUFBTSxJQUFJRSxTQUFTLEtBQUtELFNBQVM7TUFDM0QsT0FBTztRQUNMUyxpQkFBaUI7UUFDakJSO01BQ0YsQ0FBQztJQUNIO0VBQ0Y7RUFDQSxNQUFNQSxTQUFTLEdBQUcsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sQ0FBQ2UsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUMsS0FBSyxDQUFDO0VBQzlELE1BQU1ULGFBQWEsR0FBRyxDQUFDLENBQUMsRUFBRVAsT0FBTyxDQUFDVSxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUNDLE1BQU0sQ0FBRSxHQUFFTCxTQUFVLEdBQUVKLE9BQU8sQ0FBQ1UsTUFBTyxFQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLEtBQUssQ0FBQztFQUM3RyxNQUFNSSxNQUFNLEdBQUksR0FBRVgsU0FBVSxJQUFHQyxhQUFjLEVBQUM7RUFDOUMsT0FBTztJQUNMVSxNQUFNO0lBQ05YO0VBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvY3NyZi10b2tlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlQ1NSRlRva2VuID0gY3JlYXRlQ1NSRlRva2VuO1xudmFyIF9jcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuZnVuY3Rpb24gY3JlYXRlQ1NSRlRva2VuKHtcbiAgb3B0aW9ucyxcbiAgY29va2llVmFsdWUsXG4gIGlzUG9zdCxcbiAgYm9keVZhbHVlXG59KSB7XG4gIGlmIChjb29raWVWYWx1ZSkge1xuICAgIGNvbnN0IFtjc3JmVG9rZW4sIGNzcmZUb2tlbkhhc2hdID0gY29va2llVmFsdWUuc3BsaXQoXCJ8XCIpO1xuICAgIGNvbnN0IGV4cGVjdGVkQ3NyZlRva2VuSGFzaCA9ICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShgJHtjc3JmVG9rZW59JHtvcHRpb25zLnNlY3JldH1gKS5kaWdlc3QoXCJoZXhcIik7XG4gICAgaWYgKGNzcmZUb2tlbkhhc2ggPT09IGV4cGVjdGVkQ3NyZlRva2VuSGFzaCkge1xuICAgICAgY29uc3QgY3NyZlRva2VuVmVyaWZpZWQgPSBpc1Bvc3QgJiYgY3NyZlRva2VuID09PSBib2R5VmFsdWU7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjc3JmVG9rZW5WZXJpZmllZCxcbiAgICAgICAgY3NyZlRva2VuXG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBjb25zdCBjc3JmVG9rZW4gPSAoMCwgX2NyeXB0by5yYW5kb21CeXRlcykoMzIpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICBjb25zdCBjc3JmVG9rZW5IYXNoID0gKDAsIF9jcnlwdG8uY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApLmRpZ2VzdChcImhleFwiKTtcbiAgY29uc3QgY29va2llID0gYCR7Y3NyZlRva2VufXwke2NzcmZUb2tlbkhhc2h9YDtcbiAgcmV0dXJuIHtcbiAgICBjb29raWUsXG4gICAgY3NyZlRva2VuXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlQ1NSRlRva2VuIiwiX2NyeXB0byIsInJlcXVpcmUiLCJvcHRpb25zIiwiY29va2llVmFsdWUiLCJpc1Bvc3QiLCJib2R5VmFsdWUiLCJjc3JmVG9rZW4iLCJjc3JmVG9rZW5IYXNoIiwic3BsaXQiLCJleHBlY3RlZENzcmZUb2tlbkhhc2giLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwic2VjcmV0IiwiZGlnZXN0IiwiY3NyZlRva2VuVmVyaWZpZWQiLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwiY29va2llIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/csrf-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js":
/*!**************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/default-callbacks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.defaultCallbacks = void 0;\nconst defaultCallbacks = exports.defaultCallbacks = {\n  signIn() {\n    return true;\n  },\n  redirect({\n    url,\n    baseUrl\n  }) {\n    if (url.startsWith(\"/\")) return `${baseUrl}${url}`;else if (new URL(url).origin === baseUrl) return url;\n    return baseUrl;\n  },\n  session({\n    session\n  }) {\n    return session;\n  },\n  jwt({\n    token\n  }) {\n    return token;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2RlZmF1bHQtY2FsbGJhY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0IsR0FBRyxLQUFLLENBQUM7QUFDakMsTUFBTUUsZ0JBQWdCLEdBQUdGLHdCQUF3QixHQUFHO0VBQ2xERyxNQUFNQSxDQUFBLEVBQUc7SUFDUCxPQUFPLElBQUk7RUFDYixDQUFDO0VBQ0RDLFFBQVFBLENBQUM7SUFDUEMsR0FBRztJQUNIQztFQUNGLENBQUMsRUFBRTtJQUNELElBQUlELEdBQUcsQ0FBQ0UsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQVEsR0FBRUQsT0FBUSxHQUFFRCxHQUFJLEVBQUMsQ0FBQyxLQUFLLElBQUksSUFBSUcsR0FBRyxDQUFDSCxHQUFHLENBQUMsQ0FBQ0ksTUFBTSxLQUFLSCxPQUFPLEVBQUUsT0FBT0QsR0FBRztJQUN2RyxPQUFPQyxPQUFPO0VBQ2hCLENBQUM7RUFDREksT0FBT0EsQ0FBQztJQUNOQTtFQUNGLENBQUMsRUFBRTtJQUNELE9BQU9BLE9BQU87RUFDaEIsQ0FBQztFQUNEQyxHQUFHQSxDQUFDO0lBQ0ZDO0VBQ0YsQ0FBQyxFQUFFO0lBQ0QsT0FBT0EsS0FBSztFQUNkO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2RlZmF1bHQtY2FsbGJhY2tzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0Q2FsbGJhY2tzID0gdm9pZCAwO1xuY29uc3QgZGVmYXVsdENhbGxiYWNrcyA9IGV4cG9ydHMuZGVmYXVsdENhbGxiYWNrcyA9IHtcbiAgc2lnbkluKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICByZWRpcmVjdCh7XG4gICAgdXJsLFxuICAgIGJhc2VVcmxcbiAgfSkge1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aChcIi9cIikpIHJldHVybiBgJHtiYXNlVXJsfSR7dXJsfWA7ZWxzZSBpZiAobmV3IFVSTCh1cmwpLm9yaWdpbiA9PT0gYmFzZVVybCkgcmV0dXJuIHVybDtcbiAgICByZXR1cm4gYmFzZVVybDtcbiAgfSxcbiAgc2Vzc2lvbih7XG4gICAgc2Vzc2lvblxuICB9KSB7XG4gICAgcmV0dXJuIHNlc3Npb247XG4gIH0sXG4gIGp3dCh7XG4gICAgdG9rZW5cbiAgfSkge1xuICAgIHJldHVybiB0b2tlbjtcbiAgfVxufTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0Q2FsbGJhY2tzIiwic2lnbkluIiwicmVkaXJlY3QiLCJ1cmwiLCJiYXNlVXJsIiwic3RhcnRzV2l0aCIsIlVSTCIsIm9yaWdpbiIsInNlc3Npb24iLCJqd3QiLCJ0b2tlbiJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/default-callbacks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/getUserFromEmail.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getAdapterUserFromEmail;\nasync function getAdapterUserFromEmail({\n  email,\n  adapter\n}) {\n  const {\n    getUserByEmail\n  } = adapter;\n  const adapterUser = email ? await getUserByEmail(email) : null;\n  if (adapterUser) return adapterUser;\n  return {\n    id: email,\n    email,\n    emailVerified: null\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHLHVCQUF1QjtBQUN6QyxlQUFlQSx1QkFBdUJBLENBQUM7RUFDckNDLEtBQUs7RUFDTEM7QUFDRixDQUFDLEVBQUU7RUFDRCxNQUFNO0lBQ0pDO0VBQ0YsQ0FBQyxHQUFHRCxPQUFPO0VBQ1gsTUFBTUUsV0FBVyxHQUFHSCxLQUFLLEdBQUcsTUFBTUUsY0FBYyxDQUFDRixLQUFLLENBQUMsR0FBRyxJQUFJO0VBQzlELElBQUlHLFdBQVcsRUFBRSxPQUFPQSxXQUFXO0VBQ25DLE9BQU87SUFDTEMsRUFBRSxFQUFFSixLQUFLO0lBQ1RBLEtBQUs7SUFDTEssYUFBYSxFQUFFO0VBQ2pCLENBQUM7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRBZGFwdGVyVXNlckZyb21FbWFpbDtcbmFzeW5jIGZ1bmN0aW9uIGdldEFkYXB0ZXJVc2VyRnJvbUVtYWlsKHtcbiAgZW1haWwsXG4gIGFkYXB0ZXJcbn0pIHtcbiAgY29uc3Qge1xuICAgIGdldFVzZXJCeUVtYWlsXG4gIH0gPSBhZGFwdGVyO1xuICBjb25zdCBhZGFwdGVyVXNlciA9IGVtYWlsID8gYXdhaXQgZ2V0VXNlckJ5RW1haWwoZW1haWwpIDogbnVsbDtcbiAgaWYgKGFkYXB0ZXJVc2VyKSByZXR1cm4gYWRhcHRlclVzZXI7XG4gIHJldHVybiB7XG4gICAgaWQ6IGVtYWlsLFxuICAgIGVtYWlsLFxuICAgIGVtYWlsVmVyaWZpZWQ6IG51bGxcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiZ2V0QWRhcHRlclVzZXJGcm9tRW1haWwiLCJlbWFpbCIsImFkYXB0ZXIiLCJnZXRVc2VyQnlFbWFpbCIsImFkYXB0ZXJVc2VyIiwiaWQiLCJlbWFpbFZlcmlmaWVkIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/email/signin.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/signin.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = email;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function email(identifier, options) {\n  var _await$provider$gener, _provider$generateVer, _provider$maxAge, _adapter$createVerifi;\n  const {\n    url,\n    adapter,\n    provider,\n    callbackUrl,\n    theme\n  } = options;\n  const token = (_await$provider$gener = await ((_provider$generateVer = provider.generateVerificationToken) === null || _provider$generateVer === void 0 ? void 0 : _provider$generateVer.call(provider))) !== null && _await$provider$gener !== void 0 ? _await$provider$gener : (0, _crypto.randomBytes)(32).toString(\"hex\");\n  const ONE_DAY_IN_SECONDS = 86400;\n  const expires = new Date(Date.now() + ((_provider$maxAge = provider.maxAge) !== null && _provider$maxAge !== void 0 ? _provider$maxAge : ONE_DAY_IN_SECONDS) * 1000);\n  const params = new URLSearchParams({\n    callbackUrl,\n    token,\n    email: identifier\n  });\n  const _url = `${url}/callback/${provider.id}?${params}`;\n  await Promise.all([provider.sendVerificationRequest({\n    identifier,\n    token,\n    expires,\n    url: _url,\n    provider,\n    theme\n  }), (_adapter$createVerifi = adapter.createVerificationToken) === null || _adapter$createVerifi === void 0 ? void 0 : _adapter$createVerifi.call(adapter, {\n    identifier,\n    token: (0, _utils.hashToken)(token, options),\n    expires\n  })]);\n  return `${url}/verify-request?${new URLSearchParams({\n    provider: provider.id,\n    type: provider.type\n  })}`;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL3NpZ25pbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csS0FBSztBQUN2QixJQUFJQyxPQUFPLEdBQUdDLG1CQUFPLENBQUMsc0JBQVEsQ0FBQztBQUMvQixJQUFJQyxNQUFNLEdBQUdELG1CQUFPLENBQUMsa0VBQVUsQ0FBQztBQUNoQyxlQUFlRixLQUFLQSxDQUFDSSxVQUFVLEVBQUVDLE9BQU8sRUFBRTtFQUN4QyxJQUFJQyxxQkFBcUIsRUFBRUMscUJBQXFCLEVBQUVDLGdCQUFnQixFQUFFQyxxQkFBcUI7RUFDekYsTUFBTTtJQUNKQyxHQUFHO0lBQ0hDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDO0VBQ0YsQ0FBQyxHQUFHVCxPQUFPO0VBQ1gsTUFBTVUsS0FBSyxHQUFHLENBQUNULHFCQUFxQixHQUFHLE9BQU8sQ0FBQ0MscUJBQXFCLEdBQUdLLFFBQVEsQ0FBQ0kseUJBQXlCLE1BQU0sSUFBSSxJQUFJVCxxQkFBcUIsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EscUJBQXFCLENBQUNVLElBQUksQ0FBQ0wsUUFBUSxDQUFDLENBQUMsTUFBTSxJQUFJLElBQUlOLHFCQUFxQixLQUFLLEtBQUssQ0FBQyxHQUFHQSxxQkFBcUIsR0FBRyxDQUFDLENBQUMsRUFBRUwsT0FBTyxDQUFDaUIsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUMsS0FBSyxDQUFDO0VBQzdULE1BQU1DLGtCQUFrQixHQUFHLEtBQUs7RUFDaEMsTUFBTUMsT0FBTyxHQUFHLElBQUlDLElBQUksQ0FBQ0EsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQ2YsZ0JBQWdCLEdBQUdJLFFBQVEsQ0FBQ1ksTUFBTSxNQUFNLElBQUksSUFBSWhCLGdCQUFnQixLQUFLLEtBQUssQ0FBQyxHQUFHQSxnQkFBZ0IsR0FBR1ksa0JBQWtCLElBQUksSUFBSSxDQUFDO0VBQ3BLLE1BQU1LLE1BQU0sR0FBRyxJQUFJQyxlQUFlLENBQUM7SUFDakNiLFdBQVc7SUFDWEUsS0FBSztJQUNMZixLQUFLLEVBQUVJO0VBQ1QsQ0FBQyxDQUFDO0VBQ0YsTUFBTXVCLElBQUksR0FBSSxHQUFFakIsR0FBSSxhQUFZRSxRQUFRLENBQUNnQixFQUFHLElBQUdILE1BQU8sRUFBQztFQUN2RCxNQUFNSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFDbEIsUUFBUSxDQUFDbUIsdUJBQXVCLENBQUM7SUFDbEQzQixVQUFVO0lBQ1ZXLEtBQUs7SUFDTE0sT0FBTztJQUNQWCxHQUFHLEVBQUVpQixJQUFJO0lBQ1RmLFFBQVE7SUFDUkU7RUFDRixDQUFDLENBQUMsRUFBRSxDQUFDTCxxQkFBcUIsR0FBR0UsT0FBTyxDQUFDcUIsdUJBQXVCLE1BQU0sSUFBSSxJQUFJdkIscUJBQXFCLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLHFCQUFxQixDQUFDUSxJQUFJLENBQUNOLE9BQU8sRUFBRTtJQUN4SlAsVUFBVTtJQUNWVyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUVaLE1BQU0sQ0FBQzhCLFNBQVMsRUFBRWxCLEtBQUssRUFBRVYsT0FBTyxDQUFDO0lBQzVDZ0I7RUFDRixDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ0osT0FBUSxHQUFFWCxHQUFJLG1CQUFrQixJQUFJZ0IsZUFBZSxDQUFDO0lBQ2xEZCxRQUFRLEVBQUVBLFFBQVEsQ0FBQ2dCLEVBQUU7SUFDckJNLElBQUksRUFBRXRCLFFBQVEsQ0FBQ3NCO0VBQ2pCLENBQUMsQ0FBRSxFQUFDO0FBQ04iLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9lbWFpbC9zaWduaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBlbWFpbDtcbnZhciBfY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG5hc3luYyBmdW5jdGlvbiBlbWFpbChpZGVudGlmaWVyLCBvcHRpb25zKSB7XG4gIHZhciBfYXdhaXQkcHJvdmlkZXIkZ2VuZXIsIF9wcm92aWRlciRnZW5lcmF0ZVZlciwgX3Byb3ZpZGVyJG1heEFnZSwgX2FkYXB0ZXIkY3JlYXRlVmVyaWZpO1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGFkYXB0ZXIsXG4gICAgcHJvdmlkZXIsXG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdGhlbWVcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHRva2VuID0gKF9hd2FpdCRwcm92aWRlciRnZW5lciA9IGF3YWl0ICgoX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID0gcHJvdmlkZXIuZ2VuZXJhdGVWZXJpZmljYXRpb25Ub2tlbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkZ2VuZXJhdGVWZXIuY2FsbChwcm92aWRlcikpKSAhPT0gbnVsbCAmJiBfYXdhaXQkcHJvdmlkZXIkZ2VuZXIgIT09IHZvaWQgMCA/IF9hd2FpdCRwcm92aWRlciRnZW5lciA6ICgwLCBfY3J5cHRvLnJhbmRvbUJ5dGVzKSgzMikudG9TdHJpbmcoXCJoZXhcIik7XG4gIGNvbnN0IE9ORV9EQVlfSU5fU0VDT05EUyA9IDg2NDAwO1xuICBjb25zdCBleHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArICgoX3Byb3ZpZGVyJG1heEFnZSA9IHByb3ZpZGVyLm1heEFnZSkgIT09IG51bGwgJiYgX3Byb3ZpZGVyJG1heEFnZSAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJG1heEFnZSA6IE9ORV9EQVlfSU5fU0VDT05EUykgKiAxMDAwKTtcbiAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdG9rZW4sXG4gICAgZW1haWw6IGlkZW50aWZpZXJcbiAgfSk7XG4gIGNvbnN0IF91cmwgPSBgJHt1cmx9L2NhbGxiYWNrLyR7cHJvdmlkZXIuaWR9PyR7cGFyYW1zfWA7XG4gIGF3YWl0IFByb21pc2UuYWxsKFtwcm92aWRlci5zZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCh7XG4gICAgaWRlbnRpZmllcixcbiAgICB0b2tlbixcbiAgICBleHBpcmVzLFxuICAgIHVybDogX3VybCxcbiAgICBwcm92aWRlcixcbiAgICB0aGVtZVxuICB9KSwgKF9hZGFwdGVyJGNyZWF0ZVZlcmlmaSA9IGFkYXB0ZXIuY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4pID09PSBudWxsIHx8IF9hZGFwdGVyJGNyZWF0ZVZlcmlmaSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FkYXB0ZXIkY3JlYXRlVmVyaWZpLmNhbGwoYWRhcHRlciwge1xuICAgIGlkZW50aWZpZXIsXG4gICAgdG9rZW46ICgwLCBfdXRpbHMuaGFzaFRva2VuKSh0b2tlbiwgb3B0aW9ucyksXG4gICAgZXhwaXJlc1xuICB9KV0pO1xuICByZXR1cm4gYCR7dXJsfS92ZXJpZnktcmVxdWVzdD8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIHByb3ZpZGVyOiBwcm92aWRlci5pZCxcbiAgICB0eXBlOiBwcm92aWRlci50eXBlXG4gIH0pfWA7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImVtYWlsIiwiX2NyeXB0byIsInJlcXVpcmUiLCJfdXRpbHMiLCJpZGVudGlmaWVyIiwib3B0aW9ucyIsIl9hd2FpdCRwcm92aWRlciRnZW5lciIsIl9wcm92aWRlciRnZW5lcmF0ZVZlciIsIl9wcm92aWRlciRtYXhBZ2UiLCJfYWRhcHRlciRjcmVhdGVWZXJpZmkiLCJ1cmwiLCJhZGFwdGVyIiwicHJvdmlkZXIiLCJjYWxsYmFja1VybCIsInRoZW1lIiwidG9rZW4iLCJnZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuIiwiY2FsbCIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJPTkVfREFZX0lOX1NFQ09ORFMiLCJleHBpcmVzIiwiRGF0ZSIsIm5vdyIsIm1heEFnZSIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsIl91cmwiLCJpZCIsIlByb21pc2UiLCJhbGwiLCJzZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCIsImNyZWF0ZVZlcmlmaWNhdGlvblRva2VuIiwiaGFzaFRva2VuIiwidHlwZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/email/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js":
/*!********************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/authorization-url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getAuthorizationUrl;\nvar _client = __webpack_require__(/*! ./client */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nasync function getAuthorizationUrl({\n  options,\n  query\n}) {\n  var _provider$version;\n  const {\n    logger,\n    provider\n  } = options;\n  let params = {};\n  if (typeof provider.authorization === \"string\") {\n    const parsedUrl = new URL(provider.authorization);\n    const parsedParams = Object.fromEntries(parsedUrl.searchParams);\n    params = _objectSpread(_objectSpread({}, params), parsedParams);\n  } else {\n    var _provider$authorizati;\n    params = _objectSpread(_objectSpread({}, params), (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.params);\n  }\n  params = _objectSpread(_objectSpread({}, params), query);\n  if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n    var _provider$authorizati2;\n    const client = (0, _clientLegacy.oAuth1Client)(options);\n    const tokens = await client.getOAuthRequestToken(params);\n    const url = `${(_provider$authorizati2 = provider.authorization) === null || _provider$authorizati2 === void 0 ? void 0 : _provider$authorizati2.url}?${new URLSearchParams(_objectSpread({\n      oauth_token: tokens.oauth_token,\n      oauth_token_secret: tokens.oauth_token_secret\n    }, tokens.params))}`;\n    _clientLegacy.oAuth1TokenStore.set(tokens.oauth_token, tokens.oauth_token_secret);\n    logger.debug(\"GET_AUTHORIZATION_URL\", {\n      url,\n      provider\n    });\n    return {\n      redirect: url\n    };\n  }\n  const client = await (0, _client.openidClient)(options);\n  const authorizationParams = params;\n  const cookies = [];\n  await checks.state.create(options, cookies, authorizationParams);\n  await checks.pkce.create(options, cookies, authorizationParams);\n  await checks.nonce.create(options, cookies, authorizationParams);\n  const url = client.authorizationUrl(authorizationParams);\n  logger.debug(\"GET_AUTHORIZATION_URL\", {\n    url,\n    cookies,\n    provider\n  });\n  return {\n    redirect: url,\n    cookies\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js":
/*!***********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/callback.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = oAuthCallback;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nvar _client = __webpack_require__(/*! ./client */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar _checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nvar _errors = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nasync function oAuthCallback(params) {\n  var _body$error, _provider$version;\n  const {\n    options,\n    query,\n    body,\n    method,\n    cookies\n  } = params;\n  const {\n    logger,\n    provider\n  } = options;\n  const errorMessage = (_body$error = body === null || body === void 0 ? void 0 : body.error) !== null && _body$error !== void 0 ? _body$error : query === null || query === void 0 ? void 0 : query.error;\n  if (errorMessage) {\n    const error = new Error(errorMessage);\n    logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n      error,\n      error_description: query === null || query === void 0 ? void 0 : query.error_description,\n      providerId: provider.id\n    });\n    logger.debug(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n      body\n    });\n    throw error;\n  }\n  if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n    try {\n      const client = await (0, _clientLegacy.oAuth1Client)(options);\n      const {\n        oauth_token,\n        oauth_verifier\n      } = query !== null && query !== void 0 ? query : {};\n      const tokens = await client.getOAuthAccessToken(oauth_token, _clientLegacy.oAuth1TokenStore.get(oauth_token), oauth_verifier);\n      let profile = await client.get(provider.profileUrl, tokens.oauth_token, tokens.oauth_token_secret);\n      if (typeof profile === \"string\") {\n        profile = JSON.parse(profile);\n      }\n      const newProfile = await getProfile({\n        profile,\n        tokens,\n        provider,\n        logger\n      });\n      return _objectSpread(_objectSpread({}, newProfile), {}, {\n        cookies: []\n      });\n    } catch (error) {\n      logger.error(\"OAUTH_V1_GET_ACCESS_TOKEN_ERROR\", error);\n      throw error;\n    }\n  }\n  if (query !== null && query !== void 0 && query.oauth_token) _clientLegacy.oAuth1TokenStore.delete(query.oauth_token);\n  try {\n    var _provider$token, _provider$token2, _provider$userinfo;\n    const client = await (0, _client.openidClient)(options);\n    let tokens;\n    const checks = {};\n    const resCookies = [];\n    await _checks.state.use(cookies, resCookies, options, checks);\n    await _checks.pkce.use(cookies, resCookies, options, checks);\n    await _checks.nonce.use(cookies, resCookies, options, checks);\n    const params = _objectSpread(_objectSpread({}, client.callbackParams({\n      url: `http://n?${new URLSearchParams(query)}`,\n      body,\n      method\n    })), (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.params);\n    if ((_provider$token2 = provider.token) !== null && _provider$token2 !== void 0 && _provider$token2.request) {\n      const response = await provider.token.request({\n        provider,\n        params,\n        checks,\n        client\n      });\n      tokens = new _openidClient.TokenSet(response.tokens);\n    } else if (provider.idToken) {\n      tokens = await client.callback(provider.callbackUrl, params, checks);\n    } else {\n      tokens = await client.oauthCallback(provider.callbackUrl, params, checks);\n    }\n    if (Array.isArray(tokens.scope)) {\n      tokens.scope = tokens.scope.join(\" \");\n    }\n    let profile;\n    if ((_provider$userinfo = provider.userinfo) !== null && _provider$userinfo !== void 0 && _provider$userinfo.request) {\n      profile = await provider.userinfo.request({\n        provider,\n        tokens,\n        client\n      });\n    } else if (provider.idToken) {\n      profile = tokens.claims();\n    } else {\n      var _provider$userinfo2;\n      profile = await client.userinfo(tokens, {\n        params: (_provider$userinfo2 = provider.userinfo) === null || _provider$userinfo2 === void 0 ? void 0 : _provider$userinfo2.params\n      });\n    }\n    const profileResult = await getProfile({\n      profile,\n      provider,\n      tokens,\n      logger\n    });\n    return _objectSpread(_objectSpread({}, profileResult), {}, {\n      cookies: resCookies\n    });\n  } catch (error) {\n    throw new _errors.OAuthCallbackError(error);\n  }\n}\nasync function getProfile({\n  profile: OAuthProfile,\n  tokens,\n  provider,\n  logger\n}) {\n  try {\n    var _profile$email;\n    logger.debug(\"PROFILE_DATA\", {\n      OAuthProfile\n    });\n    const profile = await provider.profile(OAuthProfile, tokens);\n    profile.email = (_profile$email = profile.email) === null || _profile$email === void 0 ? void 0 : _profile$email.toLowerCase();\n    if (!profile.id) throw new TypeError(`Profile id is missing in ${provider.name} OAuth profile response`);\n    return {\n      profile,\n      account: _objectSpread({\n        provider: provider.id,\n        type: provider.type,\n        providerAccountId: profile.id.toString()\n      }, tokens),\n      OAuthProfile\n    };\n  } catch (error) {\n    logger.error(\"OAUTH_PARSE_PROFILE_ERROR\", {\n      error: error,\n      OAuthProfile\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/checks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.pkce = exports.nonce = exports.PKCE_CODE_CHALLENGE_METHOD = void 0;\nexports.signCookie = signCookie;\nexports.state = void 0;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../../../jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\"));\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nasync function signCookie(type, value, maxAge, options) {\n  const {\n    cookies,\n    logger\n  } = options;\n  logger.debug(`CREATE_${type.toUpperCase()}`, {\n    value,\n    maxAge\n  });\n  const {\n    name\n  } = cookies[type];\n  const expires = new Date();\n  expires.setTime(expires.getTime() + maxAge * 1000);\n  return {\n    name,\n    value: await jwt.encode(_objectSpread(_objectSpread({}, options.jwt), {}, {\n      maxAge,\n      token: {\n        value\n      },\n      salt: name\n    })),\n    options: _objectSpread(_objectSpread({}, cookies[type].options), {}, {\n      expires\n    })\n  };\n}\nconst PKCE_MAX_AGE = 60 * 15;\nconst PKCE_CODE_CHALLENGE_METHOD = exports.PKCE_CODE_CHALLENGE_METHOD = \"S256\";\nconst pkce = exports.pkce = {\n  async create(options, cookies, resParams) {\n    var _options$provider, _options$cookies$pkce;\n    if (!((_options$provider = options.provider) !== null && _options$provider !== void 0 && (_options$provider = _options$provider.checks) !== null && _options$provider !== void 0 && _options$provider.includes(\"pkce\"))) return;\n    const code_verifier = _openidClient.generators.codeVerifier();\n    const value = _openidClient.generators.codeChallenge(code_verifier);\n    resParams.code_challenge = value;\n    resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD;\n    const maxAge = (_options$cookies$pkce = options.cookies.pkceCodeVerifier.options.maxAge) !== null && _options$cookies$pkce !== void 0 ? _options$cookies$pkce : PKCE_MAX_AGE;\n    cookies.push(await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options));\n  },\n  async use(cookies, resCookies, options, checks) {\n    var _options$provider2;\n    if (!((_options$provider2 = options.provider) !== null && _options$provider2 !== void 0 && (_options$provider2 = _options$provider2.checks) !== null && _options$provider2 !== void 0 && _options$provider2.includes(\"pkce\"))) return;\n    const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];\n    if (!codeVerifier) throw new TypeError(\"PKCE code_verifier cookie was missing.\");\n    const {\n      name\n    } = options.cookies.pkceCodeVerifier;\n    const value = await jwt.decode(_objectSpread(_objectSpread({}, options.jwt), {}, {\n      token: codeVerifier,\n      salt: name\n    }));\n    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"PKCE code_verifier value could not be parsed.\");\n    resCookies.push({\n      name,\n      value: \"\",\n      options: _objectSpread(_objectSpread({}, options.cookies.pkceCodeVerifier.options), {}, {\n        maxAge: 0\n      })\n    });\n    checks.code_verifier = value.value;\n  }\n};\nconst STATE_MAX_AGE = 60 * 15;\nconst state = exports.state = {\n  async create(options, cookies, resParams) {\n    var _options$provider$che, _options$cookies$stat;\n    if (!((_options$provider$che = options.provider.checks) !== null && _options$provider$che !== void 0 && _options$provider$che.includes(\"state\"))) return;\n    const value = _openidClient.generators.state();\n    resParams.state = value;\n    const maxAge = (_options$cookies$stat = options.cookies.state.options.maxAge) !== null && _options$cookies$stat !== void 0 ? _options$cookies$stat : STATE_MAX_AGE;\n    cookies.push(await signCookie(\"state\", value, maxAge, options));\n  },\n  async use(cookies, resCookies, options, checks) {\n    var _options$provider$che2;\n    if (!((_options$provider$che2 = options.provider.checks) !== null && _options$provider$che2 !== void 0 && _options$provider$che2.includes(\"state\"))) return;\n    const state = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name];\n    if (!state) throw new TypeError(\"State cookie was missing.\");\n    const {\n      name\n    } = options.cookies.state;\n    const value = await jwt.decode(_objectSpread(_objectSpread({}, options.jwt), {}, {\n      token: state,\n      salt: name\n    }));\n    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"State value could not be parsed.\");\n    resCookies.push({\n      name,\n      value: \"\",\n      options: _objectSpread(_objectSpread({}, options.cookies.state.options), {}, {\n        maxAge: 0\n      })\n    });\n    checks.state = value.value;\n  }\n};\nconst NONCE_MAX_AGE = 60 * 15;\nconst nonce = exports.nonce = {\n  async create(options, cookies, resParams) {\n    var _options$provider$che3, _options$cookies$nonc;\n    if (!((_options$provider$che3 = options.provider.checks) !== null && _options$provider$che3 !== void 0 && _options$provider$che3.includes(\"nonce\"))) return;\n    const value = _openidClient.generators.nonce();\n    resParams.nonce = value;\n    const maxAge = (_options$cookies$nonc = options.cookies.nonce.options.maxAge) !== null && _options$cookies$nonc !== void 0 ? _options$cookies$nonc : NONCE_MAX_AGE;\n    cookies.push(await signCookie(\"nonce\", value, maxAge, options));\n  },\n  async use(cookies, resCookies, options, checks) {\n    var _options$provider3;\n    if (!((_options$provider3 = options.provider) !== null && _options$provider3 !== void 0 && (_options$provider3 = _options$provider3.checks) !== null && _options$provider3 !== void 0 && _options$provider3.includes(\"nonce\"))) return;\n    const nonce = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name];\n    if (!nonce) throw new TypeError(\"Nonce cookie was missing.\");\n    const {\n      name\n    } = options.cookies.nonce;\n    const value = await jwt.decode(_objectSpread(_objectSpread({}, options.jwt), {}, {\n      token: nonce,\n      salt: name\n    }));\n    if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"Nonce value could not be parsed.\");\n    resCookies.push({\n      name,\n      value: \"\",\n      options: _objectSpread(_objectSpread({}, options.cookies.nonce.options), {}, {\n        maxAge: 0\n      })\n    });\n    checks.nonce = value.value;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/checks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js":
/*!****************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client-legacy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.oAuth1Client = oAuth1Client;\nexports.oAuth1TokenStore = void 0;\nvar _oauth = __webpack_require__(/*! oauth */ \"(rsc)/./node_modules/oauth/index.js\");\nfunction oAuth1Client(options) {\n  var _provider$version, _provider$encoding;\n  const provider = options.provider;\n  const oauth1Client = new _oauth.OAuth(provider.requestTokenUrl, provider.accessTokenUrl, provider.clientId, provider.clientSecret, (_provider$version = provider.version) !== null && _provider$version !== void 0 ? _provider$version : \"1.0\", provider.callbackUrl, (_provider$encoding = provider.encoding) !== null && _provider$encoding !== void 0 ? _provider$encoding : \"HMAC-SHA1\");\n  const originalGet = oauth1Client.get.bind(oauth1Client);\n  oauth1Client.get = async (...args) => {\n    return await new Promise((resolve, reject) => {\n      originalGet(...args, (error, result) => {\n        if (error) {\n          return reject(error);\n        }\n        resolve(result);\n      });\n    });\n  };\n  const originalGetOAuth1AccessToken = oauth1Client.getOAuthAccessToken.bind(oauth1Client);\n  oauth1Client.getOAuthAccessToken = async (...args) => {\n    return await new Promise((resolve, reject) => {\n      originalGetOAuth1AccessToken(...args, (error, oauth_token, oauth_token_secret) => {\n        if (error) {\n          return reject(error);\n        }\n        resolve({\n          oauth_token,\n          oauth_token_secret\n        });\n      });\n    });\n  };\n  const originalGetOAuthRequestToken = oauth1Client.getOAuthRequestToken.bind(oauth1Client);\n  oauth1Client.getOAuthRequestToken = async (params = {}) => {\n    return await new Promise((resolve, reject) => {\n      originalGetOAuthRequestToken(params, (error, oauth_token, oauth_token_secret, params) => {\n        if (error) {\n          return reject(error);\n        }\n        resolve({\n          oauth_token,\n          oauth_token_secret,\n          params\n        });\n      });\n    });\n  };\n  return oauth1Client;\n}\nconst oAuth1TokenStore = exports.oAuth1TokenStore = new Map();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQixHQUFHRSxZQUFZO0FBQ25DRix3QkFBd0IsR0FBRyxLQUFLLENBQUM7QUFDakMsSUFBSUksTUFBTSxHQUFHQyxtQkFBTyxDQUFDLGtEQUFPLENBQUM7QUFDN0IsU0FBU0gsWUFBWUEsQ0FBQ0ksT0FBTyxFQUFFO0VBQzdCLElBQUlDLGlCQUFpQixFQUFFQyxrQkFBa0I7RUFDekMsTUFBTUMsUUFBUSxHQUFHSCxPQUFPLENBQUNHLFFBQVE7RUFDakMsTUFBTUMsWUFBWSxHQUFHLElBQUlOLE1BQU0sQ0FBQ08sS0FBSyxDQUFDRixRQUFRLENBQUNHLGVBQWUsRUFBRUgsUUFBUSxDQUFDSSxjQUFjLEVBQUVKLFFBQVEsQ0FBQ0ssUUFBUSxFQUFFTCxRQUFRLENBQUNNLFlBQVksRUFBRSxDQUFDUixpQkFBaUIsR0FBR0UsUUFBUSxDQUFDTyxPQUFPLE1BQU0sSUFBSSxJQUFJVCxpQkFBaUIsS0FBSyxLQUFLLENBQUMsR0FBR0EsaUJBQWlCLEdBQUcsS0FBSyxFQUFFRSxRQUFRLENBQUNRLFdBQVcsRUFBRSxDQUFDVCxrQkFBa0IsR0FBR0MsUUFBUSxDQUFDUyxRQUFRLE1BQU0sSUFBSSxJQUFJVixrQkFBa0IsS0FBSyxLQUFLLENBQUMsR0FBR0Esa0JBQWtCLEdBQUcsV0FBVyxDQUFDO0VBQzVYLE1BQU1XLFdBQVcsR0FBR1QsWUFBWSxDQUFDVSxHQUFHLENBQUNDLElBQUksQ0FBQ1gsWUFBWSxDQUFDO0VBQ3ZEQSxZQUFZLENBQUNVLEdBQUcsR0FBRyxPQUFPLEdBQUdFLElBQUksS0FBSztJQUNwQyxPQUFPLE1BQU0sSUFBSUMsT0FBTyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxLQUFLO01BQzVDTixXQUFXLENBQUMsR0FBR0csSUFBSSxFQUFFLENBQUNJLEtBQUssRUFBRUMsTUFBTSxLQUFLO1FBQ3RDLElBQUlELEtBQUssRUFBRTtVQUNULE9BQU9ELE1BQU0sQ0FBQ0MsS0FBSyxDQUFDO1FBQ3RCO1FBQ0FGLE9BQU8sQ0FBQ0csTUFBTSxDQUFDO01BQ2pCLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxNQUFNQyw0QkFBNEIsR0FBR2xCLFlBQVksQ0FBQ21CLG1CQUFtQixDQUFDUixJQUFJLENBQUNYLFlBQVksQ0FBQztFQUN4RkEsWUFBWSxDQUFDbUIsbUJBQW1CLEdBQUcsT0FBTyxHQUFHUCxJQUFJLEtBQUs7SUFDcEQsT0FBTyxNQUFNLElBQUlDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztNQUM1Q0csNEJBQTRCLENBQUMsR0FBR04sSUFBSSxFQUFFLENBQUNJLEtBQUssRUFBRUksV0FBVyxFQUFFQyxrQkFBa0IsS0FBSztRQUNoRixJQUFJTCxLQUFLLEVBQUU7VUFDVCxPQUFPRCxNQUFNLENBQUNDLEtBQUssQ0FBQztRQUN0QjtRQUNBRixPQUFPLENBQUM7VUFDTk0sV0FBVztVQUNYQztRQUNGLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxNQUFNQyw0QkFBNEIsR0FBR3RCLFlBQVksQ0FBQ3VCLG9CQUFvQixDQUFDWixJQUFJLENBQUNYLFlBQVksQ0FBQztFQUN6RkEsWUFBWSxDQUFDdUIsb0JBQW9CLEdBQUcsT0FBT0MsTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLO0lBQ3pELE9BQU8sTUFBTSxJQUFJWCxPQUFPLENBQUMsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEtBQUs7TUFDNUNPLDRCQUE0QixDQUFDRSxNQUFNLEVBQUUsQ0FBQ1IsS0FBSyxFQUFFSSxXQUFXLEVBQUVDLGtCQUFrQixFQUFFRyxNQUFNLEtBQUs7UUFDdkYsSUFBSVIsS0FBSyxFQUFFO1VBQ1QsT0FBT0QsTUFBTSxDQUFDQyxLQUFLLENBQUM7UUFDdEI7UUFDQUYsT0FBTyxDQUFDO1VBQ05NLFdBQVc7VUFDWEMsa0JBQWtCO1VBQ2xCRztRQUNGLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUM7RUFDRCxPQUFPeEIsWUFBWTtBQUNyQjtBQUNBLE1BQU1QLGdCQUFnQixHQUFHSCx3QkFBd0IsR0FBRyxJQUFJbUMsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9vYXV0aC9jbGllbnQtbGVnYWN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5vQXV0aDFDbGllbnQgPSBvQXV0aDFDbGllbnQ7XG5leHBvcnRzLm9BdXRoMVRva2VuU3RvcmUgPSB2b2lkIDA7XG52YXIgX29hdXRoID0gcmVxdWlyZShcIm9hdXRoXCIpO1xuZnVuY3Rpb24gb0F1dGgxQ2xpZW50KG9wdGlvbnMpIHtcbiAgdmFyIF9wcm92aWRlciR2ZXJzaW9uLCBfcHJvdmlkZXIkZW5jb2Rpbmc7XG4gIGNvbnN0IHByb3ZpZGVyID0gb3B0aW9ucy5wcm92aWRlcjtcbiAgY29uc3Qgb2F1dGgxQ2xpZW50ID0gbmV3IF9vYXV0aC5PQXV0aChwcm92aWRlci5yZXF1ZXN0VG9rZW5VcmwsIHByb3ZpZGVyLmFjY2Vzc1Rva2VuVXJsLCBwcm92aWRlci5jbGllbnRJZCwgcHJvdmlkZXIuY2xpZW50U2VjcmV0LCAoX3Byb3ZpZGVyJHZlcnNpb24gPSBwcm92aWRlci52ZXJzaW9uKSAhPT0gbnVsbCAmJiBfcHJvdmlkZXIkdmVyc2lvbiAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJHZlcnNpb24gOiBcIjEuMFwiLCBwcm92aWRlci5jYWxsYmFja1VybCwgKF9wcm92aWRlciRlbmNvZGluZyA9IHByb3ZpZGVyLmVuY29kaW5nKSAhPT0gbnVsbCAmJiBfcHJvdmlkZXIkZW5jb2RpbmcgIT09IHZvaWQgMCA/IF9wcm92aWRlciRlbmNvZGluZyA6IFwiSE1BQy1TSEExXCIpO1xuICBjb25zdCBvcmlnaW5hbEdldCA9IG9hdXRoMUNsaWVudC5nZXQuYmluZChvYXV0aDFDbGllbnQpO1xuICBvYXV0aDFDbGllbnQuZ2V0ID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXQoLi4uYXJncywgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9yaWdpbmFsR2V0T0F1dGgxQWNjZXNzVG9rZW4gPSBvYXV0aDFDbGllbnQuZ2V0T0F1dGhBY2Nlc3NUb2tlbi5iaW5kKG9hdXRoMUNsaWVudCk7XG4gIG9hdXRoMUNsaWVudC5nZXRPQXV0aEFjY2Vzc1Rva2VuID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiguLi5hcmdzLCAoZXJyb3IsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgb2F1dGhfdG9rZW4sXG4gICAgICAgICAgb2F1dGhfdG9rZW5fc2VjcmV0XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IG9yaWdpbmFsR2V0T0F1dGhSZXF1ZXN0VG9rZW4gPSBvYXV0aDFDbGllbnQuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4uYmluZChvYXV0aDFDbGllbnQpO1xuICBvYXV0aDFDbGllbnQuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4gPSBhc3luYyAocGFyYW1zID0ge30pID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aFJlcXVlc3RUb2tlbihwYXJhbXMsIChlcnJvciwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgcGFyYW1zKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgIG9hdXRoX3Rva2VuLFxuICAgICAgICAgIG9hdXRoX3Rva2VuX3NlY3JldCxcbiAgICAgICAgICBwYXJhbXNcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIG9hdXRoMUNsaWVudDtcbn1cbmNvbnN0IG9BdXRoMVRva2VuU3RvcmUgPSBleHBvcnRzLm9BdXRoMVRva2VuU3RvcmUgPSBuZXcgTWFwKCk7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwib0F1dGgxQ2xpZW50Iiwib0F1dGgxVG9rZW5TdG9yZSIsIl9vYXV0aCIsInJlcXVpcmUiLCJvcHRpb25zIiwiX3Byb3ZpZGVyJHZlcnNpb24iLCJfcHJvdmlkZXIkZW5jb2RpbmciLCJwcm92aWRlciIsIm9hdXRoMUNsaWVudCIsIk9BdXRoIiwicmVxdWVzdFRva2VuVXJsIiwiYWNjZXNzVG9rZW5VcmwiLCJjbGllbnRJZCIsImNsaWVudFNlY3JldCIsInZlcnNpb24iLCJjYWxsYmFja1VybCIsImVuY29kaW5nIiwib3JpZ2luYWxHZXQiLCJnZXQiLCJiaW5kIiwiYXJncyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyb3IiLCJyZXN1bHQiLCJvcmlnaW5hbEdldE9BdXRoMUFjY2Vzc1Rva2VuIiwiZ2V0T0F1dGhBY2Nlc3NUb2tlbiIsIm9hdXRoX3Rva2VuIiwib2F1dGhfdG9rZW5fc2VjcmV0Iiwib3JpZ2luYWxHZXRPQXV0aFJlcXVlc3RUb2tlbiIsImdldE9BdXRoUmVxdWVzdFRva2VuIiwicGFyYW1zIiwiTWFwIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/oauth/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.openidClient = openidClient;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(rsc)/./node_modules/openid-client/lib/index.js\");\nasync function openidClient(options) {\n  const provider = options.provider;\n  if (provider.httpOptions) _openidClient.custom.setHttpOptionsDefaults(provider.httpOptions);\n  let issuer;\n  if (provider.wellKnown) {\n    issuer = await _openidClient.Issuer.discover(provider.wellKnown);\n  } else {\n    var _provider$authorizati, _provider$token, _provider$userinfo;\n    issuer = new _openidClient.Issuer({\n      issuer: provider.issuer,\n      authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,\n      token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,\n      userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,\n      jwks_uri: provider.jwks_endpoint\n    });\n  }\n  const client = new issuer.Client(_objectSpread({\n    client_id: provider.clientId,\n    client_secret: provider.clientSecret,\n    redirect_uris: [provider.callbackUrl]\n  }, provider.client), provider.jwks);\n  client[_openidClient.custom.clock_tolerance] = 10;\n  return client;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFBQSxTQUFBQSxRQUFBQyxDQUFBLEVBQUFDLENBQUEsUUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLElBQUEsQ0FBQUosQ0FBQSxPQUFBRyxNQUFBLENBQUFFLHFCQUFBLFFBQUFDLENBQUEsR0FBQUgsTUFBQSxDQUFBRSxxQkFBQSxDQUFBTCxDQUFBLEdBQUFDLENBQUEsS0FBQUssQ0FBQSxHQUFBQSxDQUFBLENBQUFDLE1BQUEsV0FBQU4sQ0FBQSxXQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFSLENBQUEsRUFBQUMsQ0FBQSxFQUFBUSxVQUFBLE9BQUFQLENBQUEsQ0FBQVEsSUFBQSxDQUFBQyxLQUFBLENBQUFULENBQUEsRUFBQUksQ0FBQSxZQUFBSixDQUFBO0FBQUEsU0FBQVUsY0FBQVosQ0FBQSxhQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQVksU0FBQSxDQUFBQyxNQUFBLEVBQUFiLENBQUEsVUFBQUMsQ0FBQSxXQUFBVyxTQUFBLENBQUFaLENBQUEsSUFBQVksU0FBQSxDQUFBWixDQUFBLFFBQUFBLENBQUEsT0FBQUYsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsT0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFlLGVBQUEsQ0FBQWhCLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLENBQUFELENBQUEsU0FBQUUsTUFBQSxDQUFBYyx5QkFBQSxHQUFBZCxNQUFBLENBQUFlLGdCQUFBLENBQUFsQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWMseUJBQUEsQ0FBQWYsQ0FBQSxLQUFBSCxPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxHQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQUUsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBbkIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQU4sQ0FBQSxFQUFBRCxDQUFBLGlCQUFBRCxDQUFBO0FBQUEsU0FBQWdCLGdCQUFBSSxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsS0FBQSxJQUFBRCxHQUFBLEdBQUFFLGNBQUEsQ0FBQUYsR0FBQSxPQUFBQSxHQUFBLElBQUFELEdBQUEsSUFBQWpCLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQUMsR0FBQSxFQUFBQyxHQUFBLElBQUFDLEtBQUEsRUFBQUEsS0FBQSxFQUFBYixVQUFBLFFBQUFlLFlBQUEsUUFBQUMsUUFBQSxvQkFBQUwsR0FBQSxDQUFBQyxHQUFBLElBQUFDLEtBQUEsV0FBQUYsR0FBQTtBQUFBLFNBQUFHLGVBQUFHLEdBQUEsUUFBQUwsR0FBQSxHQUFBTSxZQUFBLENBQUFELEdBQUEsMkJBQUFMLEdBQUEsZ0JBQUFBLEdBQUEsR0FBQU8sTUFBQSxDQUFBUCxHQUFBO0FBQUEsU0FBQU0sYUFBQUUsS0FBQSxFQUFBQyxJQUFBLGVBQUFELEtBQUEsaUJBQUFBLEtBQUEsa0JBQUFBLEtBQUEsTUFBQUUsSUFBQSxHQUFBRixLQUFBLENBQUFHLE1BQUEsQ0FBQUMsV0FBQSxPQUFBRixJQUFBLEtBQUFHLFNBQUEsUUFBQUMsR0FBQSxHQUFBSixJQUFBLENBQUFLLElBQUEsQ0FBQVAsS0FBQSxFQUFBQyxJQUFBLDJCQUFBSyxHQUFBLHNCQUFBQSxHQUFBLFlBQUFFLFNBQUEsNERBQUFQLElBQUEsZ0JBQUFGLE1BQUEsR0FBQVUsTUFBQSxFQUFBVCxLQUFBO0FBRWIxQiw4Q0FBNkM7RUFDM0NtQixLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRmlCLG9CQUFvQixHQUFHQyxZQUFZO0FBQ25DLElBQUlDLGFBQWEsR0FBR0MsbUJBQU8sQ0FBQyxzRUFBZSxDQUFDO0FBQzVDLGVBQWVGLFlBQVlBLENBQUNHLE9BQU8sRUFBRTtFQUNuQyxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQ0MsUUFBUTtFQUNqQyxJQUFJQSxRQUFRLENBQUNDLFdBQVcsRUFBRUosYUFBYSxDQUFDSyxNQUFNLENBQUNDLHNCQUFzQixDQUFDSCxRQUFRLENBQUNDLFdBQVcsQ0FBQztFQUMzRixJQUFJRyxNQUFNO0VBQ1YsSUFBSUosUUFBUSxDQUFDSyxTQUFTLEVBQUU7SUFDdEJELE1BQU0sR0FBRyxNQUFNUCxhQUFhLENBQUNTLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDUCxRQUFRLENBQUNLLFNBQVMsQ0FBQztFQUNsRSxDQUFDLE1BQU07SUFDTCxJQUFJRyxxQkFBcUIsRUFBRUMsZUFBZSxFQUFFQyxrQkFBa0I7SUFDOUROLE1BQU0sR0FBRyxJQUFJUCxhQUFhLENBQUNTLE1BQU0sQ0FBQztNQUNoQ0YsTUFBTSxFQUFFSixRQUFRLENBQUNJLE1BQU07TUFDdkJPLHNCQUFzQixFQUFFLENBQUNILHFCQUFxQixHQUFHUixRQUFRLENBQUNZLGFBQWEsTUFBTSxJQUFJLElBQUlKLHFCQUFxQixLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxxQkFBcUIsQ0FBQ0ssR0FBRztNQUMxSkMsY0FBYyxFQUFFLENBQUNMLGVBQWUsR0FBR1QsUUFBUSxDQUFDZSxLQUFLLE1BQU0sSUFBSSxJQUFJTixlQUFlLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLGVBQWUsQ0FBQ0ksR0FBRztNQUN4SEcsaUJBQWlCLEVBQUUsQ0FBQ04sa0JBQWtCLEdBQUdWLFFBQVEsQ0FBQ2lCLFFBQVEsTUFBTSxJQUFJLElBQUlQLGtCQUFrQixLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxrQkFBa0IsQ0FBQ0csR0FBRztNQUN2SUssUUFBUSxFQUFFbEIsUUFBUSxDQUFDbUI7SUFDckIsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxNQUFNQyxNQUFNLEdBQUcsSUFBSWhCLE1BQU0sQ0FBQ2lCLE1BQU0sQ0FBQXJELGFBQUE7SUFDOUJzRCxTQUFTLEVBQUV0QixRQUFRLENBQUN1QixRQUFRO0lBQzVCQyxhQUFhLEVBQUV4QixRQUFRLENBQUN5QixZQUFZO0lBQ3BDQyxhQUFhLEVBQUUsQ0FBQzFCLFFBQVEsQ0FBQzJCLFdBQVc7RUFBQyxHQUNsQzNCLFFBQVEsQ0FBQ29CLE1BQU0sR0FDakJwQixRQUFRLENBQUM0QixJQUFJLENBQUM7RUFDakJSLE1BQU0sQ0FBQ3ZCLGFBQWEsQ0FBQ0ssTUFBTSxDQUFDMkIsZUFBZSxDQUFDLEdBQUcsRUFBRTtFQUNqRCxPQUFPVCxNQUFNO0FBQ2YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9vYXV0aC9jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm9wZW5pZENsaWVudCA9IG9wZW5pZENsaWVudDtcbnZhciBfb3BlbmlkQ2xpZW50ID0gcmVxdWlyZShcIm9wZW5pZC1jbGllbnRcIik7XG5hc3luYyBmdW5jdGlvbiBvcGVuaWRDbGllbnQob3B0aW9ucykge1xuICBjb25zdCBwcm92aWRlciA9IG9wdGlvbnMucHJvdmlkZXI7XG4gIGlmIChwcm92aWRlci5odHRwT3B0aW9ucykgX29wZW5pZENsaWVudC5jdXN0b20uc2V0SHR0cE9wdGlvbnNEZWZhdWx0cyhwcm92aWRlci5odHRwT3B0aW9ucyk7XG4gIGxldCBpc3N1ZXI7XG4gIGlmIChwcm92aWRlci53ZWxsS25vd24pIHtcbiAgICBpc3N1ZXIgPSBhd2FpdCBfb3BlbmlkQ2xpZW50Lklzc3Vlci5kaXNjb3Zlcihwcm92aWRlci53ZWxsS25vd24pO1xuICB9IGVsc2Uge1xuICAgIHZhciBfcHJvdmlkZXIkYXV0aG9yaXphdGksIF9wcm92aWRlciR0b2tlbiwgX3Byb3ZpZGVyJHVzZXJpbmZvO1xuICAgIGlzc3VlciA9IG5ldyBfb3BlbmlkQ2xpZW50Lklzc3Vlcih7XG4gICAgICBpc3N1ZXI6IHByb3ZpZGVyLmlzc3VlcixcbiAgICAgIGF1dGhvcml6YXRpb25fZW5kcG9pbnQ6IChfcHJvdmlkZXIkYXV0aG9yaXphdGkgPSBwcm92aWRlci5hdXRob3JpemF0aW9uKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkYXV0aG9yaXphdGkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciRhdXRob3JpemF0aS51cmwsXG4gICAgICB0b2tlbl9lbmRwb2ludDogKF9wcm92aWRlciR0b2tlbiA9IHByb3ZpZGVyLnRva2VuKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkdG9rZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciR0b2tlbi51cmwsXG4gICAgICB1c2VyaW5mb19lbmRwb2ludDogKF9wcm92aWRlciR1c2VyaW5mbyA9IHByb3ZpZGVyLnVzZXJpbmZvKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkdXNlcmluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciR1c2VyaW5mby51cmwsXG4gICAgICBqd2tzX3VyaTogcHJvdmlkZXIuandrc19lbmRwb2ludFxuICAgIH0pO1xuICB9XG4gIGNvbnN0IGNsaWVudCA9IG5ldyBpc3N1ZXIuQ2xpZW50KHtcbiAgICBjbGllbnRfaWQ6IHByb3ZpZGVyLmNsaWVudElkLFxuICAgIGNsaWVudF9zZWNyZXQ6IHByb3ZpZGVyLmNsaWVudFNlY3JldCxcbiAgICByZWRpcmVjdF91cmlzOiBbcHJvdmlkZXIuY2FsbGJhY2tVcmxdLFxuICAgIC4uLnByb3ZpZGVyLmNsaWVudFxuICB9LCBwcm92aWRlci5qd2tzKTtcbiAgY2xpZW50W19vcGVuaWRDbGllbnQuY3VzdG9tLmNsb2NrX3RvbGVyYW5jZV0gPSAxMDtcbiAgcmV0dXJuIGNsaWVudDtcbn0iXSwibmFtZXMiOlsib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFyZyIsIl90b1ByaW1pdGl2ZSIsIlN0cmluZyIsImlucHV0IiwiaGludCIsInByaW0iLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsInVuZGVmaW5lZCIsInJlcyIsImNhbGwiLCJUeXBlRXJyb3IiLCJOdW1iZXIiLCJleHBvcnRzIiwib3BlbmlkQ2xpZW50IiwiX29wZW5pZENsaWVudCIsInJlcXVpcmUiLCJvcHRpb25zIiwicHJvdmlkZXIiLCJodHRwT3B0aW9ucyIsImN1c3RvbSIsInNldEh0dHBPcHRpb25zRGVmYXVsdHMiLCJpc3N1ZXIiLCJ3ZWxsS25vd24iLCJJc3N1ZXIiLCJkaXNjb3ZlciIsIl9wcm92aWRlciRhdXRob3JpemF0aSIsIl9wcm92aWRlciR0b2tlbiIsIl9wcm92aWRlciR1c2VyaW5mbyIsImF1dGhvcml6YXRpb25fZW5kcG9pbnQiLCJhdXRob3JpemF0aW9uIiwidXJsIiwidG9rZW5fZW5kcG9pbnQiLCJ0b2tlbiIsInVzZXJpbmZvX2VuZHBvaW50IiwidXNlcmluZm8iLCJqd2tzX3VyaSIsImp3a3NfZW5kcG9pbnQiLCJjbGllbnQiLCJDbGllbnQiLCJjbGllbnRfaWQiLCJjbGllbnRJZCIsImNsaWVudF9zZWNyZXQiLCJjbGllbnRTZWNyZXQiLCJyZWRpcmVjdF91cmlzIiwiY2FsbGJhY2tVcmwiLCJqd2tzIiwiY2xvY2tfdG9sZXJhbmNlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/oauth/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/providers.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/providers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"options\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = parseProviders;\nvar _merge = __webpack_require__(/*! ../../utils/merge */ \"(rsc)/./node_modules/next-auth/utils/merge.js\");\nfunction parseProviders(params) {\n  const {\n    url,\n    providerId\n  } = params;\n  const providers = params.providers.map(_ref3 => {\n    let {\n        options: userOptions\n      } = _ref3,\n      rest = _objectWithoutProperties(_ref3, _excluded);\n    var _ref;\n    if (rest.type === \"oauth\") {\n      var _normalizedUserOption;\n      const normalizedOptions = normalizeOAuthOptions(rest);\n      const normalizedUserOptions = normalizeOAuthOptions(userOptions, true);\n      const id = (_normalizedUserOption = normalizedUserOptions === null || normalizedUserOptions === void 0 ? void 0 : normalizedUserOptions.id) !== null && _normalizedUserOption !== void 0 ? _normalizedUserOption : rest.id;\n      return (0, _merge.merge)(normalizedOptions, _objectSpread(_objectSpread({}, normalizedUserOptions), {}, {\n        signinUrl: `${url}/signin/${id}`,\n        callbackUrl: `${url}/callback/${id}`\n      }));\n    }\n    const id = (_ref = userOptions === null || userOptions === void 0 ? void 0 : userOptions.id) !== null && _ref !== void 0 ? _ref : rest.id;\n    return (0, _merge.merge)(rest, _objectSpread(_objectSpread({}, userOptions), {}, {\n      signinUrl: `${url}/signin/${id}`,\n      callbackUrl: `${url}/callback/${id}`\n    }));\n  });\n  return {\n    providers,\n    provider: providers.find(({\n      id\n    }) => id === providerId)\n  };\n}\nfunction normalizeOAuthOptions(oauthOptions, isUserOptions = false) {\n  var _normalized$version;\n  if (!oauthOptions) return;\n  const normalized = Object.entries(oauthOptions).reduce((acc, [key, value]) => {\n    if ([\"authorization\", \"token\", \"userinfo\"].includes(key) && typeof value === \"string\") {\n      var _url$searchParams;\n      const url = new URL(value);\n      acc[key] = {\n        url: `${url.origin}${url.pathname}`,\n        params: Object.fromEntries((_url$searchParams = url.searchParams) !== null && _url$searchParams !== void 0 ? _url$searchParams : [])\n      };\n    } else {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n  if (!isUserOptions && !((_normalized$version = normalized.version) !== null && _normalized$version !== void 0 && _normalized$version.startsWith(\"1.\"))) {\n    var _ref2, _normalized$idToken, _normalized$wellKnown, _normalized$authoriza;\n    normalized.idToken = Boolean((_ref2 = (_normalized$idToken = normalized.idToken) !== null && _normalized$idToken !== void 0 ? _normalized$idToken : (_normalized$wellKnown = normalized.wellKnown) === null || _normalized$wellKnown === void 0 ? void 0 : _normalized$wellKnown.includes(\"openid-configuration\")) !== null && _ref2 !== void 0 ? _ref2 : (_normalized$authoriza = normalized.authorization) === null || _normalized$authoriza === void 0 || (_normalized$authoriza = _normalized$authoriza.params) === null || _normalized$authoriza === void 0 || (_normalized$authoriza = _normalized$authoriza.scope) === null || _normalized$authoriza === void 0 ? void 0 : _normalized$authoriza.includes(\"openid\"));\n    if (!normalized.checks) normalized.checks = [\"state\"];\n  }\n  return normalized;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/lib/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/next-auth/core/lib/utils.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createSecret = createSecret;\nexports.fromDate = fromDate;\nexports.hashToken = hashToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction fromDate(time, date = Date.now()) {\n  return new Date(date + time * 1000);\n}\nfunction hashToken(token, options) {\n  var _provider$secret;\n  const {\n    provider,\n    secret\n  } = options;\n  return (0, _crypto.createHash)(\"sha256\").update(`${token}${(_provider$secret = provider.secret) !== null && _provider$secret !== void 0 ? _provider$secret : secret}`).digest(\"hex\");\n}\nfunction createSecret(params) {\n  var _authOptions$secret;\n  const {\n    authOptions,\n    url\n  } = params;\n  return (_authOptions$secret = authOptions.secret) !== null && _authOptions$secret !== void 0 ? _authOptions$secret : (0, _crypto.createHash)(\"sha256\").update(JSON.stringify(_objectSpread(_objectSpread({}, url), authOptions))).digest(\"hex\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUFBLFNBQUFBLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsQ0FBQSxFQUFBSSxDQUFBLFlBQUFKLENBQUE7QUFBQSxTQUFBVSxjQUFBWixDQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBWSxTQUFBLENBQUFDLE1BQUEsRUFBQWIsQ0FBQSxVQUFBQyxDQUFBLFdBQUFXLFNBQUEsQ0FBQVosQ0FBQSxJQUFBWSxTQUFBLENBQUFaLENBQUEsUUFBQUEsQ0FBQSxPQUFBRixPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxPQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQWUsZUFBQSxDQUFBaEIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsQ0FBQUQsQ0FBQSxTQUFBRSxNQUFBLENBQUFjLHlCQUFBLEdBQUFkLE1BQUEsQ0FBQWUsZ0JBQUEsQ0FBQWxCLENBQUEsRUFBQUcsTUFBQSxDQUFBYyx5QkFBQSxDQUFBZixDQUFBLEtBQUFILE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLEdBQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBRSxNQUFBLENBQUFnQixjQUFBLENBQUFuQixDQUFBLEVBQUFDLENBQUEsRUFBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBTixDQUFBLEVBQUFELENBQUEsaUJBQUFELENBQUE7QUFBQSxTQUFBZ0IsZ0JBQUFJLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxLQUFBLElBQUFELEdBQUEsR0FBQUUsY0FBQSxDQUFBRixHQUFBLE9BQUFBLEdBQUEsSUFBQUQsR0FBQSxJQUFBakIsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBQyxHQUFBLEVBQUFDLEdBQUEsSUFBQUMsS0FBQSxFQUFBQSxLQUFBLEVBQUFiLFVBQUEsUUFBQWUsWUFBQSxRQUFBQyxRQUFBLG9CQUFBTCxHQUFBLENBQUFDLEdBQUEsSUFBQUMsS0FBQSxXQUFBRixHQUFBO0FBQUEsU0FBQUcsZUFBQUcsR0FBQSxRQUFBTCxHQUFBLEdBQUFNLFlBQUEsQ0FBQUQsR0FBQSwyQkFBQUwsR0FBQSxnQkFBQUEsR0FBQSxHQUFBTyxNQUFBLENBQUFQLEdBQUE7QUFBQSxTQUFBTSxhQUFBRSxLQUFBLEVBQUFDLElBQUEsZUFBQUQsS0FBQSxpQkFBQUEsS0FBQSxrQkFBQUEsS0FBQSxNQUFBRSxJQUFBLEdBQUFGLEtBQUEsQ0FBQUcsTUFBQSxDQUFBQyxXQUFBLE9BQUFGLElBQUEsS0FBQUcsU0FBQSxRQUFBQyxHQUFBLEdBQUFKLElBQUEsQ0FBQUssSUFBQSxDQUFBUCxLQUFBLEVBQUFDLElBQUEsMkJBQUFLLEdBQUEsc0JBQUFBLEdBQUEsWUFBQUUsU0FBQSw0REFBQVAsSUFBQSxnQkFBQUYsTUFBQSxHQUFBVSxNQUFBLEVBQUFULEtBQUE7QUFFYjFCLDhDQUE2QztFQUMzQ21CLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGaUIsb0JBQW9CLEdBQUdDLFlBQVk7QUFDbkNELGdCQUFnQixHQUFHRSxRQUFRO0FBQzNCRixpQkFBaUIsR0FBR0csU0FBUztBQUM3QixJQUFJQyxPQUFPLEdBQUdDLG1CQUFPLENBQUMsc0JBQVEsQ0FBQztBQUMvQixTQUFTSCxRQUFRQSxDQUFDSSxJQUFJLEVBQUVDLElBQUksR0FBR0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxFQUFFO0VBQ3pDLE9BQU8sSUFBSUQsSUFBSSxDQUFDRCxJQUFJLEdBQUdELElBQUksR0FBRyxJQUFJLENBQUM7QUFDckM7QUFDQSxTQUFTSCxTQUFTQSxDQUFDTyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtFQUNqQyxJQUFJQyxnQkFBZ0I7RUFDcEIsTUFBTTtJQUNKQyxRQUFRO0lBQ1JDO0VBQ0YsQ0FBQyxHQUFHSCxPQUFPO0VBQ1gsT0FBTyxDQUFDLENBQUMsRUFBRVAsT0FBTyxDQUFDVyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUNDLE1BQU0sQ0FBRSxHQUFFTixLQUFNLEdBQUUsQ0FBQ0UsZ0JBQWdCLEdBQUdDLFFBQVEsQ0FBQ0MsTUFBTSxNQUFNLElBQUksSUFBSUYsZ0JBQWdCLEtBQUssS0FBSyxDQUFDLEdBQUdBLGdCQUFnQixHQUFHRSxNQUFPLEVBQUMsQ0FBQyxDQUFDRyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ3RMO0FBQ0EsU0FBU2hCLFlBQVlBLENBQUNpQixNQUFNLEVBQUU7RUFDNUIsSUFBSUMsbUJBQW1CO0VBQ3ZCLE1BQU07SUFDSkMsV0FBVztJQUNYQztFQUNGLENBQUMsR0FBR0gsTUFBTTtFQUNWLE9BQU8sQ0FBQ0MsbUJBQW1CLEdBQUdDLFdBQVcsQ0FBQ04sTUFBTSxNQUFNLElBQUksSUFBSUssbUJBQW1CLEtBQUssS0FBSyxDQUFDLEdBQUdBLG1CQUFtQixHQUFHLENBQUMsQ0FBQyxFQUFFZixPQUFPLENBQUNXLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQ0MsTUFBTSxDQUFDTSxJQUFJLENBQUNDLFNBQVMsQ0FBQWxELGFBQUEsQ0FBQUEsYUFBQSxLQUN2S2dELEdBQUcsR0FDSEQsV0FBVyxDQUNmLENBQUMsQ0FBQyxDQUFDSCxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZVNlY3JldCA9IGNyZWF0ZVNlY3JldDtcbmV4cG9ydHMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbmV4cG9ydHMuaGFzaFRva2VuID0gaGFzaFRva2VuO1xudmFyIF9jcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuZnVuY3Rpb24gZnJvbURhdGUodGltZSwgZGF0ZSA9IERhdGUubm93KCkpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKGRhdGUgKyB0aW1lICogMTAwMCk7XG59XG5mdW5jdGlvbiBoYXNoVG9rZW4odG9rZW4sIG9wdGlvbnMpIHtcbiAgdmFyIF9wcm92aWRlciRzZWNyZXQ7XG4gIGNvbnN0IHtcbiAgICBwcm92aWRlcixcbiAgICBzZWNyZXRcbiAgfSA9IG9wdGlvbnM7XG4gIHJldHVybiAoMCwgX2NyeXB0by5jcmVhdGVIYXNoKShcInNoYTI1NlwiKS51cGRhdGUoYCR7dG9rZW59JHsoX3Byb3ZpZGVyJHNlY3JldCA9IHByb3ZpZGVyLnNlY3JldCkgIT09IG51bGwgJiYgX3Byb3ZpZGVyJHNlY3JldCAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJHNlY3JldCA6IHNlY3JldH1gKS5kaWdlc3QoXCJoZXhcIik7XG59XG5mdW5jdGlvbiBjcmVhdGVTZWNyZXQocGFyYW1zKSB7XG4gIHZhciBfYXV0aE9wdGlvbnMkc2VjcmV0O1xuICBjb25zdCB7XG4gICAgYXV0aE9wdGlvbnMsXG4gICAgdXJsXG4gIH0gPSBwYXJhbXM7XG4gIHJldHVybiAoX2F1dGhPcHRpb25zJHNlY3JldCA9IGF1dGhPcHRpb25zLnNlY3JldCkgIT09IG51bGwgJiYgX2F1dGhPcHRpb25zJHNlY3JldCAhPT0gdm9pZCAwID8gX2F1dGhPcHRpb25zJHNlY3JldCA6ICgwLCBfY3J5cHRvLmNyZWF0ZUhhc2gpKFwic2hhMjU2XCIpLnVwZGF0ZShKU09OLnN0cmluZ2lmeSh7XG4gICAgLi4udXJsLFxuICAgIC4uLmF1dGhPcHRpb25zXG4gIH0pKS5kaWdlc3QoXCJoZXhcIik7XG59Il0sIm5hbWVzIjpbIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwiZXhwb3J0cyIsImNyZWF0ZVNlY3JldCIsImZyb21EYXRlIiwiaGFzaFRva2VuIiwiX2NyeXB0byIsInJlcXVpcmUiLCJ0aW1lIiwiZGF0ZSIsIkRhdGUiLCJub3ciLCJ0b2tlbiIsIm9wdGlvbnMiLCJfcHJvdmlkZXIkc2VjcmV0IiwicHJvdmlkZXIiLCJzZWNyZXQiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwicGFyYW1zIiwiX2F1dGhPcHRpb25zJHNlY3JldCIsImF1dGhPcHRpb25zIiwidXJsIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/lib/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = ErrorPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction ErrorPage(props) {\n  var _errors$error$toLower;\n  const {\n    url,\n    error = \"default\",\n    theme\n  } = props;\n  const signinPageUrl = `${url}/signin`;\n  const errors = {\n    default: {\n      status: 200,\n      heading: \"Error\",\n      message: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n        className: \"site\",\n        href: url === null || url === void 0 ? void 0 : url.origin\n      }, url === null || url === void 0 ? void 0 : url.host))\n    },\n    configuration: {\n      status: 500,\n      heading: \"Server error\",\n      message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"There is a problem with the server configuration.\"), (0, _preact.h)(\"p\", null, \"Check the server logs for more information.\"))\n    },\n    accessdenied: {\n      status: 403,\n      heading: \"Access Denied\",\n      message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"You do not have permission to sign in.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n        className: \"button\",\n        href: signinPageUrl\n      }, \"Sign in\")))\n    },\n    verification: {\n      status: 403,\n      heading: \"Unable to sign in\",\n      message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"The sign in link is no longer valid.\"), (0, _preact.h)(\"p\", null, \"It may have been used already or it may have expired.\")),\n      signin: (0, _preact.h)(\"a\", {\n        className: \"button\",\n        href: signinPageUrl\n      }, \"Sign in\")\n    }\n  };\n  const {\n    status,\n    heading,\n    message,\n    signin\n  } = (_errors$error$toLower = errors[error.toLowerCase()]) !== null && _errors$error$toLower !== void 0 ? _errors$error$toLower : errors.default;\n  return {\n    status,\n    html: (0, _preact.h)(\"div\", {\n      className: \"error\"\n    }, (theme === null || theme === void 0 ? void 0 : theme.brandColor) && (0, _preact.h)(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n        :root {\n          --brand-color: ${theme === null || theme === void 0 ? void 0 : theme.brandColor}\n        }\n      `\n      }\n    }), (0, _preact.h)(\"div\", {\n      className: \"card\"\n    }, (theme === null || theme === void 0 ? void 0 : theme.logo) && (0, _preact.h)(\"img\", {\n      src: theme.logo,\n      alt: \"Logo\",\n      className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, heading), (0, _preact.h)(\"div\", {\n      className: \"message\"\n    }, message), signin))\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = renderPage;\nvar _preactRenderToString = _interopRequireDefault(__webpack_require__(/*! preact-render-to-string */ \"(rsc)/./node_modules/preact-render-to-string/dist/index.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(rsc)/./node_modules/next-auth/core/pages/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(rsc)/./node_modules/next-auth/core/pages/signout.js\"));\nvar _verifyRequest = _interopRequireDefault(__webpack_require__(/*! ./verify-request */ \"(rsc)/./node_modules/next-auth/core/pages/verify-request.js\"));\nvar _error = _interopRequireDefault(__webpack_require__(/*! ./error */ \"(rsc)/./node_modules/next-auth/core/pages/error.js\"));\nvar _css = _interopRequireDefault(__webpack_require__(/*! ../../css */ \"(rsc)/./node_modules/next-auth/css/index.js\"));\nfunction renderPage(params) {\n  const {\n    url,\n    theme,\n    query,\n    cookies\n  } = params;\n  function send({\n    html,\n    title,\n    status\n  }) {\n    var _theme$colorScheme;\n    return {\n      cookies,\n      status,\n      headers: [{\n        key: \"Content-Type\",\n        value: \"text/html\"\n      }],\n      body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${(0, _css.default)()}</style><title>${title}</title></head><body class=\"__next-auth-theme-${(_theme$colorScheme = theme === null || theme === void 0 ? void 0 : theme.colorScheme) !== null && _theme$colorScheme !== void 0 ? _theme$colorScheme : \"auto\"}\"><div class=\"page\">${(0, _preactRenderToString.default)(html)}</div></body></html>`\n    };\n  }\n  return {\n    signin(props) {\n      return send({\n        html: (0, _signin.default)(_objectSpread(_objectSpread({\n          csrfToken: params.csrfToken,\n          providers: params.providers,\n          callbackUrl: params.callbackUrl,\n          theme\n        }, query), props)),\n        title: \"Sign In\"\n      });\n    },\n    signout(props) {\n      return send({\n        html: (0, _signout.default)(_objectSpread({\n          csrfToken: params.csrfToken,\n          url,\n          theme\n        }, props)),\n        title: \"Sign Out\"\n      });\n    },\n    verifyRequest(props) {\n      return send({\n        html: (0, _verifyRequest.default)(_objectSpread({\n          url,\n          theme\n        }, props)),\n        title: \"Verify Request\"\n      });\n    },\n    error(props) {\n      return send(_objectSpread(_objectSpread({}, (0, _error.default)(_objectSpread({\n        url,\n        theme\n      }, props))), {}, {\n        title: \"Error\"\n      }));\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQUEsU0FBQUEsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBZSxlQUFBLENBQUFoQixDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxDQUFBRCxDQUFBLFNBQUFFLE1BQUEsQ0FBQWMseUJBQUEsR0FBQWQsTUFBQSxDQUFBZSxnQkFBQSxDQUFBbEIsQ0FBQSxFQUFBRyxNQUFBLENBQUFjLHlCQUFBLENBQUFmLENBQUEsS0FBQUgsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsR0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFFLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQW5CLENBQUEsRUFBQUMsQ0FBQSxFQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFOLENBQUEsRUFBQUQsQ0FBQSxpQkFBQUQsQ0FBQTtBQUFBLFNBQUFnQixnQkFBQUksR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEtBQUEsSUFBQUQsR0FBQSxHQUFBRSxjQUFBLENBQUFGLEdBQUEsT0FBQUEsR0FBQSxJQUFBRCxHQUFBLElBQUFqQixNQUFBLENBQUFnQixjQUFBLENBQUFDLEdBQUEsRUFBQUMsR0FBQSxJQUFBQyxLQUFBLEVBQUFBLEtBQUEsRUFBQWIsVUFBQSxRQUFBZSxZQUFBLFFBQUFDLFFBQUEsb0JBQUFMLEdBQUEsQ0FBQUMsR0FBQSxJQUFBQyxLQUFBLFdBQUFGLEdBQUE7QUFBQSxTQUFBRyxlQUFBRyxHQUFBLFFBQUFMLEdBQUEsR0FBQU0sWUFBQSxDQUFBRCxHQUFBLDJCQUFBTCxHQUFBLGdCQUFBQSxHQUFBLEdBQUFPLE1BQUEsQ0FBQVAsR0FBQTtBQUFBLFNBQUFNLGFBQUFFLEtBQUEsRUFBQUMsSUFBQSxlQUFBRCxLQUFBLGlCQUFBQSxLQUFBLGtCQUFBQSxLQUFBLE1BQUFFLElBQUEsR0FBQUYsS0FBQSxDQUFBRyxNQUFBLENBQUFDLFdBQUEsT0FBQUYsSUFBQSxLQUFBRyxTQUFBLFFBQUFDLEdBQUEsR0FBQUosSUFBQSxDQUFBSyxJQUFBLENBQUFQLEtBQUEsRUFBQUMsSUFBQSwyQkFBQUssR0FBQSxzQkFBQUEsR0FBQSxZQUFBRSxTQUFBLDREQUFBUCxJQUFBLGdCQUFBRixNQUFBLEdBQUFVLE1BQUEsRUFBQVQsS0FBQTtBQUViLElBQUlVLHNCQUFzQixHQUFHQyxtQkFBTyxDQUFDLDBIQUE4QyxDQUFDO0FBQ3BGckMsOENBQTZDO0VBQzNDbUIsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZtQixrQkFBZSxHQUFHRSxVQUFVO0FBQzVCLElBQUlDLHFCQUFxQixHQUFHTCxzQkFBc0IsQ0FBQ0MsbUJBQU8sQ0FBQywyRkFBeUIsQ0FBQyxDQUFDO0FBQ3RGLElBQUlLLE9BQU8sR0FBR04sc0JBQXNCLENBQUNDLG1CQUFPLENBQUMscUVBQVUsQ0FBQyxDQUFDO0FBQ3pELElBQUlNLFFBQVEsR0FBR1Asc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsdUVBQVcsQ0FBQyxDQUFDO0FBQzNELElBQUlPLGNBQWMsR0FBR1Isc0JBQXNCLENBQUNDLG1CQUFPLENBQUMscUZBQWtCLENBQUMsQ0FBQztBQUN4RSxJQUFJUSxNQUFNLEdBQUdULHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLG1FQUFTLENBQUMsQ0FBQztBQUN2RCxJQUFJUyxJQUFJLEdBQUdWLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLDhEQUFXLENBQUMsQ0FBQztBQUN2RCxTQUFTRyxVQUFVQSxDQUFDTyxNQUFNLEVBQUU7RUFDMUIsTUFBTTtJQUNKQyxHQUFHO0lBQ0hDLEtBQUs7SUFDTEMsS0FBSztJQUNMQztFQUNGLENBQUMsR0FBR0osTUFBTTtFQUNWLFNBQVNLLElBQUlBLENBQUM7SUFDWkMsSUFBSTtJQUNKQyxLQUFLO0lBQ0xDO0VBQ0YsQ0FBQyxFQUFFO0lBQ0QsSUFBSUMsa0JBQWtCO0lBQ3RCLE9BQU87TUFDTEwsT0FBTztNQUNQSSxNQUFNO01BQ05FLE9BQU8sRUFBRSxDQUFDO1FBQ1J2QyxHQUFHLEVBQUUsY0FBYztRQUNuQkMsS0FBSyxFQUFFO01BQ1QsQ0FBQyxDQUFDO01BQ0Z1QyxJQUFJLEVBQUcsZ01BQStMLENBQUMsQ0FBQyxFQUFFWixJQUFJLENBQUNQLE9BQU8sRUFBRSxDQUFFLGtCQUFpQmUsS0FBTSxpREFBZ0QsQ0FBQ0Usa0JBQWtCLEdBQUdQLEtBQUssS0FBSyxJQUFJLElBQUlBLEtBQUssS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsS0FBSyxDQUFDVSxXQUFXLE1BQU0sSUFBSSxJQUFJSCxrQkFBa0IsS0FBSyxLQUFLLENBQUMsR0FBR0Esa0JBQWtCLEdBQUcsTUFBTyx1QkFBc0IsQ0FBQyxDQUFDLEVBQUVmLHFCQUFxQixDQUFDRixPQUFPLEVBQUVjLElBQUksQ0FBRTtJQUNqZ0IsQ0FBQztFQUNIO0VBQ0EsT0FBTztJQUNMTyxNQUFNQSxDQUFDQyxLQUFLLEVBQUU7TUFDWixPQUFPVCxJQUFJLENBQUM7UUFDVkMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFWCxPQUFPLENBQUNILE9BQU8sRUFBQTlCLGFBQUEsQ0FBQUEsYUFBQTtVQUN2QnFELFNBQVMsRUFBRWYsTUFBTSxDQUFDZSxTQUFTO1VBQzNCQyxTQUFTLEVBQUVoQixNQUFNLENBQUNnQixTQUFTO1VBQzNCQyxXQUFXLEVBQUVqQixNQUFNLENBQUNpQixXQUFXO1VBQy9CZjtRQUFLLEdBQ0ZDLEtBQUssR0FDTFcsS0FBSyxDQUNULENBQUM7UUFDRlAsS0FBSyxFQUFFO01BQ1QsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUNEVyxPQUFPQSxDQUFDSixLQUFLLEVBQUU7TUFDYixPQUFPVCxJQUFJLENBQUM7UUFDVkMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFVixRQUFRLENBQUNKLE9BQU8sRUFBQTlCLGFBQUE7VUFDeEJxRCxTQUFTLEVBQUVmLE1BQU0sQ0FBQ2UsU0FBUztVQUMzQmQsR0FBRztVQUNIQztRQUFLLEdBQ0ZZLEtBQUssQ0FDVCxDQUFDO1FBQ0ZQLEtBQUssRUFBRTtNQUNULENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRFksYUFBYUEsQ0FBQ0wsS0FBSyxFQUFFO01BQ25CLE9BQU9ULElBQUksQ0FBQztRQUNWQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUVULGNBQWMsQ0FBQ0wsT0FBTyxFQUFBOUIsYUFBQTtVQUM5QnVDLEdBQUc7VUFDSEM7UUFBSyxHQUNGWSxLQUFLLENBQ1QsQ0FBQztRQUNGUCxLQUFLLEVBQUU7TUFDVCxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0RhLEtBQUtBLENBQUNOLEtBQUssRUFBRTtNQUNYLE9BQU9ULElBQUksQ0FBQTNDLGFBQUEsQ0FBQUEsYUFBQSxLQUNOLENBQUMsQ0FBQyxFQUFFb0MsTUFBTSxDQUFDTixPQUFPLEVBQUE5QixhQUFBO1FBQ25CdUMsR0FBRztRQUNIQztNQUFLLEdBQ0ZZLEtBQUssQ0FDVCxDQUFDO1FBQ0ZQLEtBQUssRUFBRTtNQUFPLEVBQ2YsQ0FBQztJQUNKO0VBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVuZGVyUGFnZTtcbnZhciBfcHJlYWN0UmVuZGVyVG9TdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJwcmVhY3QtcmVuZGVyLXRvLXN0cmluZ1wiKSk7XG52YXIgX3NpZ25pbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbmluXCIpKTtcbnZhciBfc2lnbm91dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbm91dFwiKSk7XG52YXIgX3ZlcmlmeVJlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZlcmlmeS1yZXF1ZXN0XCIpKTtcbnZhciBfZXJyb3IgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Vycm9yXCIpKTtcbnZhciBfY3NzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vY3NzXCIpKTtcbmZ1bmN0aW9uIHJlbmRlclBhZ2UocGFyYW1zKSB7XG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgdGhlbWUsXG4gICAgcXVlcnksXG4gICAgY29va2llc1xuICB9ID0gcGFyYW1zO1xuICBmdW5jdGlvbiBzZW5kKHtcbiAgICBodG1sLFxuICAgIHRpdGxlLFxuICAgIHN0YXR1c1xuICB9KSB7XG4gICAgdmFyIF90aGVtZSRjb2xvclNjaGVtZTtcbiAgICByZXR1cm4ge1xuICAgICAgY29va2llcyxcbiAgICAgIHN0YXR1cyxcbiAgICAgIGhlYWRlcnM6IFt7XG4gICAgICAgIGtleTogXCJDb250ZW50LVR5cGVcIixcbiAgICAgICAgdmFsdWU6IFwidGV4dC9odG1sXCJcbiAgICAgIH1dLFxuICAgICAgYm9keTogYDwhRE9DVFlQRSBodG1sPjxodG1sIGxhbmc9XCJlblwiPjxoZWFkPjxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiPjxtZXRhIGh0dHAtZXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiPjxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCI+PHN0eWxlPiR7KDAsIF9jc3MuZGVmYXVsdCkoKX08L3N0eWxlPjx0aXRsZT4ke3RpdGxlfTwvdGl0bGU+PC9oZWFkPjxib2R5IGNsYXNzPVwiX19uZXh0LWF1dGgtdGhlbWUtJHsoX3RoZW1lJGNvbG9yU2NoZW1lID0gdGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmNvbG9yU2NoZW1lKSAhPT0gbnVsbCAmJiBfdGhlbWUkY29sb3JTY2hlbWUgIT09IHZvaWQgMCA/IF90aGVtZSRjb2xvclNjaGVtZSA6IFwiYXV0b1wifVwiPjxkaXYgY2xhc3M9XCJwYWdlXCI+JHsoMCwgX3ByZWFjdFJlbmRlclRvU3RyaW5nLmRlZmF1bHQpKGh0bWwpfTwvZGl2PjwvYm9keT48L2h0bWw+YFxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzaWduaW4ocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF9zaWduaW4uZGVmYXVsdCkoe1xuICAgICAgICAgIGNzcmZUb2tlbjogcGFyYW1zLmNzcmZUb2tlbixcbiAgICAgICAgICBwcm92aWRlcnM6IHBhcmFtcy5wcm92aWRlcnMsXG4gICAgICAgICAgY2FsbGJhY2tVcmw6IHBhcmFtcy5jYWxsYmFja1VybCxcbiAgICAgICAgICB0aGVtZSxcbiAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICB9KSxcbiAgICAgICAgdGl0bGU6IFwiU2lnbiBJblwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIHNpZ25vdXQocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF9zaWdub3V0LmRlZmF1bHQpKHtcbiAgICAgICAgICBjc3JmVG9rZW46IHBhcmFtcy5jc3JmVG9rZW4sXG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJTaWduIE91dFwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIHZlcmlmeVJlcXVlc3QocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF92ZXJpZnlSZXF1ZXN0LmRlZmF1bHQpKHtcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIlZlcmlmeSBSZXF1ZXN0XCJcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZXJyb3IocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgLi4uKDAsIF9lcnJvci5kZWZhdWx0KSh7XG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJFcnJvclwiXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59Il0sIm5hbWVzIjpbIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJleHBvcnRzIiwiZGVmYXVsdCIsInJlbmRlclBhZ2UiLCJfcHJlYWN0UmVuZGVyVG9TdHJpbmciLCJfc2lnbmluIiwiX3NpZ25vdXQiLCJfdmVyaWZ5UmVxdWVzdCIsIl9lcnJvciIsIl9jc3MiLCJwYXJhbXMiLCJ1cmwiLCJ0aGVtZSIsInF1ZXJ5IiwiY29va2llcyIsInNlbmQiLCJodG1sIiwidGl0bGUiLCJzdGF0dXMiLCJfdGhlbWUkY29sb3JTY2hlbWUiLCJoZWFkZXJzIiwiYm9keSIsImNvbG9yU2NoZW1lIiwic2lnbmluIiwicHJvcHMiLCJjc3JmVG9rZW4iLCJwcm92aWRlcnMiLCJjYWxsYmFja1VybCIsInNpZ25vdXQiLCJ2ZXJpZnlSZXF1ZXN0IiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = SigninPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(rsc)/./node_modules/@babel/runtime/helpers/extends.js\"));\nfunction hexToRgba(hex, alpha = 1) {\n  if (!hex) {\n    return;\n  }\n  hex = hex.replace(/^#/, \"\");\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  const bigint = parseInt(hex, 16);\n  const r = bigint >> 16 & 255;\n  const g = bigint >> 8 & 255;\n  const b = bigint & 255;\n  alpha = Math.min(Math.max(alpha, 0), 1);\n  const rgba = `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  return rgba;\n}\nfunction SigninPage(props) {\n  var _errors$errorType;\n  const {\n    csrfToken,\n    providers,\n    callbackUrl,\n    theme,\n    email,\n    error: errorType\n  } = props;\n  const providersToRender = providers.filter(provider => {\n    if (provider.type === \"oauth\" || provider.type === \"email\") {\n      return true;\n    } else if (provider.type === \"credentials\" && provider.credentials) {\n      return true;\n    }\n    return false;\n  });\n  if (typeof document !== \"undefined\" && theme.buttonText) {\n    document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n  }\n  if (typeof document !== \"undefined\" && theme.brandColor) {\n    document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n  }\n  const errors = {\n    Signin: \"Try signing in with a different account.\",\n    OAuthSignin: \"Try signing in with a different account.\",\n    OAuthCallback: \"Try signing in with a different account.\",\n    OAuthCreateAccount: \"Try signing in with a different account.\",\n    EmailCreateAccount: \"Try signing in with a different account.\",\n    Callback: \"Try signing in with a different account.\",\n    OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n    EmailSignin: \"The e-mail could not be sent.\",\n    CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n    SessionRequired: \"Please sign in to access this page.\",\n    default: \"Unable to sign in.\"\n  };\n  const error = errorType && ((_errors$errorType = errors[errorType]) !== null && _errors$errorType !== void 0 ? _errors$errorType : errors.default);\n  const providerLogoPath = \"https://authjs.dev/img/providers\";\n  return (0, _preact.h)(\"div\", {\n    className: \"signin\"\n  }, theme.brandColor && (0, _preact.h)(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n    }\n  }), theme.buttonText && (0, _preact.h)(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n    }\n  }), (0, _preact.h)(\"div\", {\n    className: \"card\"\n  }, theme.logo && (0, _preact.h)(\"img\", {\n    src: theme.logo,\n    alt: \"Logo\",\n    className: \"logo\"\n  }), error && (0, _preact.h)(\"div\", {\n    className: \"error\"\n  }, (0, _preact.h)(\"p\", null, error)), providersToRender.map((provider, i) => {\n    let bg, text, logo, logoDark, bgDark, textDark;\n    if (provider.type === \"oauth\") {\n      var _provider$style;\n      ;\n      ({\n        bg = \"\",\n        text = \"\",\n        logo = \"\",\n        bgDark = bg,\n        textDark = text,\n        logoDark = \"\"\n      } = (_provider$style = provider.style) !== null && _provider$style !== void 0 ? _provider$style : {});\n      logo = logo.startsWith(\"/\") ? `${providerLogoPath}${logo}` : logo;\n      logoDark = logoDark.startsWith(\"/\") ? `${providerLogoPath}${logoDark}` : logoDark || logo;\n      logoDark || (logoDark = logo);\n    }\n    return (0, _preact.h)(\"div\", {\n      key: provider.id,\n      className: \"provider\"\n    }, provider.type === \"oauth\" && (0, _preact.h)(\"form\", {\n      action: provider.signinUrl,\n      method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n      type: \"hidden\",\n      name: \"csrfToken\",\n      value: csrfToken\n    }), callbackUrl && (0, _preact.h)(\"input\", {\n      type: \"hidden\",\n      name: \"callbackUrl\",\n      value: callbackUrl\n    }), (0, _preact.h)(\"button\", {\n      type: \"submit\",\n      className: \"button\",\n      style: {\n        \"--provider-bg\": bg,\n        \"--provider-dark-bg\": bgDark,\n        \"--provider-color\": text,\n        \"--provider-dark-color\": textDark,\n        \"--provider-bg-hover\": hexToRgba(bg, 0.8),\n        \"--provider-dark-bg-hover\": hexToRgba(bgDark, 0.8)\n      }\n    }, logo && (0, _preact.h)(\"img\", {\n      loading: \"lazy\",\n      height: 24,\n      width: 24,\n      id: \"provider-logo\",\n      src: `${logo.startsWith(\"/\") ? providerLogoPath : \"\"}${logo}`\n    }), logoDark && (0, _preact.h)(\"img\", {\n      loading: \"lazy\",\n      height: 24,\n      width: 24,\n      id: \"provider-logo-dark\",\n      src: `${logo.startsWith(\"/\") ? providerLogoPath : \"\"}${logoDark}`\n    }), (0, _preact.h)(\"span\", null, \"Sign in with \", provider.name))), (provider.type === \"email\" || provider.type === \"credentials\") && i > 0 && providersToRender[i - 1].type !== \"email\" && providersToRender[i - 1].type !== \"credentials\" && (0, _preact.h)(\"hr\", null), provider.type === \"email\" && (0, _preact.h)(\"form\", {\n      action: provider.signinUrl,\n      method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n      type: \"hidden\",\n      name: \"csrfToken\",\n      value: csrfToken\n    }), (0, _preact.h)(\"label\", {\n      className: \"section-header\",\n      htmlFor: `input-email-for-${provider.id}-provider`\n    }, \"Email\"), (0, _preact.h)(\"input\", {\n      id: `input-email-for-${provider.id}-provider`,\n      autoFocus: true,\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      placeholder: \"email@example.com\",\n      required: true\n    }), (0, _preact.h)(\"button\", {\n      id: \"submitButton\",\n      type: \"submit\"\n    }, \"Sign in with \", provider.name)), provider.type === \"credentials\" && (0, _preact.h)(\"form\", {\n      action: provider.callbackUrl,\n      method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n      type: \"hidden\",\n      name: \"csrfToken\",\n      value: csrfToken\n    }), Object.keys(provider.credentials).map(credential => {\n      var _provider$credentials, _provider$credentials2, _provider$credentials3;\n      return (0, _preact.h)(\"div\", {\n        key: `input-group-${provider.id}`\n      }, (0, _preact.h)(\"label\", {\n        className: \"section-header\",\n        htmlFor: `input-${credential}-for-${provider.id}-provider`\n      }, (_provider$credentials = provider.credentials[credential].label) !== null && _provider$credentials !== void 0 ? _provider$credentials : credential), (0, _preact.h)(\"input\", (0, _extends2.default)({\n        name: credential,\n        id: `input-${credential}-for-${provider.id}-provider`,\n        type: (_provider$credentials2 = provider.credentials[credential].type) !== null && _provider$credentials2 !== void 0 ? _provider$credentials2 : \"text\",\n        placeholder: (_provider$credentials3 = provider.credentials[credential].placeholder) !== null && _provider$credentials3 !== void 0 ? _provider$credentials3 : \"\"\n      }, provider.credentials[credential])));\n    }), (0, _preact.h)(\"button\", {\n      type: \"submit\"\n    }, \"Sign in with \", provider.name)), (provider.type === \"email\" || provider.type === \"credentials\") && i + 1 < providersToRender.length && (0, _preact.h)(\"hr\", null));\n  })));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = SignoutPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction SignoutPage(props) {\n  const {\n    url,\n    csrfToken,\n    theme\n  } = props;\n  return (0, _preact.h)(\"div\", {\n    className: \"signout\"\n  }, theme.brandColor && (0, _preact.h)(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n    }\n  }), theme.buttonText && (0, _preact.h)(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n    }\n  }), (0, _preact.h)(\"div\", {\n    className: \"card\"\n  }, theme.logo && (0, _preact.h)(\"img\", {\n    src: theme.logo,\n    alt: \"Logo\",\n    className: \"logo\"\n  }), (0, _preact.h)(\"h1\", null, \"Signout\"), (0, _preact.h)(\"p\", null, \"Are you sure you want to sign out?\"), (0, _preact.h)(\"form\", {\n    action: `${url}/signout`,\n    method: \"POST\"\n  }, (0, _preact.h)(\"input\", {\n    type: \"hidden\",\n    name: \"csrfToken\",\n    value: csrfToken\n  }), (0, _preact.h)(\"button\", {\n    id: \"submitButton\",\n    type: \"submit\"\n  }, \"Sign out\"))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvc2lnbm91dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csV0FBVztBQUM3QixJQUFJQyxPQUFPLEdBQUdDLG1CQUFPLENBQUMsMERBQVEsQ0FBQztBQUMvQixTQUFTRixXQUFXQSxDQUFDRyxLQUFLLEVBQUU7RUFDMUIsTUFBTTtJQUNKQyxHQUFHO0lBQ0hDLFNBQVM7SUFDVEM7RUFDRixDQUFDLEdBQUdILEtBQUs7RUFDVCxPQUFPLENBQUMsQ0FBQyxFQUFFRixPQUFPLENBQUNNLENBQUMsRUFBRSxLQUFLLEVBQUU7SUFDM0JDLFNBQVMsRUFBRTtFQUNiLENBQUMsRUFBRUYsS0FBSyxDQUFDRyxVQUFVLElBQUksQ0FBQyxDQUFDLEVBQUVSLE9BQU8sQ0FBQ00sQ0FBQyxFQUFFLE9BQU8sRUFBRTtJQUM3Q0csdUJBQXVCLEVBQUU7TUFDdkJDLE1BQU0sRUFBRztBQUNmO0FBQ0EsMkJBQTJCTCxLQUFLLENBQUNHLFVBQVc7QUFDNUM7QUFDQTtJQUNJO0VBQ0YsQ0FBQyxDQUFDLEVBQUVILEtBQUssQ0FBQ00sVUFBVSxJQUFJLENBQUMsQ0FBQyxFQUFFWCxPQUFPLENBQUNNLENBQUMsRUFBRSxPQUFPLEVBQUU7SUFDOUNHLHVCQUF1QixFQUFFO01BQ3ZCQyxNQUFNLEVBQUc7QUFDZjtBQUNBLGlDQUFpQ0wsS0FBSyxDQUFDTSxVQUFXO0FBQ2xEO0FBQ0E7SUFDSTtFQUNGLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFWCxPQUFPLENBQUNNLENBQUMsRUFBRSxLQUFLLEVBQUU7SUFDeEJDLFNBQVMsRUFBRTtFQUNiLENBQUMsRUFBRUYsS0FBSyxDQUFDTyxJQUFJLElBQUksQ0FBQyxDQUFDLEVBQUVaLE9BQU8sQ0FBQ00sQ0FBQyxFQUFFLEtBQUssRUFBRTtJQUNyQ08sR0FBRyxFQUFFUixLQUFLLENBQUNPLElBQUk7SUFDZkUsR0FBRyxFQUFFLE1BQU07SUFDWFAsU0FBUyxFQUFFO0VBQ2IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sQ0FBQ00sQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sQ0FBQ00sQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsb0NBQW9DLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRU4sT0FBTyxDQUFDTSxDQUFDLEVBQUUsTUFBTSxFQUFFO0lBQ2pJUyxNQUFNLEVBQUcsR0FBRVosR0FBSSxVQUFTO0lBQ3hCYSxNQUFNLEVBQUU7RUFDVixDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVoQixPQUFPLENBQUNNLENBQUMsRUFBRSxPQUFPLEVBQUU7SUFDekJXLElBQUksRUFBRSxRQUFRO0lBQ2RDLElBQUksRUFBRSxXQUFXO0lBQ2pCckIsS0FBSyxFQUFFTztFQUNULENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFSixPQUFPLENBQUNNLENBQUMsRUFBRSxRQUFRLEVBQUU7SUFDM0JhLEVBQUUsRUFBRSxjQUFjO0lBQ2xCRixJQUFJLEVBQUU7RUFDUixDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy9zaWdub3V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gU2lnbm91dFBhZ2U7XG52YXIgX3ByZWFjdCA9IHJlcXVpcmUoXCJwcmVhY3RcIik7XG5mdW5jdGlvbiBTaWdub3V0UGFnZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGNzcmZUb2tlbixcbiAgICB0aGVtZVxuICB9ID0gcHJvcHM7XG4gIHJldHVybiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInNpZ25vdXRcIlxuICB9LCB0aGVtZS5icmFuZENvbG9yICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgIH1cbiAgfSksIHRoZW1lLmJ1dHRvblRleHQgJiYgKDAsIF9wcmVhY3QuaCkoXCJzdHlsZVwiLCB7XG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1idXR0b24tdGV4dC1jb2xvcjogJHt0aGVtZS5idXR0b25UZXh0fVxuICAgICAgICB9XG4gICAgICBgXG4gICAgfVxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJjYXJkXCJcbiAgfSwgdGhlbWUubG9nbyAmJiAoMCwgX3ByZWFjdC5oKShcImltZ1wiLCB7XG4gICAgc3JjOiB0aGVtZS5sb2dvLFxuICAgIGFsdDogXCJMb2dvXCIsXG4gICAgY2xhc3NOYW1lOiBcImxvZ29cIlxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJoMVwiLCBudWxsLCBcIlNpZ25vdXRcIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBzaWduIG91dD9cIiksICgwLCBfcHJlYWN0LmgpKFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBgJHt1cmx9L3NpZ25vdXRgLFxuICAgIG1ldGhvZDogXCJQT1NUXCJcbiAgfSwgKDAsIF9wcmVhY3QuaCkoXCJpbnB1dFwiLCB7XG4gICAgdHlwZTogXCJoaWRkZW5cIixcbiAgICBuYW1lOiBcImNzcmZUb2tlblwiLFxuICAgIHZhbHVlOiBjc3JmVG9rZW5cbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiYnV0dG9uXCIsIHtcbiAgICBpZDogXCJzdWJtaXRCdXR0b25cIixcbiAgICB0eXBlOiBcInN1Ym1pdFwiXG4gIH0sIFwiU2lnbiBvdXRcIikpKSk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlNpZ25vdXRQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsInVybCIsImNzcmZUb2tlbiIsInRoZW1lIiwiaCIsImNsYXNzTmFtZSIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImJ1dHRvblRleHQiLCJsb2dvIiwic3JjIiwiYWx0IiwiYWN0aW9uIiwibWV0aG9kIiwidHlwZSIsIm5hbWUiLCJpZCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = VerifyRequestPage;\nvar _preact = __webpack_require__(/*! preact */ \"(rsc)/./node_modules/preact/dist/preact.js\");\nfunction VerifyRequestPage(props) {\n  const {\n    url,\n    theme\n  } = props;\n  return (0, _preact.h)(\"div\", {\n    className: \"verify-request\"\n  }, theme.brandColor && (0, _preact.h)(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n    }\n  }), (0, _preact.h)(\"div\", {\n    className: \"card\"\n  }, theme.logo && (0, _preact.h)(\"img\", {\n    src: theme.logo,\n    alt: \"Logo\",\n    className: \"logo\"\n  }), (0, _preact.h)(\"h1\", null, \"Check your email\"), (0, _preact.h)(\"p\", null, \"A sign in link has been sent to your email address.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n    className: \"site\",\n    href: url.origin\n  }, url.host))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHLGlCQUFpQjtBQUNuQyxJQUFJQyxPQUFPLEdBQUdDLG1CQUFPLENBQUMsMERBQVEsQ0FBQztBQUMvQixTQUFTRixpQkFBaUJBLENBQUNHLEtBQUssRUFBRTtFQUNoQyxNQUFNO0lBQ0pDLEdBQUc7SUFDSEM7RUFDRixDQUFDLEdBQUdGLEtBQUs7RUFDVCxPQUFPLENBQUMsQ0FBQyxFQUFFRixPQUFPLENBQUNLLENBQUMsRUFBRSxLQUFLLEVBQUU7SUFDM0JDLFNBQVMsRUFBRTtFQUNiLENBQUMsRUFBRUYsS0FBSyxDQUFDRyxVQUFVLElBQUksQ0FBQyxDQUFDLEVBQUVQLE9BQU8sQ0FBQ0ssQ0FBQyxFQUFFLE9BQU8sRUFBRTtJQUM3Q0csdUJBQXVCLEVBQUU7TUFDdkJDLE1BQU0sRUFBRztBQUNmO0FBQ0EsMkJBQTJCTCxLQUFLLENBQUNHLFVBQVc7QUFDNUM7QUFDQTtJQUNJO0VBQ0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sQ0FBQ0ssQ0FBQyxFQUFFLEtBQUssRUFBRTtJQUN4QkMsU0FBUyxFQUFFO0VBQ2IsQ0FBQyxFQUFFRixLQUFLLENBQUNNLElBQUksSUFBSSxDQUFDLENBQUMsRUFBRVYsT0FBTyxDQUFDSyxDQUFDLEVBQUUsS0FBSyxFQUFFO0lBQ3JDTSxHQUFHLEVBQUVQLEtBQUssQ0FBQ00sSUFBSTtJQUNmRSxHQUFHLEVBQUUsTUFBTTtJQUNYTixTQUFTLEVBQUU7RUFDYixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRU4sT0FBTyxDQUFDSyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFTCxPQUFPLENBQUNLLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLHFEQUFxRCxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVMLE9BQU8sQ0FBQ0ssQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUVMLE9BQU8sQ0FBQ0ssQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNsTEMsU0FBUyxFQUFFLE1BQU07SUFDakJPLElBQUksRUFBRVYsR0FBRyxDQUFDVztFQUNaLENBQUMsRUFBRVgsR0FBRyxDQUFDWSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL3ZlcmlmeS1yZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gVmVyaWZ5UmVxdWVzdFBhZ2U7XG52YXIgX3ByZWFjdCA9IHJlcXVpcmUoXCJwcmVhY3RcIik7XG5mdW5jdGlvbiBWZXJpZnlSZXF1ZXN0UGFnZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwidmVyaWZ5LXJlcXVlc3RcIlxuICB9LCB0aGVtZS5icmFuZENvbG9yICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgIH1cbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiY2FyZFwiXG4gIH0sIHRoZW1lLmxvZ28gJiYgKDAsIF9wcmVhY3QuaCkoXCJpbWdcIiwge1xuICAgIHNyYzogdGhlbWUubG9nbyxcbiAgICBhbHQ6IFwiTG9nb1wiLFxuICAgIGNsYXNzTmFtZTogXCJsb2dvXCJcbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiaDFcIiwgbnVsbCwgXCJDaGVjayB5b3VyIGVtYWlsXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJBIHNpZ24gaW4gbGluayBoYXMgYmVlbiBzZW50IHRvIHlvdXIgZW1haWwgYWRkcmVzcy5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgIGNsYXNzTmFtZTogXCJzaXRlXCIsXG4gICAgaHJlZjogdXJsLm9yaWdpblxuICB9LCB1cmwuaG9zdCkpKSk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlZlcmlmeVJlcXVlc3RQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsInVybCIsInRoZW1lIiwiaCIsImNsYXNzTmFtZSIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiLCJocmVmIiwib3JpZ2luIiwiaG9zdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/pages/verify-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/callback.js":
/*!********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/callback.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = callback;\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/callback */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/callback.js\"));\nvar _callbackHandler = _interopRequireDefault(__webpack_require__(/*! ../lib/callback-handler */ \"(rsc)/./node_modules/next-auth/core/lib/callback-handler.js\"));\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function callback(params) {\n  const {\n    options,\n    query,\n    body,\n    method,\n    headers,\n    sessionStore\n  } = params;\n  const {\n    provider,\n    adapter,\n    url,\n    callbackUrl,\n    pages,\n    jwt,\n    events,\n    callbacks,\n    session: {\n      strategy: sessionStrategy,\n      maxAge: sessionMaxAge\n    },\n    logger\n  } = options;\n  const cookies = [];\n  const useJwtSession = sessionStrategy === \"jwt\";\n  if (provider.type === \"oauth\") {\n    try {\n      const {\n        profile,\n        account,\n        OAuthProfile,\n        cookies: oauthCookies\n      } = await (0, _callback.default)({\n        query,\n        body,\n        method,\n        options,\n        cookies: params.cookies\n      });\n      if (oauthCookies.length) cookies.push(...oauthCookies);\n      try {\n        var _events$signIn;\n        logger.debug(\"OAUTH_CALLBACK_RESPONSE\", {\n          profile,\n          account,\n          OAuthProfile\n        });\n        if (!profile || !account || !OAuthProfile) {\n          return {\n            redirect: `${url}/signin`,\n            cookies\n          };\n        }\n        let userOrProfile = profile;\n        if (adapter) {\n          const {\n            getUserByAccount\n          } = adapter;\n          const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: provider.id\n          });\n          if (userByAccount) userOrProfile = userByAccount;\n        }\n        try {\n          const isAllowed = await callbacks.signIn({\n            user: userOrProfile,\n            account,\n            profile: OAuthProfile\n          });\n          if (!isAllowed) {\n            return {\n              redirect: `${url}/error?error=AccessDenied`,\n              cookies\n            };\n          } else if (typeof isAllowed === \"string\") {\n            return {\n              redirect: isAllowed,\n              cookies\n            };\n          }\n        } catch (error) {\n          return {\n            redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n            cookies\n          };\n        }\n        const {\n          user,\n          session,\n          isNewUser\n        } = await (0, _callbackHandler.default)({\n          sessionToken: sessionStore.value,\n          profile,\n          account,\n          options\n        });\n        if (useJwtSession) {\n          var _user$id;\n          const defaultToken = {\n            name: user.name,\n            email: user.email,\n            picture: user.image,\n            sub: (_user$id = user.id) === null || _user$id === void 0 ? void 0 : _user$id.toString()\n          };\n          const token = await callbacks.jwt({\n            token: defaultToken,\n            user,\n            account,\n            profile: OAuthProfile,\n            isNewUser,\n            trigger: isNewUser ? \"signUp\" : \"signIn\"\n          });\n          const newToken = await jwt.encode(_objectSpread(_objectSpread({}, jwt), {}, {\n            token\n          }));\n          const cookieExpires = new Date();\n          cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n          const sessionCookies = sessionStore.chunk(newToken, {\n            expires: cookieExpires\n          });\n          cookies.push(...sessionCookies);\n        } else {\n          cookies.push({\n            name: options.cookies.sessionToken.name,\n            value: session.sessionToken,\n            options: _objectSpread(_objectSpread({}, options.cookies.sessionToken.options), {}, {\n              expires: session.expires\n            })\n          });\n        }\n        await ((_events$signIn = events.signIn) === null || _events$signIn === void 0 ? void 0 : _events$signIn.call(events, {\n          user,\n          account,\n          profile,\n          isNewUser\n        }));\n        if (isNewUser && pages.newUser) {\n          return {\n            redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n            cookies\n          };\n        }\n        return {\n          redirect: callbackUrl,\n          cookies\n        };\n      } catch (error) {\n        if (error.name === \"AccountNotLinkedError\") {\n          return {\n            redirect: `${url}/error?error=OAuthAccountNotLinked`,\n            cookies\n          };\n        } else if (error.name === \"CreateUserError\") {\n          return {\n            redirect: `${url}/error?error=OAuthCreateAccount`,\n            cookies\n          };\n        }\n        logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", error);\n        return {\n          redirect: `${url}/error?error=Callback`,\n          cookies\n        };\n      }\n    } catch (error) {\n      if (error.name === \"OAuthCallbackError\") {\n        logger.error(\"OAUTH_CALLBACK_ERROR\", {\n          error: error,\n          providerId: provider.id\n        });\n        return {\n          redirect: `${url}/error?error=OAuthCallback`,\n          cookies\n        };\n      }\n      logger.error(\"OAUTH_CALLBACK_ERROR\", error);\n      return {\n        redirect: `${url}/error?error=Callback`,\n        cookies\n      };\n    }\n  } else if (provider.type === \"email\") {\n    try {\n      var _events$signIn2;\n      const paramToken = query === null || query === void 0 ? void 0 : query.token;\n      const paramIdentifier = query === null || query === void 0 ? void 0 : query.email;\n      if (!paramToken) {\n        return {\n          redirect: `${url}/error?error=configuration`,\n          cookies\n        };\n      }\n      const invite = await adapter.useVerificationToken({\n        identifier: paramIdentifier,\n        token: (0, _utils.hashToken)(paramToken, options)\n      });\n      const invalidInvite = !invite || invite.expires.valueOf() < Date.now() || paramIdentifier && invite.identifier !== paramIdentifier;\n      if (invalidInvite) {\n        return {\n          redirect: `${url}/error?error=Verification`,\n          cookies\n        };\n      }\n      const profile = await (0, _getUserFromEmail.default)({\n        email: invite.identifier,\n        adapter\n      });\n      const account = {\n        providerAccountId: profile.email,\n        type: \"email\",\n        provider: provider.id\n      };\n      try {\n        const signInCallbackResponse = await callbacks.signIn({\n          user: profile,\n          account\n        });\n        if (!signInCallbackResponse) {\n          return {\n            redirect: `${url}/error?error=AccessDenied`,\n            cookies\n          };\n        } else if (typeof signInCallbackResponse === \"string\") {\n          return {\n            redirect: signInCallbackResponse,\n            cookies\n          };\n        }\n      } catch (error) {\n        return {\n          redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n          cookies\n        };\n      }\n      const {\n        user,\n        session,\n        isNewUser\n      } = await (0, _callbackHandler.default)({\n        sessionToken: sessionStore.value,\n        profile,\n        account,\n        options\n      });\n      if (useJwtSession) {\n        var _user$id2;\n        const defaultToken = {\n          name: user.name,\n          email: user.email,\n          picture: user.image,\n          sub: (_user$id2 = user.id) === null || _user$id2 === void 0 ? void 0 : _user$id2.toString()\n        };\n        const token = await callbacks.jwt({\n          token: defaultToken,\n          user,\n          account,\n          isNewUser,\n          trigger: isNewUser ? \"signUp\" : \"signIn\"\n        });\n        const newToken = await jwt.encode(_objectSpread(_objectSpread({}, jwt), {}, {\n          token\n        }));\n        const cookieExpires = new Date();\n        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n        const sessionCookies = sessionStore.chunk(newToken, {\n          expires: cookieExpires\n        });\n        cookies.push(...sessionCookies);\n      } else {\n        cookies.push({\n          name: options.cookies.sessionToken.name,\n          value: session.sessionToken,\n          options: _objectSpread(_objectSpread({}, options.cookies.sessionToken.options), {}, {\n            expires: session.expires\n          })\n        });\n      }\n      await ((_events$signIn2 = events.signIn) === null || _events$signIn2 === void 0 ? void 0 : _events$signIn2.call(events, {\n        user,\n        account,\n        isNewUser\n      }));\n      if (isNewUser && pages.newUser) {\n        return {\n          redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n          cookies\n        };\n      }\n      return {\n        redirect: callbackUrl,\n        cookies\n      };\n    } catch (error) {\n      if (error.name === \"CreateUserError\") {\n        return {\n          redirect: `${url}/error?error=EmailCreateAccount`,\n          cookies\n        };\n      }\n      logger.error(\"CALLBACK_EMAIL_ERROR\", error);\n      return {\n        redirect: `${url}/error?error=Callback`,\n        cookies\n      };\n    }\n  } else if (provider.type === \"credentials\" && method === \"POST\") {\n    var _user$id3, _events$signIn3;\n    const credentials = body;\n    let user;\n    try {\n      user = await provider.authorize(credentials, {\n        query,\n        body,\n        headers,\n        method\n      });\n      if (!user) {\n        return {\n          status: 401,\n          redirect: `${url}/error?${new URLSearchParams({\n            error: \"CredentialsSignin\",\n            provider: provider.id\n          })}`,\n          cookies\n        };\n      }\n    } catch (error) {\n      return {\n        status: 401,\n        redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n        cookies\n      };\n    }\n    const account = {\n      providerAccountId: user.id,\n      type: \"credentials\",\n      provider: provider.id\n    };\n    try {\n      const isAllowed = await callbacks.signIn({\n        user,\n        account,\n        credentials\n      });\n      if (!isAllowed) {\n        return {\n          status: 403,\n          redirect: `${url}/error?error=AccessDenied`,\n          cookies\n        };\n      } else if (typeof isAllowed === \"string\") {\n        return {\n          redirect: isAllowed,\n          cookies\n        };\n      }\n    } catch (error) {\n      return {\n        redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n        cookies\n      };\n    }\n    const defaultToken = {\n      name: user.name,\n      email: user.email,\n      picture: user.image,\n      sub: (_user$id3 = user.id) === null || _user$id3 === void 0 ? void 0 : _user$id3.toString()\n    };\n    const token = await callbacks.jwt({\n      token: defaultToken,\n      user,\n      account,\n      isNewUser: false,\n      trigger: \"signIn\"\n    });\n    const newToken = await jwt.encode(_objectSpread(_objectSpread({}, jwt), {}, {\n      token\n    }));\n    const cookieExpires = new Date();\n    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n    const sessionCookies = sessionStore.chunk(newToken, {\n      expires: cookieExpires\n    });\n    cookies.push(...sessionCookies);\n    await ((_events$signIn3 = events.signIn) === null || _events$signIn3 === void 0 ? void 0 : _events$signIn3.call(events, {\n      user,\n      account\n    }));\n    return {\n      redirect: callbackUrl,\n      cookies\n    };\n  }\n  return {\n    status: 500,\n    body: `Error: Callback for provider type ${provider.type} not supported`,\n    cookies\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/routes/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"callback\", ({\n  enumerable: true,\n  get: function () {\n    return _callback.default;\n  }\n}));\nObject.defineProperty(exports, \"providers\", ({\n  enumerable: true,\n  get: function () {\n    return _providers.default;\n  }\n}));\nObject.defineProperty(exports, \"session\", ({\n  enumerable: true,\n  get: function () {\n    return _session.default;\n  }\n}));\nObject.defineProperty(exports, \"signin\", ({\n  enumerable: true,\n  get: function () {\n    return _signin.default;\n  }\n}));\nObject.defineProperty(exports, \"signout\", ({\n  enumerable: true,\n  get: function () {\n    return _signout.default;\n  }\n}));\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ./callback */ \"(rsc)/./node_modules/next-auth/core/routes/callback.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(rsc)/./node_modules/next-auth/core/routes/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(rsc)/./node_modules/next-auth/core/routes/signout.js\"));\nvar _session = _interopRequireDefault(__webpack_require__(/*! ./session */ \"(rsc)/./node_modules/next-auth/core/routes/session.js\"));\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./providers */ \"(rsc)/./node_modules/next-auth/core/routes/providers.js\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUlBLHNCQUFzQixHQUFHQyxtQkFBTyxDQUFDLDBIQUE4QyxDQUFDO0FBQ3BGQyw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7RUFDekNJLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO0lBQ2YsT0FBT0MsU0FBUyxDQUFDQyxPQUFPO0VBQzFCO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDZDQUE0QztFQUMxQ0ksVUFBVSxFQUFFLElBQUk7RUFDaEJDLEdBQUcsRUFBRSxTQUFBQSxDQUFBLEVBQVk7SUFDZixPQUFPRyxVQUFVLENBQUNELE9BQU87RUFDM0I7QUFDRixDQUFDLEVBQUM7QUFDRlAsMkNBQTBDO0VBQ3hDSSxVQUFVLEVBQUUsSUFBSTtFQUNoQkMsR0FBRyxFQUFFLFNBQUFBLENBQUEsRUFBWTtJQUNmLE9BQU9JLFFBQVEsQ0FBQ0YsT0FBTztFQUN6QjtBQUNGLENBQUMsRUFBQztBQUNGUCwwQ0FBeUM7RUFDdkNJLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO0lBQ2YsT0FBT0ssT0FBTyxDQUFDSCxPQUFPO0VBQ3hCO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDJDQUEwQztFQUN4Q0ksVUFBVSxFQUFFLElBQUk7RUFDaEJDLEdBQUcsRUFBRSxTQUFBQSxDQUFBLEVBQVk7SUFDZixPQUFPTSxRQUFRLENBQUNKLE9BQU87RUFDekI7QUFDRixDQUFDLEVBQUM7QUFDRixJQUFJRCxTQUFTLEdBQUdSLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLDBFQUFZLENBQUMsQ0FBQztBQUM3RCxJQUFJVyxPQUFPLEdBQUdaLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLHNFQUFVLENBQUMsQ0FBQztBQUN6RCxJQUFJWSxRQUFRLEdBQUdiLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLHdFQUFXLENBQUMsQ0FBQztBQUMzRCxJQUFJVSxRQUFRLEdBQUdYLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLHdFQUFXLENBQUMsQ0FBQztBQUMzRCxJQUFJUyxVQUFVLEdBQUdWLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLDRFQUFhLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjYWxsYmFja1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfY2FsbGJhY2suZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwcm92aWRlcnNcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Byb3ZpZGVycy5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNlc3Npb25cIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Nlc3Npb24uZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzaWduaW5cIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3NpZ25pbi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNpZ25vdXRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3NpZ25vdXQuZGVmYXVsdDtcbiAgfVxufSk7XG52YXIgX2NhbGxiYWNrID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9jYWxsYmFja1wiKSk7XG52YXIgX3NpZ25pbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbmluXCIpKTtcbnZhciBfc2lnbm91dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbm91dFwiKSk7XG52YXIgX3Nlc3Npb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Nlc3Npb25cIikpO1xudmFyIF9wcm92aWRlcnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Byb3ZpZGVyc1wiKSk7Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX2NhbGxiYWNrIiwiZGVmYXVsdCIsIl9wcm92aWRlcnMiLCJfc2Vzc2lvbiIsIl9zaWduaW4iLCJfc2lnbm91dCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/providers.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/providers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = providers;\nfunction providers(providers) {\n  return {\n    headers: [{\n      key: \"Content-Type\",\n      value: \"application/json\"\n    }],\n    body: providers.reduce((acc, {\n      id,\n      name,\n      type,\n      signinUrl,\n      callbackUrl\n    }) => {\n      acc[id] = {\n        id,\n        name,\n        type,\n        signinUrl,\n        callbackUrl\n      };\n      return acc;\n    }, {})\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csU0FBUztBQUMzQixTQUFTQSxTQUFTQSxDQUFDQSxTQUFTLEVBQUU7RUFDNUIsT0FBTztJQUNMQyxPQUFPLEVBQUUsQ0FBQztNQUNSQyxHQUFHLEVBQUUsY0FBYztNQUNuQkosS0FBSyxFQUFFO0lBQ1QsQ0FBQyxDQUFDO0lBQ0ZLLElBQUksRUFBRUgsU0FBUyxDQUFDSSxNQUFNLENBQUMsQ0FBQ0MsR0FBRyxFQUFFO01BQzNCQyxFQUFFO01BQ0ZDLElBQUk7TUFDSkMsSUFBSTtNQUNKQyxTQUFTO01BQ1RDO0lBQ0YsQ0FBQyxLQUFLO01BQ0pMLEdBQUcsQ0FBQ0MsRUFBRSxDQUFDLEdBQUc7UUFDUkEsRUFBRTtRQUNGQyxJQUFJO1FBQ0pDLElBQUk7UUFDSkMsU0FBUztRQUNUQztNQUNGLENBQUM7TUFDRCxPQUFPTCxHQUFHO0lBQ1osQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNQLENBQUM7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByb3ZpZGVycztcbmZ1bmN0aW9uIHByb3ZpZGVycyhwcm92aWRlcnMpIHtcbiAgcmV0dXJuIHtcbiAgICBoZWFkZXJzOiBbe1xuICAgICAga2V5OiBcIkNvbnRlbnQtVHlwZVwiLFxuICAgICAgdmFsdWU6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfV0sXG4gICAgYm9keTogcHJvdmlkZXJzLnJlZHVjZSgoYWNjLCB7XG4gICAgICBpZCxcbiAgICAgIG5hbWUsXG4gICAgICB0eXBlLFxuICAgICAgc2lnbmluVXJsLFxuICAgICAgY2FsbGJhY2tVcmxcbiAgICB9KSA9PiB7XG4gICAgICBhY2NbaWRdID0ge1xuICAgICAgICBpZCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgc2lnbmluVXJsLFxuICAgICAgICBjYWxsYmFja1VybFxuICAgICAgfTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInByb3ZpZGVycyIsImhlYWRlcnMiLCJrZXkiLCJib2R5IiwicmVkdWNlIiwiYWNjIiwiaWQiLCJuYW1lIiwidHlwZSIsInNpZ25pblVybCIsImNhbGxiYWNrVXJsIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/session.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/session.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = session;\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(rsc)/./node_modules/next-auth/core/lib/utils.js\");\nasync function session(params) {\n  const {\n    options,\n    sessionStore,\n    newSession,\n    isUpdate\n  } = params;\n  const {\n    adapter,\n    jwt,\n    events,\n    callbacks,\n    logger,\n    session: {\n      strategy: sessionStrategy,\n      maxAge: sessionMaxAge\n    }\n  } = options;\n  const response = {\n    body: {},\n    headers: [{\n      key: \"Content-Type\",\n      value: \"application/json\"\n    }],\n    cookies: []\n  };\n  const sessionToken = sessionStore.value;\n  if (!sessionToken) return response;\n  if (sessionStrategy === \"jwt\") {\n    try {\n      var _response$cookies, _events$session;\n      const decodedToken = await jwt.decode(_objectSpread(_objectSpread({}, jwt), {}, {\n        token: sessionToken\n      }));\n      if (!decodedToken) throw new Error(\"JWT invalid\");\n      const token = await callbacks.jwt(_objectSpread(_objectSpread({\n        token: decodedToken\n      }, isUpdate && {\n        trigger: \"update\"\n      }), {}, {\n        session: newSession\n      }));\n      const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n      const updatedSession = await callbacks.session({\n        session: {\n          user: {\n            name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,\n            email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,\n            image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture\n          },\n          expires: newExpires.toISOString()\n        },\n        token\n      });\n      response.body = updatedSession;\n      const newToken = await jwt.encode(_objectSpread(_objectSpread({}, jwt), {}, {\n        token,\n        maxAge: options.session.maxAge\n      }));\n      const sessionCookies = sessionStore.chunk(newToken, {\n        expires: newExpires\n      });\n      (_response$cookies = response.cookies) === null || _response$cookies === void 0 || _response$cookies.push(...sessionCookies);\n      await ((_events$session = events.session) === null || _events$session === void 0 ? void 0 : _events$session.call(events, {\n        session: updatedSession,\n        token\n      }));\n    } catch (error) {\n      var _response$cookies2;\n      logger.error(\"JWT_SESSION_ERROR\", error);\n      (_response$cookies2 = response.cookies) === null || _response$cookies2 === void 0 || _response$cookies2.push(...sessionStore.clean());\n    }\n  } else {\n    try {\n      const {\n        getSessionAndUser,\n        deleteSession,\n        updateSession\n      } = adapter;\n      let userAndSession = await getSessionAndUser(sessionToken);\n      if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n        await deleteSession(sessionToken);\n        userAndSession = null;\n      }\n      if (userAndSession) {\n        var _response$cookies3, _events$session2;\n        const {\n          user,\n          session\n        } = userAndSession;\n        const sessionUpdateAge = options.session.updateAge;\n        const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n        const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n        if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n          await updateSession({\n            sessionToken,\n            expires: newExpires\n          });\n        }\n        const sessionPayload = await callbacks.session(_objectSpread({\n          session: {\n            user: {\n              name: user.name,\n              email: user.email,\n              image: user.image\n            },\n            expires: session.expires.toISOString()\n          },\n          user,\n          newSession\n        }, isUpdate ? {\n          trigger: \"update\"\n        } : {}));\n        response.body = sessionPayload;\n        (_response$cookies3 = response.cookies) === null || _response$cookies3 === void 0 || _response$cookies3.push({\n          name: options.cookies.sessionToken.name,\n          value: sessionToken,\n          options: _objectSpread(_objectSpread({}, options.cookies.sessionToken.options), {}, {\n            expires: newExpires\n          })\n        });\n        await ((_events$session2 = events.session) === null || _events$session2 === void 0 ? void 0 : _events$session2.call(events, {\n          session: sessionPayload\n        }));\n      } else if (sessionToken) {\n        var _response$cookies4;\n        (_response$cookies4 = response.cookies) === null || _response$cookies4 === void 0 || _response$cookies4.push(...sessionStore.clean());\n      }\n    } catch (error) {\n      logger.error(\"SESSION_ERROR\", error);\n    }\n  }\n  return response;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/signin.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signin.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = signin;\nvar _authorizationUrl = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/authorization-url */ \"(rsc)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ../lib/email/signin */ \"(rsc)/./node_modules/next-auth/core/lib/email/signin.js\"));\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(rsc)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function signin(params) {\n  const {\n    options,\n    query,\n    body\n  } = params;\n  const {\n    url,\n    callbacks,\n    logger,\n    provider\n  } = options;\n  if (!provider.type) {\n    return {\n      status: 500,\n      text: `Error: Type not specified for ${provider.name}`\n    };\n  }\n  if (provider.type === \"oauth\") {\n    try {\n      const response = await (0, _authorizationUrl.default)({\n        options,\n        query\n      });\n      return response;\n    } catch (error) {\n      logger.error(\"SIGNIN_OAUTH_ERROR\", {\n        error: error,\n        providerId: provider.id\n      });\n      return {\n        redirect: `${url}/error?error=OAuthSignin`\n      };\n    }\n  } else if (provider.type === \"email\") {\n    var _provider$normalizeId;\n    let email = body === null || body === void 0 ? void 0 : body.email;\n    if (!email) return {\n      redirect: `${url}/error?error=EmailSignin`\n    };\n    const normalizer = (_provider$normalizeId = provider.normalizeIdentifier) !== null && _provider$normalizeId !== void 0 ? _provider$normalizeId : identifier => {\n      let [local, domain] = identifier.toLowerCase().trim().split(\"@\");\n      domain = domain.split(\",\")[0];\n      return `${local}@${domain}`;\n    };\n    try {\n      email = normalizer(body === null || body === void 0 ? void 0 : body.email);\n    } catch (error) {\n      logger.error(\"SIGNIN_EMAIL_ERROR\", {\n        error,\n        providerId: provider.id\n      });\n      return {\n        redirect: `${url}/error?error=EmailSignin`\n      };\n    }\n    const user = await (0, _getUserFromEmail.default)({\n      email,\n      adapter: options.adapter\n    });\n    const account = {\n      providerAccountId: email,\n      userId: email,\n      type: \"email\",\n      provider: provider.id\n    };\n    try {\n      const signInCallbackResponse = await callbacks.signIn({\n        user,\n        account,\n        email: {\n          verificationRequest: true\n        }\n      });\n      if (!signInCallbackResponse) {\n        return {\n          redirect: `${url}/error?error=AccessDenied`\n        };\n      } else if (typeof signInCallbackResponse === \"string\") {\n        return {\n          redirect: signInCallbackResponse\n        };\n      }\n    } catch (error) {\n      return {\n        redirect: `${url}/error?${new URLSearchParams({\n          error: error\n        })}`\n      };\n    }\n    try {\n      const redirect = await (0, _signin.default)(email, options);\n      return {\n        redirect\n      };\n    } catch (error) {\n      logger.error(\"SIGNIN_EMAIL_ERROR\", {\n        error,\n        providerId: provider.id\n      });\n      return {\n        redirect: `${url}/error?error=EmailSignin`\n      };\n    }\n  }\n  return {\n    redirect: `${url}/signin`\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/routes/signout.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signout.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = signout;\nasync function signout(params) {\n  const {\n    options,\n    sessionStore\n  } = params;\n  const {\n    adapter,\n    events,\n    jwt,\n    callbackUrl,\n    logger,\n    session\n  } = options;\n  const sessionToken = sessionStore === null || sessionStore === void 0 ? void 0 : sessionStore.value;\n  if (!sessionToken) {\n    return {\n      redirect: callbackUrl\n    };\n  }\n  if (session.strategy === \"jwt\") {\n    try {\n      var _events$signOut;\n      const decodedJwt = await jwt.decode(_objectSpread(_objectSpread({}, jwt), {}, {\n        token: sessionToken\n      }));\n      await ((_events$signOut = events.signOut) === null || _events$signOut === void 0 ? void 0 : _events$signOut.call(events, {\n        token: decodedJwt\n      }));\n    } catch (error) {\n      logger.error(\"SIGNOUT_ERROR\", error);\n    }\n  } else {\n    try {\n      var _events$signOut2;\n      const session = await adapter.deleteSession(sessionToken);\n      await ((_events$signOut2 = events.signOut) === null || _events$signOut2 === void 0 ? void 0 : _events$signOut2.call(events, {\n        session\n      }));\n    } catch (error) {\n      logger.error(\"SIGNOUT_ERROR\", error);\n    }\n  }\n  const sessionCookies = sessionStore.clean();\n  return {\n    redirect: callbackUrl,\n    cookies: sessionCookies\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQUEsU0FBQUEsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBZSxlQUFBLENBQUFoQixDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxDQUFBRCxDQUFBLFNBQUFFLE1BQUEsQ0FBQWMseUJBQUEsR0FBQWQsTUFBQSxDQUFBZSxnQkFBQSxDQUFBbEIsQ0FBQSxFQUFBRyxNQUFBLENBQUFjLHlCQUFBLENBQUFmLENBQUEsS0FBQUgsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsR0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFFLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQW5CLENBQUEsRUFBQUMsQ0FBQSxFQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFOLENBQUEsRUFBQUQsQ0FBQSxpQkFBQUQsQ0FBQTtBQUFBLFNBQUFnQixnQkFBQUksR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEtBQUEsSUFBQUQsR0FBQSxHQUFBRSxjQUFBLENBQUFGLEdBQUEsT0FBQUEsR0FBQSxJQUFBRCxHQUFBLElBQUFqQixNQUFBLENBQUFnQixjQUFBLENBQUFDLEdBQUEsRUFBQUMsR0FBQSxJQUFBQyxLQUFBLEVBQUFBLEtBQUEsRUFBQWIsVUFBQSxRQUFBZSxZQUFBLFFBQUFDLFFBQUEsb0JBQUFMLEdBQUEsQ0FBQUMsR0FBQSxJQUFBQyxLQUFBLFdBQUFGLEdBQUE7QUFBQSxTQUFBRyxlQUFBRyxHQUFBLFFBQUFMLEdBQUEsR0FBQU0sWUFBQSxDQUFBRCxHQUFBLDJCQUFBTCxHQUFBLGdCQUFBQSxHQUFBLEdBQUFPLE1BQUEsQ0FBQVAsR0FBQTtBQUFBLFNBQUFNLGFBQUFFLEtBQUEsRUFBQUMsSUFBQSxlQUFBRCxLQUFBLGlCQUFBQSxLQUFBLGtCQUFBQSxLQUFBLE1BQUFFLElBQUEsR0FBQUYsS0FBQSxDQUFBRyxNQUFBLENBQUFDLFdBQUEsT0FBQUYsSUFBQSxLQUFBRyxTQUFBLFFBQUFDLEdBQUEsR0FBQUosSUFBQSxDQUFBSyxJQUFBLENBQUFQLEtBQUEsRUFBQUMsSUFBQSwyQkFBQUssR0FBQSxzQkFBQUEsR0FBQSxZQUFBRSxTQUFBLDREQUFBUCxJQUFBLGdCQUFBRixNQUFBLEdBQUFVLE1BQUEsRUFBQVQsS0FBQTtBQUViMUIsOENBQTZDO0VBQzNDbUIsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZpQixrQkFBZSxHQUFHRSxPQUFPO0FBQ3pCLGVBQWVBLE9BQU9BLENBQUNDLE1BQU0sRUFBRTtFQUM3QixNQUFNO0lBQ0pDLE9BQU87SUFDUEM7RUFDRixDQUFDLEdBQUdGLE1BQU07RUFDVixNQUFNO0lBQ0pHLE9BQU87SUFDUEMsTUFBTTtJQUNOQyxHQUFHO0lBQ0hDLFdBQVc7SUFDWEMsTUFBTTtJQUNOQztFQUNGLENBQUMsR0FBR1AsT0FBTztFQUNYLE1BQU1RLFlBQVksR0FBR1AsWUFBWSxLQUFLLElBQUksSUFBSUEsWUFBWSxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxZQUFZLENBQUN0QixLQUFLO0VBQ25HLElBQUksQ0FBQzZCLFlBQVksRUFBRTtJQUNqQixPQUFPO01BQ0xDLFFBQVEsRUFBRUo7SUFDWixDQUFDO0VBQ0g7RUFDQSxJQUFJRSxPQUFPLENBQUNHLFFBQVEsS0FBSyxLQUFLLEVBQUU7SUFDOUIsSUFBSTtNQUNGLElBQUlDLGVBQWU7TUFDbkIsTUFBTUMsVUFBVSxHQUFHLE1BQU1SLEdBQUcsQ0FBQ1MsTUFBTSxDQUFBNUMsYUFBQSxDQUFBQSxhQUFBLEtBQzlCbUMsR0FBRztRQUNOVSxLQUFLLEVBQUVOO01BQVksRUFDcEIsQ0FBQztNQUNGLE9BQU8sQ0FBQ0csZUFBZSxHQUFHUixNQUFNLENBQUNZLE9BQU8sTUFBTSxJQUFJLElBQUlKLGVBQWUsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsZUFBZSxDQUFDbEIsSUFBSSxDQUFDVSxNQUFNLEVBQUU7UUFDdkhXLEtBQUssRUFBRUY7TUFDVCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxPQUFPSSxLQUFLLEVBQUU7TUFDZFYsTUFBTSxDQUFDVSxLQUFLLENBQUMsZUFBZSxFQUFFQSxLQUFLLENBQUM7SUFDdEM7RUFDRixDQUFDLE1BQU07SUFDTCxJQUFJO01BQ0YsSUFBSUMsZ0JBQWdCO01BQ3BCLE1BQU1WLE9BQU8sR0FBRyxNQUFNTCxPQUFPLENBQUNnQixhQUFhLENBQUNWLFlBQVksQ0FBQztNQUN6RCxPQUFPLENBQUNTLGdCQUFnQixHQUFHZCxNQUFNLENBQUNZLE9BQU8sTUFBTSxJQUFJLElBQUlFLGdCQUFnQixLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxnQkFBZ0IsQ0FBQ3hCLElBQUksQ0FBQ1UsTUFBTSxFQUFFO1FBQzFISTtNQUNGLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLE9BQU9TLEtBQUssRUFBRTtNQUNkVixNQUFNLENBQUNVLEtBQUssQ0FBQyxlQUFlLEVBQUVBLEtBQUssQ0FBQztJQUN0QztFQUNGO0VBQ0EsTUFBTUcsY0FBYyxHQUFHbEIsWUFBWSxDQUFDbUIsS0FBSyxDQUFDLENBQUM7RUFDM0MsT0FBTztJQUNMWCxRQUFRLEVBQUVKLFdBQVc7SUFDckJnQixPQUFPLEVBQUVGO0VBQ1gsQ0FBQztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvc2lnbm91dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpZ25vdXQ7XG5hc3luYyBmdW5jdGlvbiBzaWdub3V0KHBhcmFtcykge1xuICBjb25zdCB7XG4gICAgb3B0aW9ucyxcbiAgICBzZXNzaW9uU3RvcmVcbiAgfSA9IHBhcmFtcztcbiAgY29uc3Qge1xuICAgIGFkYXB0ZXIsXG4gICAgZXZlbnRzLFxuICAgIGp3dCxcbiAgICBjYWxsYmFja1VybCxcbiAgICBsb2dnZXIsXG4gICAgc2Vzc2lvblxuICB9ID0gb3B0aW9ucztcbiAgY29uc3Qgc2Vzc2lvblRva2VuID0gc2Vzc2lvblN0b3JlID09PSBudWxsIHx8IHNlc3Npb25TdG9yZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2Vzc2lvblN0b3JlLnZhbHVlO1xuICBpZiAoIXNlc3Npb25Ub2tlbikge1xuICAgIHJldHVybiB7XG4gICAgICByZWRpcmVjdDogY2FsbGJhY2tVcmxcbiAgICB9O1xuICB9XG4gIGlmIChzZXNzaW9uLnN0cmF0ZWd5ID09PSBcImp3dFwiKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBfZXZlbnRzJHNpZ25PdXQ7XG4gICAgICBjb25zdCBkZWNvZGVkSnd0ID0gYXdhaXQgand0LmRlY29kZSh7XG4gICAgICAgIC4uLmp3dCxcbiAgICAgICAgdG9rZW46IHNlc3Npb25Ub2tlblxuICAgICAgfSk7XG4gICAgICBhd2FpdCAoKF9ldmVudHMkc2lnbk91dCA9IGV2ZW50cy5zaWduT3V0KSA9PT0gbnVsbCB8fCBfZXZlbnRzJHNpZ25PdXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ldmVudHMkc2lnbk91dC5jYWxsKGV2ZW50cywge1xuICAgICAgICB0b2tlbjogZGVjb2RlZEp3dFxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoXCJTSUdOT1VUX0VSUk9SXCIsIGVycm9yKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBfZXZlbnRzJHNpZ25PdXQyO1xuICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGFkYXB0ZXIuZGVsZXRlU2Vzc2lvbihzZXNzaW9uVG9rZW4pO1xuICAgICAgYXdhaXQgKChfZXZlbnRzJHNpZ25PdXQyID0gZXZlbnRzLnNpZ25PdXQpID09PSBudWxsIHx8IF9ldmVudHMkc2lnbk91dDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ldmVudHMkc2lnbk91dDIuY2FsbChldmVudHMsIHtcbiAgICAgICAgc2Vzc2lvblxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoXCJTSUdOT1VUX0VSUk9SXCIsIGVycm9yKTtcbiAgICB9XG4gIH1cbiAgY29uc3Qgc2Vzc2lvbkNvb2tpZXMgPSBzZXNzaW9uU3RvcmUuY2xlYW4oKTtcbiAgcmV0dXJuIHtcbiAgICByZWRpcmVjdDogY2FsbGJhY2tVcmwsXG4gICAgY29va2llczogc2Vzc2lvbkNvb2tpZXNcbiAgfTtcbn0iXSwibmFtZXMiOlsib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImFyZyIsIl90b1ByaW1pdGl2ZSIsIlN0cmluZyIsImlucHV0IiwiaGludCIsInByaW0iLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsInVuZGVmaW5lZCIsInJlcyIsImNhbGwiLCJUeXBlRXJyb3IiLCJOdW1iZXIiLCJleHBvcnRzIiwiZGVmYXVsdCIsInNpZ25vdXQiLCJwYXJhbXMiLCJvcHRpb25zIiwic2Vzc2lvblN0b3JlIiwiYWRhcHRlciIsImV2ZW50cyIsImp3dCIsImNhbGxiYWNrVXJsIiwibG9nZ2VyIiwic2Vzc2lvbiIsInNlc3Npb25Ub2tlbiIsInJlZGlyZWN0Iiwic3RyYXRlZ3kiLCJfZXZlbnRzJHNpZ25PdXQiLCJkZWNvZGVkSnd0IiwiZGVjb2RlIiwidG9rZW4iLCJzaWduT3V0IiwiZXJyb3IiLCJfZXZlbnRzJHNpZ25PdXQyIiwiZGVsZXRlU2Vzc2lvbiIsInNlc3Npb25Db29raWVzIiwiY2xlYW4iLCJjb29raWVzIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/routes/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/core/types.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS90eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/core/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/css/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/css/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = function () {\n  return \":root{--border-width:1px;--border-radius:0.5rem;--color-error:#c94b4b;--color-info:#157efb;--color-info-hover:#0f6ddb;--color-info-text:#fff}.__next-auth-theme-auto,.__next-auth-theme-light{--color-background:#ececec;--color-background-hover:hsla(0,0%,93%,.8);--color-background-card:#fff;--color-text:#000;--color-primary:#444;--color-control-border:#bbb;--color-button-active-background:#f9f9f9;--color-button-active-border:#aaa;--color-separator:#ccc}.__next-auth-theme-dark{--color-background:#161b22;--color-background-hover:rgba(22,27,34,.8);--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-separator:#444}@media (prefers-color-scheme:dark){.__next-auth-theme-auto{--color-background:#161b22;--color-background-hover:rgba(22,27,34,.8);--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-separator:#444}a.button,button{background-color:var(--provider-dark-bg,var(--color-background));color:var(--provider-dark-color,var(--color-primary))}a.button:hover,button:hover{background-color:var(--provider-dark-bg-hover,var(--color-background-hover))!important}#provider-logo{display:none!important}#provider-logo-dark{display:block!important;width:25px}}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit;margin:0;padding:0}body{background-color:var(--color-background);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;margin:0;padding:0}h1{font-weight:400}h1,p{color:var(--color-text);margin-bottom:1.5rem;padding:0 1rem}form{margin:0;padding:0}label{font-weight:500;margin-bottom:.25rem;text-align:left}input[type],label{color:var(--color-text);display:block}input[type]{background:var(--color-background-card);border:var(--border-width) solid var(--color-control-border);border-radius:var(--border-radius);box-sizing:border-box;font-size:1rem;padding:.5rem 1rem;width:100%}input[type]:focus{box-shadow:none}p{font-size:1.1rem;line-height:2rem}a.button{line-height:1rem;text-decoration:none}a.button:link,a.button:visited{background-color:var(--color-background);color:var(--color-primary)}button span{flex-grow:1}a.button,button{align-items:center;background-color:var(--provider-bg);border-color:rgba(0,0,0,.1);border-radius:var(--border-radius);color:var(--provider-color,var(--color-primary));display:flex;font-size:1.1rem;font-weight:500;justify-content:center;min-height:62px;padding:.75rem 1rem;position:relative;transition:all .1s ease-in-out}a.button:hover,button:hover{background-color:var(--provider-bg-hover,var(--color-background-hover));cursor:pointer}a.button:active,button:active{cursor:pointer}a.button #provider-logo,button #provider-logo{display:block;width:25px}a.button #provider-logo-dark,button #provider-logo-dark{display:none}#submitButton{background-color:var(--brand-color,var(--color-info));color:var(--button-text-color,var(--color-info-text));width:100%}#submitButton:hover{background-color:var(--button-hover-bg,var(--color-info-hover))!important}a.site{color:var(--color-primary);font-size:1rem;line-height:2rem;text-decoration:none}a.site:hover{text-decoration:underline}.page{box-sizing:border-box;display:grid;height:100%;margin:0;padding:0;place-items:center;position:absolute;width:100%}.page>div{text-align:center}.error a.button{margin-top:.5rem;padding-left:2rem;padding-right:2rem}.error .message{margin-bottom:1.5rem}.signin input[type=text]{display:block;margin-left:auto;margin-right:auto}.signin hr{border:0;border-top:1px solid var(--color-separator);display:block;margin:2rem auto 1rem;overflow:visible}.signin hr:before{background:var(--color-background-card);color:#888;content:\\\"or\\\";padding:0 .4rem;position:relative;top:-.7rem}.signin .error{background:#f5f5f5;background:var(--color-error);border-radius:.3rem;font-weight:500}.signin .error p{color:var(--color-info-text);font-size:.9rem;line-height:1.2rem;padding:.5rem 1rem;text-align:left}.signin form,.signin>div{display:block}.signin form input[type],.signin>div input[type]{margin-bottom:.5rem}.signin form button,.signin>div button{width:100%}.signin .provider+.provider{margin-top:1rem}.logo{display:inline-block;margin:1.25rem 0;max-height:70px;max-width:150px}.card{background-color:var(--color-background-card);border-radius:2rem;padding:1.25rem 2rem}.card .header{color:var(--color-primary)}.section-header{color:var(--color-text)}@media screen and (min-width:450px){.card{margin:2rem 0;width:368px}}@media screen and (max-width:450px){.card{margin:1rem 0;width:343px}}\";\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCI6cm9vdHstLWJvcmRlci13aWR0aDoxcHg7LS1ib3JkZXItcmFkaXVzOjAuNXJlbTstLWNvbG9yLWVycm9yOiNjOTRiNGI7LS1jb2xvci1pbmZvOiMxNTdlZmI7LS1jb2xvci1pbmZvLWhvdmVyOiMwZjZkZGI7LS1jb2xvci1pbmZvLXRleHQ6I2ZmZn0uX19uZXh0LWF1dGgtdGhlbWUtYXV0bywuX19uZXh0LWF1dGgtdGhlbWUtbGlnaHR7LS1jb2xvci1iYWNrZ3JvdW5kOiNlY2VjZWM7LS1jb2xvci1iYWNrZ3JvdW5kLWhvdmVyOmhzbGEoMCwwJSw5MyUsLjgpOy0tY29sb3ItYmFja2dyb3VuZC1jYXJkOiNmZmY7LS1jb2xvci10ZXh0OiMwMDA7LS1jb2xvci1wcmltYXJ5OiM0NDQ7LS1jb2xvci1jb250cm9sLWJvcmRlcjojYmJiOy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiNmOWY5Zjk7LS1jb2xvci1idXR0b24tYWN0aXZlLWJvcmRlcjojYWFhOy0tY29sb3Itc2VwYXJhdG9yOiNjY2N9Ll9fbmV4dC1hdXRoLXRoZW1lLWRhcmt7LS1jb2xvci1iYWNrZ3JvdW5kOiMxNjFiMjI7LS1jb2xvci1iYWNrZ3JvdW5kLWhvdmVyOnJnYmEoMjIsMjcsMzQsLjgpOy0tY29sb3ItYmFja2dyb3VuZC1jYXJkOiMwZDExMTc7LS1jb2xvci10ZXh0OiNmZmY7LS1jb2xvci1wcmltYXJ5OiNjY2M7LS1jb2xvci1jb250cm9sLWJvcmRlcjojNTU1Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiMwNjA2MDY7LS1jb2xvci1idXR0b24tYWN0aXZlLWJvcmRlcjojNjY2Oy0tY29sb3Itc2VwYXJhdG9yOiM0NDR9QG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTpkYXJrKXsuX19uZXh0LWF1dGgtdGhlbWUtYXV0b3stLWNvbG9yLWJhY2tncm91bmQ6IzE2MWIyMjstLWNvbG9yLWJhY2tncm91bmQtaG92ZXI6cmdiYSgyMiwyNywzNCwuOCk7LS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQ6IzBkMTExNzstLWNvbG9yLXRleHQ6I2ZmZjstLWNvbG9yLXByaW1hcnk6I2NjYzstLWNvbG9yLWNvbnRyb2wtYm9yZGVyOiM1NTU7LS1jb2xvci1idXR0b24tYWN0aXZlLWJhY2tncm91bmQ6IzA2MDYwNjstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiM2NjY7LS1jb2xvci1zZXBhcmF0b3I6IzQ0NH1hLmJ1dHRvbixidXR0b257YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1wcm92aWRlci1kYXJrLWJnLHZhcigtLWNvbG9yLWJhY2tncm91bmQpKTtjb2xvcjp2YXIoLS1wcm92aWRlci1kYXJrLWNvbG9yLHZhcigtLWNvbG9yLXByaW1hcnkpKX1hLmJ1dHRvbjpob3ZlcixidXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1wcm92aWRlci1kYXJrLWJnLWhvdmVyLHZhcigtLWNvbG9yLWJhY2tncm91bmQtaG92ZXIpKSFpbXBvcnRhbnR9I3Byb3ZpZGVyLWxvZ297ZGlzcGxheTpub25lIWltcG9ydGFudH0jcHJvdmlkZXItbG9nby1kYXJre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjI1cHh9fWh0bWx7Ym94LXNpemluZzpib3JkZXItYm94fSosOmFmdGVyLDpiZWZvcmV7Ym94LXNpemluZzppbmhlcml0O21hcmdpbjowO3BhZGRpbmc6MH1ib2R5e2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZCk7Zm9udC1mYW1pbHk6dWktc2Fucy1zZXJpZixzeXN0ZW0tdWksLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsU2Vnb2UgVUksUm9ib3RvLEhlbHZldGljYSBOZXVlLEFyaWFsLE5vdG8gU2FucyxzYW5zLXNlcmlmLEFwcGxlIENvbG9yIEVtb2ppLFNlZ29lIFVJIEVtb2ppLFNlZ29lIFVJIFN5bWJvbCxOb3RvIENvbG9yIEVtb2ppO21hcmdpbjowO3BhZGRpbmc6MH1oMXtmb250LXdlaWdodDo0MDB9aDEscHtjb2xvcjp2YXIoLS1jb2xvci10ZXh0KTttYXJnaW4tYm90dG9tOjEuNXJlbTtwYWRkaW5nOjAgMXJlbX1mb3Jte21hcmdpbjowO3BhZGRpbmc6MH1sYWJlbHtmb250LXdlaWdodDo1MDA7bWFyZ2luLWJvdHRvbTouMjVyZW07dGV4dC1hbGlnbjpsZWZ0fWlucHV0W3R5cGVdLGxhYmVse2NvbG9yOnZhcigtLWNvbG9yLXRleHQpO2Rpc3BsYXk6YmxvY2t9aW5wdXRbdHlwZV17YmFja2dyb3VuZDp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQpO2JvcmRlcjp2YXIoLS1ib3JkZXItd2lkdGgpIHNvbGlkIHZhcigtLWNvbG9yLWNvbnRyb2wtYm9yZGVyKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LXNpemU6MXJlbTtwYWRkaW5nOi41cmVtIDFyZW07d2lkdGg6MTAwJX1pbnB1dFt0eXBlXTpmb2N1c3tib3gtc2hhZG93Om5vbmV9cHtmb250LXNpemU6MS4xcmVtO2xpbmUtaGVpZ2h0OjJyZW19YS5idXR0b257bGluZS1oZWlnaHQ6MXJlbTt0ZXh0LWRlY29yYXRpb246bm9uZX1hLmJ1dHRvbjpsaW5rLGEuYnV0dG9uOnZpc2l0ZWR7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKTtjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KX1idXR0b24gc3BhbntmbGV4LWdyb3c6MX1hLmJ1dHRvbixidXR0b257YWxpZ24taXRlbXM6Y2VudGVyO2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItYmcpO2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC4xKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2NvbG9yOnZhcigtLXByb3ZpZGVyLWNvbG9yLHZhcigtLWNvbG9yLXByaW1hcnkpKTtkaXNwbGF5OmZsZXg7Zm9udC1zaXplOjEuMXJlbTtmb250LXdlaWdodDo1MDA7anVzdGlmeS1jb250ZW50OmNlbnRlcjttaW4taGVpZ2h0OjYycHg7cGFkZGluZzouNzVyZW0gMXJlbTtwb3NpdGlvbjpyZWxhdGl2ZTt0cmFuc2l0aW9uOmFsbCAuMXMgZWFzZS1pbi1vdXR9YS5idXR0b246aG92ZXIsYnV0dG9uOmhvdmVye2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItYmctaG92ZXIsdmFyKC0tY29sb3ItYmFja2dyb3VuZC1ob3ZlcikpO2N1cnNvcjpwb2ludGVyfWEuYnV0dG9uOmFjdGl2ZSxidXR0b246YWN0aXZle2N1cnNvcjpwb2ludGVyfWEuYnV0dG9uICNwcm92aWRlci1sb2dvLGJ1dHRvbiAjcHJvdmlkZXItbG9nb3tkaXNwbGF5OmJsb2NrO3dpZHRoOjI1cHh9YS5idXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFyayxidXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFya3tkaXNwbGF5Om5vbmV9I3N1Ym1pdEJ1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWJyYW5kLWNvbG9yLHZhcigtLWNvbG9yLWluZm8pKTtjb2xvcjp2YXIoLS1idXR0b24tdGV4dC1jb2xvcix2YXIoLS1jb2xvci1pbmZvLXRleHQpKTt3aWR0aDoxMDAlfSNzdWJtaXRCdXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1idXR0b24taG92ZXItYmcsdmFyKC0tY29sb3ItaW5mby1ob3ZlcikpIWltcG9ydGFudH1hLnNpdGV7Y29sb3I6dmFyKC0tY29sb3ItcHJpbWFyeSk7Zm9udC1zaXplOjFyZW07bGluZS1oZWlnaHQ6MnJlbTt0ZXh0LWRlY29yYXRpb246bm9uZX1hLnNpdGU6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0ucGFnZXtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpncmlkO2hlaWdodDoxMDAlO21hcmdpbjowO3BhZGRpbmc6MDtwbGFjZS1pdGVtczpjZW50ZXI7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJX0ucGFnZT5kaXZ7dGV4dC1hbGlnbjpjZW50ZXJ9LmVycm9yIGEuYnV0dG9ue21hcmdpbi10b3A6LjVyZW07cGFkZGluZy1sZWZ0OjJyZW07cGFkZGluZy1yaWdodDoycmVtfS5lcnJvciAubWVzc2FnZXttYXJnaW4tYm90dG9tOjEuNXJlbX0uc2lnbmluIGlucHV0W3R5cGU9dGV4dF17ZGlzcGxheTpibG9jazttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvfS5zaWduaW4gaHJ7Ym9yZGVyOjA7Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tY29sb3Itc2VwYXJhdG9yKTtkaXNwbGF5OmJsb2NrO21hcmdpbjoycmVtIGF1dG8gMXJlbTtvdmVyZmxvdzp2aXNpYmxlfS5zaWduaW4gaHI6YmVmb3Jle2JhY2tncm91bmQ6dmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtjb2xvcjojODg4O2NvbnRlbnQ6XFxcIm9yXFxcIjtwYWRkaW5nOjAgLjRyZW07cG9zaXRpb246cmVsYXRpdmU7dG9wOi0uN3JlbX0uc2lnbmluIC5lcnJvcntiYWNrZ3JvdW5kOiNmNWY1ZjU7YmFja2dyb3VuZDp2YXIoLS1jb2xvci1lcnJvcik7Ym9yZGVyLXJhZGl1czouM3JlbTtmb250LXdlaWdodDo1MDB9LnNpZ25pbiAuZXJyb3IgcHtjb2xvcjp2YXIoLS1jb2xvci1pbmZvLXRleHQpO2ZvbnQtc2l6ZTouOXJlbTtsaW5lLWhlaWdodDoxLjJyZW07cGFkZGluZzouNXJlbSAxcmVtO3RleHQtYWxpZ246bGVmdH0uc2lnbmluIGZvcm0sLnNpZ25pbj5kaXZ7ZGlzcGxheTpibG9ja30uc2lnbmluIGZvcm0gaW5wdXRbdHlwZV0sLnNpZ25pbj5kaXYgaW5wdXRbdHlwZV17bWFyZ2luLWJvdHRvbTouNXJlbX0uc2lnbmluIGZvcm0gYnV0dG9uLC5zaWduaW4+ZGl2IGJ1dHRvbnt3aWR0aDoxMDAlfS5zaWduaW4gLnByb3ZpZGVyKy5wcm92aWRlcnttYXJnaW4tdG9wOjFyZW19LmxvZ297ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjEuMjVyZW0gMDttYXgtaGVpZ2h0OjcwcHg7bWF4LXdpZHRoOjE1MHB4fS5jYXJke2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtib3JkZXItcmFkaXVzOjJyZW07cGFkZGluZzoxLjI1cmVtIDJyZW19LmNhcmQgLmhlYWRlcntjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KX0uc2VjdGlvbi1oZWFkZXJ7Y29sb3I6dmFyKC0tY29sb3ItdGV4dCl9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0NTBweCl7LmNhcmR7bWFyZ2luOjJyZW0gMDt3aWR0aDozNjhweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo0NTBweCl7LmNhcmR7bWFyZ2luOjFyZW0gMDt3aWR0aDozNDNweH19XCIgfSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFlBQVc7RUFBRSxPQUFPLHFzSkFBcXNKO0FBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOlswXX0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/css/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {};\nObject.defineProperty(exports, \"default\", ({\n  enumerable: true,\n  get: function () {\n    return _next.default;\n  }\n}));\nvar _types = __webpack_require__(/*! ./core/types */ \"(rsc)/./node_modules/next-auth/core/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\nvar _next = _interopRequireWildcard(__webpack_require__(/*! ./next */ \"(rsc)/./node_modules/next-auth/next/index.js\"));\nObject.keys(_next).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _next[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _next[key];\n    }\n  });\n});\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGLElBQUlDLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDckJKLDJDQUEwQztFQUN4Q0ssVUFBVSxFQUFFLElBQUk7RUFDaEJDLEdBQUcsRUFBRSxTQUFBQSxDQUFBLEVBQVk7SUFDZixPQUFPQyxLQUFLLENBQUNDLE9BQU87RUFDdEI7QUFDRixDQUFDLEVBQUM7QUFDRixJQUFJQyxNQUFNLEdBQUdDLG1CQUFPLENBQUMsa0VBQWMsQ0FBQztBQUNwQ1YsTUFBTSxDQUFDVyxJQUFJLENBQUNGLE1BQU0sQ0FBQyxDQUFDRyxPQUFPLENBQUMsVUFBVUMsR0FBRyxFQUFFO0VBQ3pDLElBQUlBLEdBQUcsS0FBSyxTQUFTLElBQUlBLEdBQUcsS0FBSyxZQUFZLEVBQUU7RUFDL0MsSUFBSWIsTUFBTSxDQUFDYyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixZQUFZLEVBQUVTLEdBQUcsQ0FBQyxFQUFFO0VBQzdELElBQUlBLEdBQUcsSUFBSVgsT0FBTyxJQUFJQSxPQUFPLENBQUNXLEdBQUcsQ0FBQyxLQUFLSixNQUFNLENBQUNJLEdBQUcsQ0FBQyxFQUFFO0VBQ3BEYixNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFVyxHQUFHLEVBQUU7SUFDbENSLFVBQVUsRUFBRSxJQUFJO0lBQ2hCQyxHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO01BQ2YsT0FBT0csTUFBTSxDQUFDSSxHQUFHLENBQUM7SUFDcEI7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFDRixJQUFJTixLQUFLLEdBQUdVLHVCQUF1QixDQUFDUCxtQkFBTyxDQUFDLDREQUFRLENBQUMsQ0FBQztBQUN0RFYsTUFBTSxDQUFDVyxJQUFJLENBQUNKLEtBQUssQ0FBQyxDQUFDSyxPQUFPLENBQUMsVUFBVUMsR0FBRyxFQUFFO0VBQ3hDLElBQUlBLEdBQUcsS0FBSyxTQUFTLElBQUlBLEdBQUcsS0FBSyxZQUFZLEVBQUU7RUFDL0MsSUFBSWIsTUFBTSxDQUFDYyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixZQUFZLEVBQUVTLEdBQUcsQ0FBQyxFQUFFO0VBQzdELElBQUlBLEdBQUcsSUFBSVgsT0FBTyxJQUFJQSxPQUFPLENBQUNXLEdBQUcsQ0FBQyxLQUFLTixLQUFLLENBQUNNLEdBQUcsQ0FBQyxFQUFFO0VBQ25EYixNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFVyxHQUFHLEVBQUU7SUFDbENSLFVBQVUsRUFBRSxJQUFJO0lBQ2hCQyxHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO01BQ2YsT0FBT0MsS0FBSyxDQUFDTSxHQUFHLENBQUM7SUFDbkI7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFDRixTQUFTSyx3QkFBd0JBLENBQUNDLENBQUMsRUFBRTtFQUFFLElBQUksVUFBVSxJQUFJLE9BQU9DLE9BQU8sRUFBRSxPQUFPLElBQUk7RUFBRSxJQUFJQyxDQUFDLEdBQUcsSUFBSUQsT0FBTyxDQUFDLENBQUM7SUFBRUUsQ0FBQyxHQUFHLElBQUlGLE9BQU8sQ0FBQyxDQUFDO0VBQUUsT0FBTyxDQUFDRix3QkFBd0IsR0FBRyxTQUFBQSxDQUFVQyxDQUFDLEVBQUU7SUFBRSxPQUFPQSxDQUFDLEdBQUdHLENBQUMsR0FBR0QsQ0FBQztFQUFFLENBQUMsRUFBRUYsQ0FBQyxDQUFDO0FBQUU7QUFDM00sU0FBU0YsdUJBQXVCQSxDQUFDRSxDQUFDLEVBQUVFLENBQUMsRUFBRTtFQUFFLElBQUksQ0FBQ0EsQ0FBQyxJQUFJRixDQUFDLElBQUlBLENBQUMsQ0FBQ0ksVUFBVSxFQUFFLE9BQU9KLENBQUM7RUFBRSxJQUFJLElBQUksS0FBS0EsQ0FBQyxJQUFJLFFBQVEsSUFBSSxPQUFPQSxDQUFDLElBQUksVUFBVSxJQUFJLE9BQU9BLENBQUMsRUFBRSxPQUFPO0lBQUVYLE9BQU8sRUFBRVc7RUFBRSxDQUFDO0VBQUUsSUFBSUcsQ0FBQyxHQUFHSix3QkFBd0IsQ0FBQ0csQ0FBQyxDQUFDO0VBQUUsSUFBSUMsQ0FBQyxJQUFJQSxDQUFDLENBQUNFLEdBQUcsQ0FBQ0wsQ0FBQyxDQUFDLEVBQUUsT0FBT0csQ0FBQyxDQUFDaEIsR0FBRyxDQUFDYSxDQUFDLENBQUM7RUFBRSxJQUFJTSxDQUFDLEdBQUc7TUFBRUMsU0FBUyxFQUFFO0lBQUssQ0FBQztJQUFFQyxDQUFDLEdBQUczQixNQUFNLENBQUNDLGNBQWMsSUFBSUQsTUFBTSxDQUFDNEIsd0JBQXdCO0VBQUUsS0FBSyxJQUFJQyxDQUFDLElBQUlWLENBQUMsRUFBRSxJQUFJLFNBQVMsS0FBS1UsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDZCxjQUFjLENBQUNDLElBQUksQ0FBQ0csQ0FBQyxFQUFFVSxDQUFDLENBQUMsRUFBRTtJQUFFLElBQUlDLENBQUMsR0FBR0gsQ0FBQyxHQUFHM0IsTUFBTSxDQUFDNEIsd0JBQXdCLENBQUNULENBQUMsRUFBRVUsQ0FBQyxDQUFDLEdBQUcsSUFBSTtJQUFFQyxDQUFDLEtBQUtBLENBQUMsQ0FBQ3hCLEdBQUcsSUFBSXdCLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEdBQUcvQixNQUFNLENBQUNDLGNBQWMsQ0FBQ3dCLENBQUMsRUFBRUksQ0FBQyxFQUFFQyxDQUFDLENBQUMsR0FBR0wsQ0FBQyxDQUFDSSxDQUFDLENBQUMsR0FBR1YsQ0FBQyxDQUFDVSxDQUFDLENBQUM7RUFBRTtFQUFFLE9BQU9KLENBQUMsQ0FBQ2pCLE9BQU8sR0FBR1csQ0FBQyxFQUFFRyxDQUFDLElBQUlBLENBQUMsQ0FBQ1MsR0FBRyxDQUFDWixDQUFDLEVBQUVNLENBQUMsQ0FBQyxFQUFFQSxDQUFDO0FBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7fTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX25leHQuZGVmYXVsdDtcbiAgfVxufSk7XG52YXIgX3R5cGVzID0gcmVxdWlyZShcIi4vY29yZS90eXBlc1wiKTtcbk9iamVjdC5rZXlzKF90eXBlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3R5cGVzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3R5cGVzW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xudmFyIF9uZXh0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vbmV4dFwiKSk7XG5PYmplY3Qua2V5cyhfbmV4dCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX25leHRba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfbmV4dFtrZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIFdlYWtNYXApIHJldHVybiBudWxsOyB2YXIgciA9IG5ldyBXZWFrTWFwKCksIHQgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBlID8gdCA6IHI7IH0pKGUpOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChlLCByKSB7IGlmICghciAmJiBlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7IGlmIChudWxsID09PSBlIHx8IFwib2JqZWN0XCIgIT0gdHlwZW9mIGUgJiYgXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlKSByZXR1cm4geyBkZWZhdWx0OiBlIH07IHZhciB0ID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKHIpOyBpZiAodCAmJiB0LmhhcyhlKSkgcmV0dXJuIHQuZ2V0KGUpOyB2YXIgbiA9IHsgX19wcm90b19fOiBudWxsIH0sIGEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIgdSBpbiBlKSBpZiAoXCJkZWZhdWx0XCIgIT09IHUgJiYge30uaGFzT3duUHJvcGVydHkuY2FsbChlLCB1KSkgeyB2YXIgaSA9IGEgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHUpIDogbnVsbDsgaSAmJiAoaS5nZXQgfHwgaS5zZXQpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sIHUsIGkpIDogblt1XSA9IGVbdV07IH0gcmV0dXJuIG4uZGVmYXVsdCA9IGUsIHQgJiYgdC5zZXQoZSwgbiksIG47IH0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfZXhwb3J0TmFtZXMiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX25leHQiLCJkZWZhdWx0IiwiX3R5cGVzIiwicmVxdWlyZSIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImhhcyIsIm4iLCJfX3Byb3RvX18iLCJhIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImkiLCJzZXQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/jwt/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  encode: true,\n  decode: true,\n  getToken: true\n};\nexports.decode = decode;\nexports.encode = encode;\nexports.getToken = getToken;\nvar _jose = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/index.js\");\nvar _hkdf = _interopRequireDefault(__webpack_require__(/*! @panva/hkdf */ \"(rsc)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\"));\nvar _uuid = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\");\nvar _cookie = __webpack_require__(/*! ../core/lib/cookie */ \"(rsc)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/next-auth/jwt/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60;\nconst now = () => Date.now() / 1000 | 0;\nasync function encode(params) {\n  const {\n    token = {},\n    secret,\n    maxAge = DEFAULT_MAX_AGE,\n    salt = \"\"\n  } = params;\n  const encryptionSecret = await getDerivedEncryptionKey(secret, salt);\n  return await new _jose.EncryptJWT(token).setProtectedHeader({\n    alg: \"dir\",\n    enc: \"A256GCM\"\n  }).setIssuedAt().setExpirationTime(now() + maxAge).setJti((0, _uuid.v4)()).encrypt(encryptionSecret);\n}\nasync function decode(params) {\n  const {\n    token,\n    secret,\n    salt = \"\"\n  } = params;\n  if (!token) return null;\n  const encryptionSecret = await getDerivedEncryptionKey(secret, salt);\n  const {\n    payload\n  } = await (0, _jose.jwtDecrypt)(token, encryptionSecret, {\n    clockTolerance: 15\n  });\n  return payload;\n}\nasync function getToken(params) {\n  var _process$env$NEXTAUTH, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _req$headers;\n  const {\n    req,\n    secureCookie = (_process$env$NEXTAUTH = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL) === null || _process$env$NEXTAUTH2 === void 0 ? void 0 : _process$env$NEXTAUTH2.startsWith(\"https://\")) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : !!process.env.VERCEL,\n    cookieName = secureCookie ? \"__Secure-next-auth.session-token\" : \"next-auth.session-token\",\n    raw,\n    decode: _decode = decode,\n    logger = console,\n    secret = (_process$env$NEXTAUTH3 = process.env.NEXTAUTH_SECRET) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.AUTH_SECRET\n  } = params;\n  if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n  const sessionStore = new _cookie.SessionStore({\n    name: cookieName,\n    options: {\n      secure: secureCookie\n    }\n  }, {\n    cookies: req.cookies,\n    headers: req.headers\n  }, logger);\n  let token = sessionStore.value;\n  const authorizationHeader = req.headers instanceof Headers ? req.headers.get(\"authorization\") : (_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.authorization;\n  if (!token && (authorizationHeader === null || authorizationHeader === void 0 ? void 0 : authorizationHeader.split(\" \")[0]) === \"Bearer\") {\n    const urlEncodedToken = authorizationHeader.split(\" \")[1];\n    token = decodeURIComponent(urlEncodedToken);\n  }\n  if (!token) return null;\n  if (raw) return token;\n  try {\n    return await _decode({\n      token,\n      secret\n    });\n  } catch (_unused) {\n    return null;\n  }\n}\nasync function getDerivedEncryptionKey(keyMaterial, salt) {\n  return await (0, _hkdf.default)(\"sha256\", keyMaterial, salt, `NextAuth.js Generated Encryption Key${salt ? ` (${salt})` : \"\"}`, 32);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJQSxzQkFBc0IsR0FBR0MsbUJBQU8sQ0FBQywwSEFBOEMsQ0FBQztBQUNwRkMsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRixJQUFJQyxZQUFZLEdBQUc7RUFDakJDLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLFFBQVEsRUFBRTtBQUNaLENBQUM7QUFDREwsY0FBYyxHQUFHSSxNQUFNO0FBQ3ZCSixjQUFjLEdBQUdHLE1BQU07QUFDdkJILGdCQUFnQixHQUFHSyxRQUFRO0FBQzNCLElBQUlDLEtBQUssR0FBR1QsbUJBQU8sQ0FBQyxxRkFBTSxDQUFDO0FBQzNCLElBQUlVLEtBQUssR0FBR1gsc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsNEVBQWEsQ0FBQyxDQUFDO0FBQzFELElBQUlXLEtBQUssR0FBR1gsbUJBQU8sQ0FBQyw4REFBTSxDQUFDO0FBQzNCLElBQUlZLE9BQU8sR0FBR1osbUJBQU8sQ0FBQyw2RUFBb0IsQ0FBQztBQUMzQyxJQUFJYSxNQUFNLEdBQUdiLG1CQUFPLENBQUMsNERBQVMsQ0FBQztBQUMvQkMsTUFBTSxDQUFDYSxJQUFJLENBQUNELE1BQU0sQ0FBQyxDQUFDRSxPQUFPLENBQUMsVUFBVUMsR0FBRyxFQUFFO0VBQ3pDLElBQUlBLEdBQUcsS0FBSyxTQUFTLElBQUlBLEdBQUcsS0FBSyxZQUFZLEVBQUU7RUFDL0MsSUFBSWYsTUFBTSxDQUFDZ0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ2QsWUFBWSxFQUFFVyxHQUFHLENBQUMsRUFBRTtFQUM3RCxJQUFJQSxHQUFHLElBQUliLE9BQU8sSUFBSUEsT0FBTyxDQUFDYSxHQUFHLENBQUMsS0FBS0gsTUFBTSxDQUFDRyxHQUFHLENBQUMsRUFBRTtFQUNwRGYsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRWEsR0FBRyxFQUFFO0lBQ2xDSSxVQUFVLEVBQUUsSUFBSTtJQUNoQkMsR0FBRyxFQUFFLFNBQUFBLENBQUEsRUFBWTtNQUNmLE9BQU9SLE1BQU0sQ0FBQ0csR0FBRyxDQUFDO0lBQ3BCO0VBQ0YsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBQ0YsTUFBTU0sZUFBZSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7QUFDekMsTUFBTUMsR0FBRyxHQUFHQSxDQUFBLEtBQU1DLElBQUksQ0FBQ0QsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQztBQUN2QyxlQUFlakIsTUFBTUEsQ0FBQ21CLE1BQU0sRUFBRTtFQUM1QixNQUFNO0lBQ0pDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDVkMsTUFBTTtJQUNOQyxNQUFNLEdBQUdOLGVBQWU7SUFDeEJPLElBQUksR0FBRztFQUNULENBQUMsR0FBR0osTUFBTTtFQUNWLE1BQU1LLGdCQUFnQixHQUFHLE1BQU1DLHVCQUF1QixDQUFDSixNQUFNLEVBQUVFLElBQUksQ0FBQztFQUNwRSxPQUFPLE1BQU0sSUFBSXBCLEtBQUssQ0FBQ3VCLFVBQVUsQ0FBQ04sS0FBSyxDQUFDLENBQUNPLGtCQUFrQixDQUFDO0lBQzFEQyxHQUFHLEVBQUUsS0FBSztJQUNWQyxHQUFHLEVBQUU7RUFDUCxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUNkLEdBQUcsQ0FBQyxDQUFDLEdBQUdLLE1BQU0sQ0FBQyxDQUFDVSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUzQixLQUFLLENBQUM0QixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQ1YsZ0JBQWdCLENBQUM7QUFDdEc7QUFDQSxlQUFldkIsTUFBTUEsQ0FBQ2tCLE1BQU0sRUFBRTtFQUM1QixNQUFNO0lBQ0pDLEtBQUs7SUFDTEMsTUFBTTtJQUNORSxJQUFJLEdBQUc7RUFDVCxDQUFDLEdBQUdKLE1BQU07RUFDVixJQUFJLENBQUNDLEtBQUssRUFBRSxPQUFPLElBQUk7RUFDdkIsTUFBTUksZ0JBQWdCLEdBQUcsTUFBTUMsdUJBQXVCLENBQUNKLE1BQU0sRUFBRUUsSUFBSSxDQUFDO0VBQ3BFLE1BQU07SUFDSlk7RUFDRixDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsRUFBRWhDLEtBQUssQ0FBQ2lDLFVBQVUsRUFBRWhCLEtBQUssRUFBRUksZ0JBQWdCLEVBQUU7SUFDdkRhLGNBQWMsRUFBRTtFQUNsQixDQUFDLENBQUM7RUFDRixPQUFPRixPQUFPO0FBQ2hCO0FBQ0EsZUFBZWpDLFFBQVFBLENBQUNpQixNQUFNLEVBQUU7RUFDOUIsSUFBSW1CLHFCQUFxQixFQUFFQyxzQkFBc0IsRUFBRUMsc0JBQXNCLEVBQUVDLFlBQVk7RUFDdkYsTUFBTTtJQUNKQyxHQUFHO0lBQ0hDLFlBQVksR0FBRyxDQUFDTCxxQkFBcUIsR0FBRyxDQUFDQyxzQkFBc0IsR0FBR0ssT0FBTyxDQUFDQyxHQUFHLENBQUNDLFlBQVksTUFBTSxJQUFJLElBQUlQLHNCQUFzQixLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxzQkFBc0IsQ0FBQ1EsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLElBQUksSUFBSVQscUJBQXFCLEtBQUssS0FBSyxDQUFDLEdBQUdBLHFCQUFxQixHQUFHLENBQUMsQ0FBQ00sT0FBTyxDQUFDQyxHQUFHLENBQUNHLE1BQU07SUFDL1JDLFVBQVUsR0FBR04sWUFBWSxHQUFHLGtDQUFrQyxHQUFHLHlCQUF5QjtJQUMxRk8sR0FBRztJQUNIakQsTUFBTSxFQUFFa0QsT0FBTyxHQUFHbEQsTUFBTTtJQUN4Qm1ELE1BQU0sR0FBR0MsT0FBTztJQUNoQmhDLE1BQU0sR0FBRyxDQUFDbUIsc0JBQXNCLEdBQUdJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUyxlQUFlLE1BQU0sSUFBSSxJQUFJZCxzQkFBc0IsS0FBSyxLQUFLLENBQUMsR0FBR0Esc0JBQXNCLEdBQUdJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDVTtFQUN2SixDQUFDLEdBQUdwQyxNQUFNO0VBQ1YsSUFBSSxDQUFDdUIsR0FBRyxFQUFFLE1BQU0sSUFBSWMsS0FBSyxDQUFDLG1DQUFtQyxDQUFDO0VBQzlELE1BQU1DLFlBQVksR0FBRyxJQUFJbkQsT0FBTyxDQUFDb0QsWUFBWSxDQUFDO0lBQzVDQyxJQUFJLEVBQUVWLFVBQVU7SUFDaEJXLE9BQU8sRUFBRTtNQUNQQyxNQUFNLEVBQUVsQjtJQUNWO0VBQ0YsQ0FBQyxFQUFFO0lBQ0RtQixPQUFPLEVBQUVwQixHQUFHLENBQUNvQixPQUFPO0lBQ3BCQyxPQUFPLEVBQUVyQixHQUFHLENBQUNxQjtFQUNmLENBQUMsRUFBRVgsTUFBTSxDQUFDO0VBQ1YsSUFBSWhDLEtBQUssR0FBR3FDLFlBQVksQ0FBQzNELEtBQUs7RUFDOUIsTUFBTWtFLG1CQUFtQixHQUFHdEIsR0FBRyxDQUFDcUIsT0FBTyxZQUFZRSxPQUFPLEdBQUd2QixHQUFHLENBQUNxQixPQUFPLENBQUNoRCxHQUFHLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQzBCLFlBQVksR0FBR0MsR0FBRyxDQUFDcUIsT0FBTyxNQUFNLElBQUksSUFBSXRCLFlBQVksS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsWUFBWSxDQUFDeUIsYUFBYTtFQUN0TSxJQUFJLENBQUM5QyxLQUFLLElBQUksQ0FBQzRDLG1CQUFtQixLQUFLLElBQUksSUFBSUEsbUJBQW1CLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLG1CQUFtQixDQUFDRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sUUFBUSxFQUFFO0lBQ3hJLE1BQU1DLGVBQWUsR0FBR0osbUJBQW1CLENBQUNHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekQvQyxLQUFLLEdBQUdpRCxrQkFBa0IsQ0FBQ0QsZUFBZSxDQUFDO0VBQzdDO0VBQ0EsSUFBSSxDQUFDaEQsS0FBSyxFQUFFLE9BQU8sSUFBSTtFQUN2QixJQUFJOEIsR0FBRyxFQUFFLE9BQU85QixLQUFLO0VBQ3JCLElBQUk7SUFDRixPQUFPLE1BQU0rQixPQUFPLENBQUM7TUFDbkIvQixLQUFLO01BQ0xDO0lBQ0YsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDLE9BQU9pRCxPQUFPLEVBQUU7SUFDaEIsT0FBTyxJQUFJO0VBQ2I7QUFDRjtBQUNBLGVBQWU3Qyx1QkFBdUJBLENBQUM4QyxXQUFXLEVBQUVoRCxJQUFJLEVBQUU7RUFDeEQsT0FBTyxNQUFNLENBQUMsQ0FBQyxFQUFFbkIsS0FBSyxDQUFDb0UsT0FBTyxFQUFFLFFBQVEsRUFBRUQsV0FBVyxFQUFFaEQsSUFBSSxFQUFHLHVDQUFzQ0EsSUFBSSxHQUFJLEtBQUlBLElBQUssR0FBRSxHQUFHLEVBQUcsRUFBQyxFQUFFLEVBQUUsQ0FBQztBQUNySSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIF9leHBvcnROYW1lcyA9IHtcbiAgZW5jb2RlOiB0cnVlLFxuICBkZWNvZGU6IHRydWUsXG4gIGdldFRva2VuOiB0cnVlXG59O1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbmV4cG9ydHMuZ2V0VG9rZW4gPSBnZXRUb2tlbjtcbnZhciBfam9zZSA9IHJlcXVpcmUoXCJqb3NlXCIpO1xudmFyIF9oa2RmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQHBhbnZhL2hrZGZcIikpO1xudmFyIF91dWlkID0gcmVxdWlyZShcInV1aWRcIik7XG52YXIgX2Nvb2tpZSA9IHJlcXVpcmUoXCIuLi9jb3JlL2xpYi9jb29raWVcIik7XG52YXIgX3R5cGVzID0gcmVxdWlyZShcIi4vdHlwZXNcIik7XG5PYmplY3Qua2V5cyhfdHlwZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF90eXBlc1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF90eXBlc1trZXldO1xuICAgIH1cbiAgfSk7XG59KTtcbmNvbnN0IERFRkFVTFRfTUFYX0FHRSA9IDMwICogMjQgKiA2MCAqIDYwO1xuY29uc3Qgbm93ID0gKCkgPT4gRGF0ZS5ub3coKSAvIDEwMDAgfCAwO1xuYXN5bmMgZnVuY3Rpb24gZW5jb2RlKHBhcmFtcykge1xuICBjb25zdCB7XG4gICAgdG9rZW4gPSB7fSxcbiAgICBzZWNyZXQsXG4gICAgbWF4QWdlID0gREVGQVVMVF9NQVhfQUdFLFxuICAgIHNhbHQgPSBcIlwiXG4gIH0gPSBwYXJhbXM7XG4gIGNvbnN0IGVuY3J5cHRpb25TZWNyZXQgPSBhd2FpdCBnZXREZXJpdmVkRW5jcnlwdGlvbktleShzZWNyZXQsIHNhbHQpO1xuICByZXR1cm4gYXdhaXQgbmV3IF9qb3NlLkVuY3J5cHRKV1QodG9rZW4pLnNldFByb3RlY3RlZEhlYWRlcih7XG4gICAgYWxnOiBcImRpclwiLFxuICAgIGVuYzogXCJBMjU2R0NNXCJcbiAgfSkuc2V0SXNzdWVkQXQoKS5zZXRFeHBpcmF0aW9uVGltZShub3coKSArIG1heEFnZSkuc2V0SnRpKCgwLCBfdXVpZC52NCkoKSkuZW5jcnlwdChlbmNyeXB0aW9uU2VjcmV0KTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGRlY29kZShwYXJhbXMpIHtcbiAgY29uc3Qge1xuICAgIHRva2VuLFxuICAgIHNlY3JldCxcbiAgICBzYWx0ID0gXCJcIlxuICB9ID0gcGFyYW1zO1xuICBpZiAoIXRva2VuKSByZXR1cm4gbnVsbDtcbiAgY29uc3QgZW5jcnlwdGlvblNlY3JldCA9IGF3YWl0IGdldERlcml2ZWRFbmNyeXB0aW9uS2V5KHNlY3JldCwgc2FsdCk7XG4gIGNvbnN0IHtcbiAgICBwYXlsb2FkXG4gIH0gPSBhd2FpdCAoMCwgX2pvc2Uuand0RGVjcnlwdCkodG9rZW4sIGVuY3J5cHRpb25TZWNyZXQsIHtcbiAgICBjbG9ja1RvbGVyYW5jZTogMTVcbiAgfSk7XG4gIHJldHVybiBwYXlsb2FkO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW4ocGFyYW1zKSB7XG4gIHZhciBfcHJvY2VzcyRlbnYkTkVYVEFVVEgsIF9wcm9jZXNzJGVudiRORVhUQVVUSDIsIF9wcm9jZXNzJGVudiRORVhUQVVUSDMsIF9yZXEkaGVhZGVycztcbiAgY29uc3Qge1xuICAgIHJlcSxcbiAgICBzZWN1cmVDb29raWUgPSAoX3Byb2Nlc3MkZW52JE5FWFRBVVRIID0gKF9wcm9jZXNzJGVudiRORVhUQVVUSDIgPSBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkwpID09PSBudWxsIHx8IF9wcm9jZXNzJGVudiRORVhUQVVUSDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm9jZXNzJGVudiRORVhUQVVUSDIuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpKSAhPT0gbnVsbCAmJiBfcHJvY2VzcyRlbnYkTkVYVEFVVEggIT09IHZvaWQgMCA/IF9wcm9jZXNzJGVudiRORVhUQVVUSCA6ICEhcHJvY2Vzcy5lbnYuVkVSQ0VMLFxuICAgIGNvb2tpZU5hbWUgPSBzZWN1cmVDb29raWUgPyBcIl9fU2VjdXJlLW5leHQtYXV0aC5zZXNzaW9uLXRva2VuXCIgOiBcIm5leHQtYXV0aC5zZXNzaW9uLXRva2VuXCIsXG4gICAgcmF3LFxuICAgIGRlY29kZTogX2RlY29kZSA9IGRlY29kZSxcbiAgICBsb2dnZXIgPSBjb25zb2xlLFxuICAgIHNlY3JldCA9IChfcHJvY2VzcyRlbnYkTkVYVEFVVEgzID0gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVUKSAhPT0gbnVsbCAmJiBfcHJvY2VzcyRlbnYkTkVYVEFVVEgzICE9PSB2b2lkIDAgPyBfcHJvY2VzcyRlbnYkTkVYVEFVVEgzIDogcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVRcbiAgfSA9IHBhcmFtcztcbiAgaWYgKCFyZXEpIHRocm93IG5ldyBFcnJvcihcIk11c3QgcGFzcyBgcmVxYCB0byBKV1QgZ2V0VG9rZW4oKVwiKTtcbiAgY29uc3Qgc2Vzc2lvblN0b3JlID0gbmV3IF9jb29raWUuU2Vzc2lvblN0b3JlKHtcbiAgICBuYW1lOiBjb29raWVOYW1lLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgIHNlY3VyZTogc2VjdXJlQ29va2llXG4gICAgfVxuICB9LCB7XG4gICAgY29va2llczogcmVxLmNvb2tpZXMsXG4gICAgaGVhZGVyczogcmVxLmhlYWRlcnNcbiAgfSwgbG9nZ2VyKTtcbiAgbGV0IHRva2VuID0gc2Vzc2lvblN0b3JlLnZhbHVlO1xuICBjb25zdCBhdXRob3JpemF0aW9uSGVhZGVyID0gcmVxLmhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzID8gcmVxLmhlYWRlcnMuZ2V0KFwiYXV0aG9yaXphdGlvblwiKSA6IChfcmVxJGhlYWRlcnMgPSByZXEuaGVhZGVycykgPT09IG51bGwgfHwgX3JlcSRoZWFkZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVxJGhlYWRlcnMuYXV0aG9yaXphdGlvbjtcbiAgaWYgKCF0b2tlbiAmJiAoYXV0aG9yaXphdGlvbkhlYWRlciA9PT0gbnVsbCB8fCBhdXRob3JpemF0aW9uSGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhdXRob3JpemF0aW9uSGVhZGVyLnNwbGl0KFwiIFwiKVswXSkgPT09IFwiQmVhcmVyXCIpIHtcbiAgICBjb25zdCB1cmxFbmNvZGVkVG9rZW4gPSBhdXRob3JpemF0aW9uSGVhZGVyLnNwbGl0KFwiIFwiKVsxXTtcbiAgICB0b2tlbiA9IGRlY29kZVVSSUNvbXBvbmVudCh1cmxFbmNvZGVkVG9rZW4pO1xuICB9XG4gIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xuICBpZiAocmF3KSByZXR1cm4gdG9rZW47XG4gIHRyeSB7XG4gICAgcmV0dXJuIGF3YWl0IF9kZWNvZGUoe1xuICAgICAgdG9rZW4sXG4gICAgICBzZWNyZXRcbiAgICB9KTtcbiAgfSBjYXRjaCAoX3VudXNlZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5hc3luYyBmdW5jdGlvbiBnZXREZXJpdmVkRW5jcnlwdGlvbktleShrZXlNYXRlcmlhbCwgc2FsdCkge1xuICByZXR1cm4gYXdhaXQgKDAsIF9oa2RmLmRlZmF1bHQpKFwic2hhMjU2XCIsIGtleU1hdGVyaWFsLCBzYWx0LCBgTmV4dEF1dGguanMgR2VuZXJhdGVkIEVuY3J5cHRpb24gS2V5JHtzYWx0ID8gYCAoJHtzYWx0fSlgIDogXCJcIn1gLCAzMik7XG59Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfZXhwb3J0TmFtZXMiLCJlbmNvZGUiLCJkZWNvZGUiLCJnZXRUb2tlbiIsIl9qb3NlIiwiX2hrZGYiLCJfdXVpZCIsIl9jb29raWUiLCJfdHlwZXMiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImVudW1lcmFibGUiLCJnZXQiLCJERUZBVUxUX01BWF9BR0UiLCJub3ciLCJEYXRlIiwicGFyYW1zIiwidG9rZW4iLCJzZWNyZXQiLCJtYXhBZ2UiLCJzYWx0IiwiZW5jcnlwdGlvblNlY3JldCIsImdldERlcml2ZWRFbmNyeXB0aW9uS2V5IiwiRW5jcnlwdEpXVCIsInNldFByb3RlY3RlZEhlYWRlciIsImFsZyIsImVuYyIsInNldElzc3VlZEF0Iiwic2V0RXhwaXJhdGlvblRpbWUiLCJzZXRKdGkiLCJ2NCIsImVuY3J5cHQiLCJwYXlsb2FkIiwiand0RGVjcnlwdCIsImNsb2NrVG9sZXJhbmNlIiwiX3Byb2Nlc3MkZW52JE5FWFRBVVRIIiwiX3Byb2Nlc3MkZW52JE5FWFRBVVRIMiIsIl9wcm9jZXNzJGVudiRORVhUQVVUSDMiLCJfcmVxJGhlYWRlcnMiLCJyZXEiLCJzZWN1cmVDb29raWUiLCJwcm9jZXNzIiwiZW52IiwiTkVYVEFVVEhfVVJMIiwic3RhcnRzV2l0aCIsIlZFUkNFTCIsImNvb2tpZU5hbWUiLCJyYXciLCJfZGVjb2RlIiwibG9nZ2VyIiwiY29uc29sZSIsIk5FWFRBVVRIX1NFQ1JFVCIsIkFVVEhfU0VDUkVUIiwiRXJyb3IiLCJzZXNzaW9uU3RvcmUiLCJTZXNzaW9uU3RvcmUiLCJuYW1lIiwib3B0aW9ucyIsInNlY3VyZSIsImNvb2tpZXMiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbkhlYWRlciIsIkhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3BsaXQiLCJ1cmxFbmNvZGVkVG9rZW4iLCJkZWNvZGVVUklDb21wb25lbnQiLCJfdW51c2VkIiwia2V5TWF0ZXJpYWwiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/jwt/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/jwt/types.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/types.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9qd3QvdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/jwt/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/next/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"nextauth\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nexports.getServerSession = getServerSession;\nexports.unstable_getServerSession = unstable_getServerSession;\nvar _core = __webpack_require__(/*! ../core */ \"(rsc)/./node_modules/next-auth/core/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/next-auth/next/utils.js\");\nasync function NextAuthApiHandler(req, res, options) {\n  var _options$secret, _ref, _options$jwt$secret, _options$jwt, _ref2, _handler$status, _handler$cookies, _handler$headers;\n  const _req$query = req.query,\n    {\n      nextauth\n    } = _req$query,\n    query = _objectWithoutProperties(_req$query, _excluded);\n  (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : options.secret = (_ref = (_options$jwt$secret = (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _options$jwt$secret !== void 0 ? _options$jwt$secret : process.env.NEXTAUTH_SECRET) !== null && _ref !== void 0 ? _ref : process.env.AUTH_SECRET;\n  const handler = await (0, _core.AuthHandler)({\n    req: {\n      body: req.body,\n      query,\n      cookies: req.cookies,\n      headers: req.headers,\n      method: req.method,\n      action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n      providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n      error: (_ref2 = req.query.error) !== null && _ref2 !== void 0 ? _ref2 : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n    },\n    options\n  });\n  res.status((_handler$status = handler.status) !== null && _handler$status !== void 0 ? _handler$status : 200);\n  (_handler$cookies = handler.cookies) === null || _handler$cookies === void 0 || _handler$cookies.forEach(cookie => (0, _utils.setCookie)(res, cookie));\n  (_handler$headers = handler.headers) === null || _handler$headers === void 0 || _handler$headers.forEach(h => res.setHeader(h.key, h.value));\n  if (handler.redirect) {\n    var _req$body;\n    if (((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.json) !== \"true\") {\n      res.status(302).setHeader(\"Location\", handler.redirect);\n      res.end();\n      return;\n    }\n    return res.json({\n      url: handler.redirect\n    });\n  }\n  return res.send(handler.body);\n}\nasync function NextAuthRouteHandler(req, context, options) {\n  var _options$secret2, _process$env$NEXTAUTH, _await$context$params, _query$error;\n  (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : options.secret = (_process$env$NEXTAUTH = process.env.NEXTAUTH_SECRET) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.AUTH_SECRET;\n  const {\n    headers,\n    cookies\n  } = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n  const nextauth = (_await$context$params = await context.params) === null || _await$context$params === void 0 ? void 0 : _await$context$params.nextauth;\n  const query = Object.fromEntries(req.nextUrl.searchParams);\n  const body = await (0, _utils.getBody)(req);\n  const internalResponse = await (0, _core.AuthHandler)({\n    req: {\n      body,\n      query,\n      cookies: Object.fromEntries((await cookies()).getAll().map(c => [c.name, c.value])),\n      headers: Object.fromEntries(await headers()),\n      method: req.method,\n      action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n      providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n      error: (_query$error = query.error) !== null && _query$error !== void 0 ? _query$error : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n    },\n    options\n  });\n  const response = (0, _utils.toResponse)(internalResponse);\n  const redirect = response.headers.get(\"Location\");\n  if ((body === null || body === void 0 ? void 0 : body.json) === \"true\" && redirect) {\n    response.headers.delete(\"Location\");\n    response.headers.set(\"Content-Type\", \"application/json\");\n    return new Response(JSON.stringify({\n      url: redirect\n    }), {\n      status: internalResponse.status,\n      headers: response.headers\n    });\n  }\n  return response;\n}\nfunction NextAuth(...args) {\n  var _args$;\n  if (args.length === 1) {\n    return async (req, res) => {\n      if (res !== null && res !== void 0 && res.params) {\n        return await NextAuthRouteHandler(req, res, args[0]);\n      }\n      return await NextAuthApiHandler(req, res, args[0]);\n    };\n  }\n  if ((_args$ = args[1]) !== null && _args$ !== void 0 && _args$.params) {\n    return NextAuthRouteHandler(...args);\n  }\n  return NextAuthApiHandler(...args);\n}\nvar _default = exports[\"default\"] = NextAuth;\nasync function getServerSession(...args) {\n  var _options, _options$secret3, _process$env$NEXTAUTH2;\n  const isRSC = args.length === 0 || args.length === 1;\n  let req, res, options;\n  if (isRSC) {\n    options = Object.assign({}, args[0], {\n      providers: []\n    });\n    const {\n      headers,\n      cookies\n    } = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n    req = {\n      headers: Object.fromEntries(await headers()),\n      cookies: Object.fromEntries((await cookies()).getAll().map(c => [c.name, c.value]))\n    };\n    res = {\n      getHeader() {},\n      setCookie() {},\n      setHeader() {}\n    };\n  } else {\n    req = args[0];\n    res = args[1];\n    options = Object.assign({}, args[2], {\n      providers: []\n    });\n  }\n  (_options$secret3 = (_options = options).secret) !== null && _options$secret3 !== void 0 ? _options$secret3 : _options.secret = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_SECRET) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.AUTH_SECRET;\n  const session = await (0, _core.AuthHandler)({\n    options,\n    req: {\n      action: \"session\",\n      method: \"GET\",\n      cookies: req.cookies,\n      headers: req.headers\n    }\n  });\n  const {\n    body,\n    cookies,\n    status = 200\n  } = session;\n  cookies === null || cookies === void 0 || cookies.forEach(cookie => (0, _utils.setCookie)(res, cookie));\n  if (body && typeof body !== \"string\" && Object.keys(body).length) {\n    if (status === 200) {\n      if (isRSC) delete body.expires;\n      return body;\n    }\n    throw new Error(body.message);\n  }\n  return null;\n}\nlet deprecatedWarningShown = false;\nasync function unstable_getServerSession(...args) {\n  if (!deprecatedWarningShown && true) {\n    console.warn(\"`unstable_getServerSession` has been renamed to `getServerSession`.\");\n    deprecatedWarningShown = true;\n  }\n  return await getServerSession(...args);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/next/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/next/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getBody = getBody;\nexports.setCookie = setCookie;\nexports.toResponse = toResponse;\nvar _cookie = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/next-auth/node_modules/cookie/index.js\");\nfunction setCookie(res, cookie) {\n  var _res$getHeader;\n  let setCookieHeader = (_res$getHeader = res.getHeader(\"Set-Cookie\")) !== null && _res$getHeader !== void 0 ? _res$getHeader : [];\n  if (!Array.isArray(setCookieHeader)) {\n    setCookieHeader = [setCookieHeader];\n  }\n  const {\n    name,\n    value,\n    options\n  } = cookie;\n  const cookieHeader = (0, _cookie.serialize)(name, value, options);\n  setCookieHeader.push(cookieHeader);\n  res.setHeader(\"Set-Cookie\", setCookieHeader);\n}\nasync function getBody(req) {\n  if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n  const contentType = req.headers.get(\"content-type\");\n  if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/json\")) {\n    return await req.json();\n  } else if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/x-www-form-urlencoded\")) {\n    const params = new URLSearchParams(await req.text());\n    return Object.fromEntries(params);\n  }\n}\nfunction toResponse(res) {\n  var _res$headers, _res$cookies, _res$status;\n  const headers = new Headers((_res$headers = res.headers) === null || _res$headers === void 0 ? void 0 : _res$headers.reduce((acc, {\n    key,\n    value\n  }) => {\n    acc[key] = value;\n    return acc;\n  }, {}));\n  (_res$cookies = res.cookies) === null || _res$cookies === void 0 || _res$cookies.forEach(cookie => {\n    const {\n      name,\n      value,\n      options\n    } = cookie;\n    const cookieHeader = (0, _cookie.serialize)(name, value, options);\n    if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);else headers.set(\"Set-Cookie\", cookieHeader);\n  });\n  let body = res.body;\n  if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n  const status = res.redirect ? 302 : (_res$status = res.status) !== null && _res$status !== void 0 ? _res$status : 200;\n  const response = new Response(body, {\n    headers,\n    status\n  });\n  if (res.redirect) response.headers.set(\"Location\", res.redirect);\n  return response;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGVBQWUsR0FBR0UsT0FBTztBQUN6QkYsaUJBQWlCLEdBQUdHLFNBQVM7QUFDN0JILGtCQUFrQixHQUFHSSxVQUFVO0FBQy9CLElBQUlDLE9BQU8sR0FBR0MsbUJBQU8sQ0FBQywyRUFBUSxDQUFDO0FBQy9CLFNBQVNILFNBQVNBLENBQUNJLEdBQUcsRUFBRUMsTUFBTSxFQUFFO0VBQzlCLElBQUlDLGNBQWM7RUFDbEIsSUFBSUMsZUFBZSxHQUFHLENBQUNELGNBQWMsR0FBR0YsR0FBRyxDQUFDSSxTQUFTLENBQUMsWUFBWSxDQUFDLE1BQU0sSUFBSSxJQUFJRixjQUFjLEtBQUssS0FBSyxDQUFDLEdBQUdBLGNBQWMsR0FBRyxFQUFFO0VBQ2hJLElBQUksQ0FBQ0csS0FBSyxDQUFDQyxPQUFPLENBQUNILGVBQWUsQ0FBQyxFQUFFO0lBQ25DQSxlQUFlLEdBQUcsQ0FBQ0EsZUFBZSxDQUFDO0VBQ3JDO0VBQ0EsTUFBTTtJQUNKSSxJQUFJO0lBQ0piLEtBQUs7SUFDTGM7RUFDRixDQUFDLEdBQUdQLE1BQU07RUFDVixNQUFNUSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEVBQUVYLE9BQU8sQ0FBQ1ksU0FBUyxFQUFFSCxJQUFJLEVBQUViLEtBQUssRUFBRWMsT0FBTyxDQUFDO0VBQ2pFTCxlQUFlLENBQUNRLElBQUksQ0FBQ0YsWUFBWSxDQUFDO0VBQ2xDVCxHQUFHLENBQUNZLFNBQVMsQ0FBQyxZQUFZLEVBQUVULGVBQWUsQ0FBQztBQUM5QztBQUNBLGVBQWVSLE9BQU9BLENBQUNrQixHQUFHLEVBQUU7RUFDMUIsSUFBSSxFQUFFLE1BQU0sSUFBSUEsR0FBRyxDQUFDLElBQUksQ0FBQ0EsR0FBRyxDQUFDQyxJQUFJLElBQUlELEdBQUcsQ0FBQ0UsTUFBTSxLQUFLLE1BQU0sRUFBRTtFQUM1RCxNQUFNQyxXQUFXLEdBQUdILEdBQUcsQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQ25ELElBQUlGLFdBQVcsS0FBSyxJQUFJLElBQUlBLFdBQVcsS0FBSyxLQUFLLENBQUMsSUFBSUEsV0FBVyxDQUFDRyxRQUFRLENBQUMsa0JBQWtCLENBQUMsRUFBRTtJQUM5RixPQUFPLE1BQU1OLEdBQUcsQ0FBQ08sSUFBSSxDQUFDLENBQUM7RUFDekIsQ0FBQyxNQUFNLElBQUlKLFdBQVcsS0FBSyxJQUFJLElBQUlBLFdBQVcsS0FBSyxLQUFLLENBQUMsSUFBSUEsV0FBVyxDQUFDRyxRQUFRLENBQUMsbUNBQW1DLENBQUMsRUFBRTtJQUN0SCxNQUFNRSxNQUFNLEdBQUcsSUFBSUMsZUFBZSxDQUFDLE1BQU1ULEdBQUcsQ0FBQ1UsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNwRCxPQUFPaEMsTUFBTSxDQUFDaUMsV0FBVyxDQUFDSCxNQUFNLENBQUM7RUFDbkM7QUFDRjtBQUNBLFNBQVN4QixVQUFVQSxDQUFDRyxHQUFHLEVBQUU7RUFDdkIsSUFBSXlCLFlBQVksRUFBRUMsWUFBWSxFQUFFQyxXQUFXO0VBQzNDLE1BQU1WLE9BQU8sR0FBRyxJQUFJVyxPQUFPLENBQUMsQ0FBQ0gsWUFBWSxHQUFHekIsR0FBRyxDQUFDaUIsT0FBTyxNQUFNLElBQUksSUFBSVEsWUFBWSxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxZQUFZLENBQUNJLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLEVBQUU7SUFDaElDLEdBQUc7SUFDSHJDO0VBQ0YsQ0FBQyxLQUFLO0lBQ0pvQyxHQUFHLENBQUNDLEdBQUcsQ0FBQyxHQUFHckMsS0FBSztJQUNoQixPQUFPb0MsR0FBRztFQUNaLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ1AsQ0FBQ0osWUFBWSxHQUFHMUIsR0FBRyxDQUFDZ0MsT0FBTyxNQUFNLElBQUksSUFBSU4sWUFBWSxLQUFLLEtBQUssQ0FBQyxJQUFJQSxZQUFZLENBQUNPLE9BQU8sQ0FBQ2hDLE1BQU0sSUFBSTtJQUNqRyxNQUFNO01BQ0pNLElBQUk7TUFDSmIsS0FBSztNQUNMYztJQUNGLENBQUMsR0FBR1AsTUFBTTtJQUNWLE1BQU1RLFlBQVksR0FBRyxDQUFDLENBQUMsRUFBRVgsT0FBTyxDQUFDWSxTQUFTLEVBQUVILElBQUksRUFBRWIsS0FBSyxFQUFFYyxPQUFPLENBQUM7SUFDakUsSUFBSVMsT0FBTyxDQUFDaUIsR0FBRyxDQUFDLFlBQVksQ0FBQyxFQUFFakIsT0FBTyxDQUFDa0IsTUFBTSxDQUFDLFlBQVksRUFBRTFCLFlBQVksQ0FBQyxDQUFDLEtBQUtRLE9BQU8sQ0FBQ21CLEdBQUcsQ0FBQyxZQUFZLEVBQUUzQixZQUFZLENBQUM7RUFDeEgsQ0FBQyxDQUFDO0VBQ0YsSUFBSUssSUFBSSxHQUFHZCxHQUFHLENBQUNjLElBQUk7RUFDbkIsSUFBSUcsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssa0JBQWtCLEVBQUVKLElBQUksR0FBR3VCLElBQUksQ0FBQ0MsU0FBUyxDQUFDdEMsR0FBRyxDQUFDYyxJQUFJLENBQUMsQ0FBQyxLQUFLLElBQUlHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLG1DQUFtQyxFQUFFSixJQUFJLEdBQUcsSUFBSVEsZUFBZSxDQUFDdEIsR0FBRyxDQUFDYyxJQUFJLENBQUMsQ0FBQ3lCLFFBQVEsQ0FBQyxDQUFDO0VBQ3JOLE1BQU1DLE1BQU0sR0FBR3hDLEdBQUcsQ0FBQ3lDLFFBQVEsR0FBRyxHQUFHLEdBQUcsQ0FBQ2QsV0FBVyxHQUFHM0IsR0FBRyxDQUFDd0MsTUFBTSxNQUFNLElBQUksSUFBSWIsV0FBVyxLQUFLLEtBQUssQ0FBQyxHQUFHQSxXQUFXLEdBQUcsR0FBRztFQUNySCxNQUFNZSxRQUFRLEdBQUcsSUFBSUMsUUFBUSxDQUFDN0IsSUFBSSxFQUFFO0lBQ2xDRyxPQUFPO0lBQ1B1QjtFQUNGLENBQUMsQ0FBQztFQUNGLElBQUl4QyxHQUFHLENBQUN5QyxRQUFRLEVBQUVDLFFBQVEsQ0FBQ3pCLE9BQU8sQ0FBQ21CLEdBQUcsQ0FBQyxVQUFVLEVBQUVwQyxHQUFHLENBQUN5QyxRQUFRLENBQUM7RUFDaEUsT0FBT0MsUUFBUTtBQUNqQiIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldEJvZHkgPSBnZXRCb2R5O1xuZXhwb3J0cy5zZXRDb29raWUgPSBzZXRDb29raWU7XG5leHBvcnRzLnRvUmVzcG9uc2UgPSB0b1Jlc3BvbnNlO1xudmFyIF9jb29raWUgPSByZXF1aXJlKFwiY29va2llXCIpO1xuZnVuY3Rpb24gc2V0Q29va2llKHJlcywgY29va2llKSB7XG4gIHZhciBfcmVzJGdldEhlYWRlcjtcbiAgbGV0IHNldENvb2tpZUhlYWRlciA9IChfcmVzJGdldEhlYWRlciA9IHJlcy5nZXRIZWFkZXIoXCJTZXQtQ29va2llXCIpKSAhPT0gbnVsbCAmJiBfcmVzJGdldEhlYWRlciAhPT0gdm9pZCAwID8gX3JlcyRnZXRIZWFkZXIgOiBbXTtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHNldENvb2tpZUhlYWRlcikpIHtcbiAgICBzZXRDb29raWVIZWFkZXIgPSBbc2V0Q29va2llSGVhZGVyXTtcbiAgfVxuICBjb25zdCB7XG4gICAgbmFtZSxcbiAgICB2YWx1ZSxcbiAgICBvcHRpb25zXG4gIH0gPSBjb29raWU7XG4gIGNvbnN0IGNvb2tpZUhlYWRlciA9ICgwLCBfY29va2llLnNlcmlhbGl6ZSkobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICBzZXRDb29raWVIZWFkZXIucHVzaChjb29raWVIZWFkZXIpO1xuICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBzZXRDb29raWVIZWFkZXIpO1xufVxuYXN5bmMgZnVuY3Rpb24gZ2V0Qm9keShyZXEpIHtcbiAgaWYgKCEoXCJib2R5XCIgaW4gcmVxKSB8fCAhcmVxLmJvZHkgfHwgcmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHJldHVybjtcbiAgY29uc3QgY29udGVudFR5cGUgPSByZXEuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIik7XG4gIGlmIChjb250ZW50VHlwZSAhPT0gbnVsbCAmJiBjb250ZW50VHlwZSAhPT0gdm9pZCAwICYmIGNvbnRlbnRUeXBlLmluY2x1ZGVzKFwiYXBwbGljYXRpb24vanNvblwiKSkge1xuICAgIHJldHVybiBhd2FpdCByZXEuanNvbigpO1xuICB9IGVsc2UgaWYgKGNvbnRlbnRUeXBlICE9PSBudWxsICYmIGNvbnRlbnRUeXBlICE9PSB2b2lkIDAgJiYgY29udGVudFR5cGUuaW5jbHVkZXMoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKGF3YWl0IHJlcS50ZXh0KCkpO1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMocGFyYW1zKTtcbiAgfVxufVxuZnVuY3Rpb24gdG9SZXNwb25zZShyZXMpIHtcbiAgdmFyIF9yZXMkaGVhZGVycywgX3JlcyRjb29raWVzLCBfcmVzJHN0YXR1cztcbiAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKChfcmVzJGhlYWRlcnMgPSByZXMuaGVhZGVycykgPT09IG51bGwgfHwgX3JlcyRoZWFkZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzJGhlYWRlcnMucmVkdWNlKChhY2MsIHtcbiAgICBrZXksXG4gICAgdmFsdWVcbiAgfSkgPT4ge1xuICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pKTtcbiAgKF9yZXMkY29va2llcyA9IHJlcy5jb29raWVzKSA9PT0gbnVsbCB8fCBfcmVzJGNvb2tpZXMgPT09IHZvaWQgMCB8fCBfcmVzJGNvb2tpZXMuZm9yRWFjaChjb29raWUgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsXG4gICAgICB2YWx1ZSxcbiAgICAgIG9wdGlvbnNcbiAgICB9ID0gY29va2llO1xuICAgIGNvbnN0IGNvb2tpZUhlYWRlciA9ICgwLCBfY29va2llLnNlcmlhbGl6ZSkobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgIGlmIChoZWFkZXJzLmhhcyhcIlNldC1Db29raWVcIikpIGhlYWRlcnMuYXBwZW5kKFwiU2V0LUNvb2tpZVwiLCBjb29raWVIZWFkZXIpO2Vsc2UgaGVhZGVycy5zZXQoXCJTZXQtQ29va2llXCIsIGNvb2tpZUhlYWRlcik7XG4gIH0pO1xuICBsZXQgYm9keSA9IHJlcy5ib2R5O1xuICBpZiAoaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIikgPT09IFwiYXBwbGljYXRpb24vanNvblwiKSBib2R5ID0gSlNPTi5zdHJpbmdpZnkocmVzLmJvZHkpO2Vsc2UgaWYgKGhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpID09PSBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSBib2R5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhyZXMuYm9keSkudG9TdHJpbmcoKTtcbiAgY29uc3Qgc3RhdHVzID0gcmVzLnJlZGlyZWN0ID8gMzAyIDogKF9yZXMkc3RhdHVzID0gcmVzLnN0YXR1cykgIT09IG51bGwgJiYgX3JlcyRzdGF0dXMgIT09IHZvaWQgMCA/IF9yZXMkc3RhdHVzIDogMjAwO1xuICBjb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZShib2R5LCB7XG4gICAgaGVhZGVycyxcbiAgICBzdGF0dXNcbiAgfSk7XG4gIGlmIChyZXMucmVkaXJlY3QpIHJlc3BvbnNlLmhlYWRlcnMuc2V0KFwiTG9jYXRpb25cIiwgcmVzLnJlZGlyZWN0KTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldEJvZHkiLCJzZXRDb29raWUiLCJ0b1Jlc3BvbnNlIiwiX2Nvb2tpZSIsInJlcXVpcmUiLCJyZXMiLCJjb29raWUiLCJfcmVzJGdldEhlYWRlciIsInNldENvb2tpZUhlYWRlciIsImdldEhlYWRlciIsIkFycmF5IiwiaXNBcnJheSIsIm5hbWUiLCJvcHRpb25zIiwiY29va2llSGVhZGVyIiwic2VyaWFsaXplIiwicHVzaCIsInNldEhlYWRlciIsInJlcSIsImJvZHkiLCJtZXRob2QiLCJjb250ZW50VHlwZSIsImhlYWRlcnMiLCJnZXQiLCJpbmNsdWRlcyIsImpzb24iLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJ0ZXh0IiwiZnJvbUVudHJpZXMiLCJfcmVzJGhlYWRlcnMiLCJfcmVzJGNvb2tpZXMiLCJfcmVzJHN0YXR1cyIsIkhlYWRlcnMiLCJyZWR1Y2UiLCJhY2MiLCJrZXkiLCJjb29raWVzIiwiZm9yRWFjaCIsImhhcyIsImFwcGVuZCIsInNldCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b1N0cmluZyIsInN0YXR1cyIsInJlZGlyZWN0IiwicmVzcG9uc2UiLCJSZXNwb25zZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/next/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/cookie/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/cookie/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString;\nvar __hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n */\n\nvar cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n */\n\nvar cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\n\nvar domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\n\nvar pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [opt]\n * @return {object}\n * @public\n */\n\nfunction parse(str, opt) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n  var obj = {};\n  var len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n  var dec = opt && opt.decode || decode;\n  var index = 0;\n  var eqIdx = 0;\n  var endIdx = 0;\n  do {\n    eqIdx = str.indexOf('=', index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    endIdx = str.indexOf(';', index);\n    if (endIdx === -1) {\n      endIdx = len;\n    } else if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n    var keyStartIdx = startIndex(str, index, eqIdx);\n    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    var key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (!__hasOwnProperty.call(obj, key)) {\n      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      var valEndIdx = endIndex(str, endIdx, valStartIdx);\n      if (str.charCodeAt(valStartIdx) === 0x22 /* \" */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* \" */) {\n        valStartIdx++;\n        valEndIdx--;\n      }\n      var val = str.slice(valStartIdx, valEndIdx);\n      obj[key] = tryDecode(val, dec);\n    }\n    index = endIdx + 1;\n  } while (index < len);\n  return obj;\n}\nfunction startIndex(str, index, max) {\n  do {\n    var code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\nfunction endIndex(str, index, min) {\n  while (index > min) {\n    var code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [opt]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, opt) {\n  var enc = opt && opt.encode || encodeURIComponent;\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n  var value = enc(val);\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n  var str = name + '=' + value;\n  if (!opt) return str;\n  if (null != opt.maxAge) {\n    var maxAge = Math.floor(opt.maxAge);\n    if (!isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n    str += '; Max-Age=' + maxAge;\n  }\n  if (opt.domain) {\n    if (!domainValueRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += '; Domain=' + opt.domain;\n  }\n  if (opt.path) {\n    if (!pathValueRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += '; Path=' + opt.path;\n  }\n  if (opt.expires) {\n    var expires = opt.expires;\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n    str += '; Expires=' + expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (opt.secure) {\n    str += '; Secure';\n  }\n  if (opt.partitioned) {\n    str += '; Partitioned';\n  }\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string' ? opt.priority.toLowerCase() : opt.priority;\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low';\n        break;\n      case 'medium':\n        str += '; Priority=Medium';\n        break;\n      case 'high':\n        str += '; Priority=High';\n        break;\n      default:\n        throw new TypeError('option priority is invalid');\n    }\n  }\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode(str) {\n  return str.indexOf('%') !== -1 ? decodeURIComponent(str) : str;\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate(val) {\n  return __toString.call(val) === '[object Date]';\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/cookie/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.cryptoRuntime = exports.base64url = exports.generateSecret = exports.generateKeyPair = exports.errors = exports.decodeJwt = exports.decodeProtectedHeader = exports.importJWK = exports.importX509 = exports.importPKCS8 = exports.importSPKI = exports.exportJWK = exports.exportSPKI = exports.exportPKCS8 = exports.UnsecuredJWT = exports.createRemoteJWKSet = exports.createLocalJWKSet = exports.EmbeddedJWK = exports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = exports.EncryptJWT = exports.SignJWT = exports.GeneralSign = exports.FlattenedSign = exports.CompactSign = exports.FlattenedEncrypt = exports.CompactEncrypt = exports.jwtDecrypt = exports.jwtVerify = exports.generalVerify = exports.flattenedVerify = exports.compactVerify = exports.GeneralEncrypt = exports.generalDecrypt = exports.flattenedDecrypt = exports.compactDecrypt = void 0;\nvar decrypt_js_1 = __webpack_require__(/*! ./jwe/compact/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nObject.defineProperty(exports, \"compactDecrypt\", ({\n  enumerable: true,\n  get: function () {\n    return decrypt_js_1.compactDecrypt;\n  }\n}));\nvar decrypt_js_2 = __webpack_require__(/*! ./jwe/flattened/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nObject.defineProperty(exports, \"flattenedDecrypt\", ({\n  enumerable: true,\n  get: function () {\n    return decrypt_js_2.flattenedDecrypt;\n  }\n}));\nvar decrypt_js_3 = __webpack_require__(/*! ./jwe/general/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\");\nObject.defineProperty(exports, \"generalDecrypt\", ({\n  enumerable: true,\n  get: function () {\n    return decrypt_js_3.generalDecrypt;\n  }\n}));\nvar encrypt_js_1 = __webpack_require__(/*! ./jwe/general/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\");\nObject.defineProperty(exports, \"GeneralEncrypt\", ({\n  enumerable: true,\n  get: function () {\n    return encrypt_js_1.GeneralEncrypt;\n  }\n}));\nvar verify_js_1 = __webpack_require__(/*! ./jws/compact/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nObject.defineProperty(exports, \"compactVerify\", ({\n  enumerable: true,\n  get: function () {\n    return verify_js_1.compactVerify;\n  }\n}));\nvar verify_js_2 = __webpack_require__(/*! ./jws/flattened/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nObject.defineProperty(exports, \"flattenedVerify\", ({\n  enumerable: true,\n  get: function () {\n    return verify_js_2.flattenedVerify;\n  }\n}));\nvar verify_js_3 = __webpack_require__(/*! ./jws/general/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/verify.js\");\nObject.defineProperty(exports, \"generalVerify\", ({\n  enumerable: true,\n  get: function () {\n    return verify_js_3.generalVerify;\n  }\n}));\nvar verify_js_4 = __webpack_require__(/*! ./jwt/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/verify.js\");\nObject.defineProperty(exports, \"jwtVerify\", ({\n  enumerable: true,\n  get: function () {\n    return verify_js_4.jwtVerify;\n  }\n}));\nvar decrypt_js_4 = __webpack_require__(/*! ./jwt/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/decrypt.js\");\nObject.defineProperty(exports, \"jwtDecrypt\", ({\n  enumerable: true,\n  get: function () {\n    return decrypt_js_4.jwtDecrypt;\n  }\n}));\nvar encrypt_js_2 = __webpack_require__(/*! ./jwe/compact/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nObject.defineProperty(exports, \"CompactEncrypt\", ({\n  enumerable: true,\n  get: function () {\n    return encrypt_js_2.CompactEncrypt;\n  }\n}));\nvar encrypt_js_3 = __webpack_require__(/*! ./jwe/flattened/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nObject.defineProperty(exports, \"FlattenedEncrypt\", ({\n  enumerable: true,\n  get: function () {\n    return encrypt_js_3.FlattenedEncrypt;\n  }\n}));\nvar sign_js_1 = __webpack_require__(/*! ./jws/compact/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nObject.defineProperty(exports, \"CompactSign\", ({\n  enumerable: true,\n  get: function () {\n    return sign_js_1.CompactSign;\n  }\n}));\nvar sign_js_2 = __webpack_require__(/*! ./jws/flattened/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nObject.defineProperty(exports, \"FlattenedSign\", ({\n  enumerable: true,\n  get: function () {\n    return sign_js_2.FlattenedSign;\n  }\n}));\nvar sign_js_3 = __webpack_require__(/*! ./jws/general/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/sign.js\");\nObject.defineProperty(exports, \"GeneralSign\", ({\n  enumerable: true,\n  get: function () {\n    return sign_js_3.GeneralSign;\n  }\n}));\nvar sign_js_4 = __webpack_require__(/*! ./jwt/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/sign.js\");\nObject.defineProperty(exports, \"SignJWT\", ({\n  enumerable: true,\n  get: function () {\n    return sign_js_4.SignJWT;\n  }\n}));\nvar encrypt_js_4 = __webpack_require__(/*! ./jwt/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/encrypt.js\");\nObject.defineProperty(exports, \"EncryptJWT\", ({\n  enumerable: true,\n  get: function () {\n    return encrypt_js_4.EncryptJWT;\n  }\n}));\nvar thumbprint_js_1 = __webpack_require__(/*! ./jwk/thumbprint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/thumbprint.js\");\nObject.defineProperty(exports, \"calculateJwkThumbprint\", ({\n  enumerable: true,\n  get: function () {\n    return thumbprint_js_1.calculateJwkThumbprint;\n  }\n}));\nObject.defineProperty(exports, \"calculateJwkThumbprintUri\", ({\n  enumerable: true,\n  get: function () {\n    return thumbprint_js_1.calculateJwkThumbprintUri;\n  }\n}));\nvar embedded_js_1 = __webpack_require__(/*! ./jwk/embedded.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/embedded.js\");\nObject.defineProperty(exports, \"EmbeddedJWK\", ({\n  enumerable: true,\n  get: function () {\n    return embedded_js_1.EmbeddedJWK;\n  }\n}));\nvar local_js_1 = __webpack_require__(/*! ./jwks/local.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/local.js\");\nObject.defineProperty(exports, \"createLocalJWKSet\", ({\n  enumerable: true,\n  get: function () {\n    return local_js_1.createLocalJWKSet;\n  }\n}));\nvar remote_js_1 = __webpack_require__(/*! ./jwks/remote.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/remote.js\");\nObject.defineProperty(exports, \"createRemoteJWKSet\", ({\n  enumerable: true,\n  get: function () {\n    return remote_js_1.createRemoteJWKSet;\n  }\n}));\nvar unsecured_js_1 = __webpack_require__(/*! ./jwt/unsecured.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/unsecured.js\");\nObject.defineProperty(exports, \"UnsecuredJWT\", ({\n  enumerable: true,\n  get: function () {\n    return unsecured_js_1.UnsecuredJWT;\n  }\n}));\nvar export_js_1 = __webpack_require__(/*! ./key/export.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/export.js\");\nObject.defineProperty(exports, \"exportPKCS8\", ({\n  enumerable: true,\n  get: function () {\n    return export_js_1.exportPKCS8;\n  }\n}));\nObject.defineProperty(exports, \"exportSPKI\", ({\n  enumerable: true,\n  get: function () {\n    return export_js_1.exportSPKI;\n  }\n}));\nObject.defineProperty(exports, \"exportJWK\", ({\n  enumerable: true,\n  get: function () {\n    return export_js_1.exportJWK;\n  }\n}));\nvar import_js_1 = __webpack_require__(/*! ./key/import.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js\");\nObject.defineProperty(exports, \"importSPKI\", ({\n  enumerable: true,\n  get: function () {\n    return import_js_1.importSPKI;\n  }\n}));\nObject.defineProperty(exports, \"importPKCS8\", ({\n  enumerable: true,\n  get: function () {\n    return import_js_1.importPKCS8;\n  }\n}));\nObject.defineProperty(exports, \"importX509\", ({\n  enumerable: true,\n  get: function () {\n    return import_js_1.importX509;\n  }\n}));\nObject.defineProperty(exports, \"importJWK\", ({\n  enumerable: true,\n  get: function () {\n    return import_js_1.importJWK;\n  }\n}));\nvar decode_protected_header_js_1 = __webpack_require__(/*! ./util/decode_protected_header.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_protected_header.js\");\nObject.defineProperty(exports, \"decodeProtectedHeader\", ({\n  enumerable: true,\n  get: function () {\n    return decode_protected_header_js_1.decodeProtectedHeader;\n  }\n}));\nvar decode_jwt_js_1 = __webpack_require__(/*! ./util/decode_jwt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_jwt.js\");\nObject.defineProperty(exports, \"decodeJwt\", ({\n  enumerable: true,\n  get: function () {\n    return decode_jwt_js_1.decodeJwt;\n  }\n}));\nexports.errors = __webpack_require__(/*! ./util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nvar generate_key_pair_js_1 = __webpack_require__(/*! ./key/generate_key_pair.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_key_pair.js\");\nObject.defineProperty(exports, \"generateKeyPair\", ({\n  enumerable: true,\n  get: function () {\n    return generate_key_pair_js_1.generateKeyPair;\n  }\n}));\nvar generate_secret_js_1 = __webpack_require__(/*! ./key/generate_secret.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_secret.js\");\nObject.defineProperty(exports, \"generateSecret\", ({\n  enumerable: true,\n  get: function () {\n    return generate_secret_js_1.generateSecret;\n  }\n}));\nexports.base64url = __webpack_require__(/*! ./util/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js\");\nvar runtime_js_1 = __webpack_require__(/*! ./util/runtime.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/runtime.js\");\nObject.defineProperty(exports, \"cryptoRuntime\", ({\n  enumerable: true,\n  get: function () {\n    return runtime_js_1.default;\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.compactDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactDecrypt(jwe, key, options) {\n  if (jwe instanceof Uint8Array) {\n    jwe = buffer_utils_js_1.decoder.decode(jwe);\n  }\n  if (typeof jwe !== 'string') {\n    throw new errors_js_1.JWEInvalid('Compact JWE must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: encryptedKey,\n    2: iv,\n    3: ciphertext,\n    4: tag,\n    length\n  } = jwe.split('.');\n  if (length !== 5) {\n    throw new errors_js_1.JWEInvalid('Invalid Compact JWE');\n  }\n  const decrypted = await (0, decrypt_js_1.flattenedDecrypt)({\n    ciphertext,\n    iv: iv || undefined,\n    protected: protectedHeader || undefined,\n    tag: tag || undefined,\n    encrypted_key: encryptedKey || undefined\n  }, key, options);\n  const result = {\n    plaintext: decrypted.plaintext,\n    protectedHeader: decrypted.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key: decrypted.key\n    });\n  }\n  return result;\n}\nexports.compactDecrypt = compactDecrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2NvbXBhY3QvZGVjcnlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFBQSxTQUFBQSxRQUFBQyxDQUFBLEVBQUFDLENBQUEsUUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLElBQUEsQ0FBQUosQ0FBQSxPQUFBRyxNQUFBLENBQUFFLHFCQUFBLFFBQUFDLENBQUEsR0FBQUgsTUFBQSxDQUFBRSxxQkFBQSxDQUFBTCxDQUFBLEdBQUFDLENBQUEsS0FBQUssQ0FBQSxHQUFBQSxDQUFBLENBQUFDLE1BQUEsV0FBQU4sQ0FBQSxXQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFSLENBQUEsRUFBQUMsQ0FBQSxFQUFBUSxVQUFBLE9BQUFQLENBQUEsQ0FBQVEsSUFBQSxDQUFBQyxLQUFBLENBQUFULENBQUEsRUFBQUksQ0FBQSxZQUFBSixDQUFBO0FBQUEsU0FBQVUsY0FBQVosQ0FBQSxhQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQVksU0FBQSxDQUFBQyxNQUFBLEVBQUFiLENBQUEsVUFBQUMsQ0FBQSxXQUFBVyxTQUFBLENBQUFaLENBQUEsSUFBQVksU0FBQSxDQUFBWixDQUFBLFFBQUFBLENBQUEsT0FBQUYsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsT0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFlLGVBQUEsQ0FBQWhCLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLENBQUFELENBQUEsU0FBQUUsTUFBQSxDQUFBYyx5QkFBQSxHQUFBZCxNQUFBLENBQUFlLGdCQUFBLENBQUFsQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWMseUJBQUEsQ0FBQWYsQ0FBQSxLQUFBSCxPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxHQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQUUsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBbkIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQU4sQ0FBQSxFQUFBRCxDQUFBLGlCQUFBRCxDQUFBO0FBQUEsU0FBQWdCLGdCQUFBSSxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsS0FBQSxJQUFBRCxHQUFBLEdBQUFFLGNBQUEsQ0FBQUYsR0FBQSxPQUFBQSxHQUFBLElBQUFELEdBQUEsSUFBQWpCLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQUMsR0FBQSxFQUFBQyxHQUFBLElBQUFDLEtBQUEsRUFBQUEsS0FBQSxFQUFBYixVQUFBLFFBQUFlLFlBQUEsUUFBQUMsUUFBQSxvQkFBQUwsR0FBQSxDQUFBQyxHQUFBLElBQUFDLEtBQUEsV0FBQUYsR0FBQTtBQUFBLFNBQUFHLGVBQUFHLEdBQUEsUUFBQUwsR0FBQSxHQUFBTSxZQUFBLENBQUFELEdBQUEsMkJBQUFMLEdBQUEsZ0JBQUFBLEdBQUEsR0FBQU8sTUFBQSxDQUFBUCxHQUFBO0FBQUEsU0FBQU0sYUFBQUUsS0FBQSxFQUFBQyxJQUFBLGVBQUFELEtBQUEsaUJBQUFBLEtBQUEsa0JBQUFBLEtBQUEsTUFBQUUsSUFBQSxHQUFBRixLQUFBLENBQUFHLE1BQUEsQ0FBQUMsV0FBQSxPQUFBRixJQUFBLEtBQUFHLFNBQUEsUUFBQUMsR0FBQSxHQUFBSixJQUFBLENBQUFLLElBQUEsQ0FBQVAsS0FBQSxFQUFBQyxJQUFBLDJCQUFBSyxHQUFBLHNCQUFBQSxHQUFBLFlBQUFFLFNBQUEsNERBQUFQLElBQUEsZ0JBQUFGLE1BQUEsR0FBQVUsTUFBQSxFQUFBVCxLQUFBO0FBQ2IxQiw4Q0FBNkM7RUFBRW1CLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RGlCLHNCQUFzQixHQUFHLEtBQUssQ0FBQztBQUMvQixNQUFNRSxZQUFZLEdBQUdDLG1CQUFPLENBQUMsd0hBQXlCLENBQUM7QUFDdkQsTUFBTUMsV0FBVyxHQUFHRCxtQkFBTyxDQUFDLDJHQUFzQixDQUFDO0FBQ25ELE1BQU1FLGlCQUFpQixHQUFHRixtQkFBTyxDQUFDLHFIQUEyQixDQUFDO0FBQzlELGVBQWVGLGNBQWNBLENBQUNLLEdBQUcsRUFBRXhCLEdBQUcsRUFBRXlCLE9BQU8sRUFBRTtFQUM3QyxJQUFJRCxHQUFHLFlBQVlFLFVBQVUsRUFBRTtJQUMzQkYsR0FBRyxHQUFHRCxpQkFBaUIsQ0FBQ0ksT0FBTyxDQUFDQyxNQUFNLENBQUNKLEdBQUcsQ0FBQztFQUMvQztFQUNBLElBQUksT0FBT0EsR0FBRyxLQUFLLFFBQVEsRUFBRTtJQUN6QixNQUFNLElBQUlGLFdBQVcsQ0FBQ08sVUFBVSxDQUFDLDRDQUE0QyxDQUFDO0VBQ2xGO0VBQ0EsTUFBTTtJQUFFLENBQUMsRUFBRUMsZUFBZTtJQUFFLENBQUMsRUFBRUMsWUFBWTtJQUFFLENBQUMsRUFBRUMsRUFBRTtJQUFFLENBQUMsRUFBRUMsVUFBVTtJQUFFLENBQUMsRUFBRUMsR0FBRztJQUFFekM7RUFBUSxDQUFDLEdBQUcrQixHQUFHLENBQUNXLEtBQUssQ0FBQyxHQUFHLENBQUM7RUFDckcsSUFBSTFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7SUFDZCxNQUFNLElBQUk2QixXQUFXLENBQUNPLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQztFQUMzRDtFQUNBLE1BQU1PLFNBQVMsR0FBRyxNQUFNLENBQUMsQ0FBQyxFQUFFaEIsWUFBWSxDQUFDaUIsZ0JBQWdCLEVBQUU7SUFDdkRKLFVBQVU7SUFDVkQsRUFBRSxFQUFHQSxFQUFFLElBQUluQixTQUFVO0lBQ3JCeUIsU0FBUyxFQUFFUixlQUFlLElBQUlqQixTQUFTO0lBQ3ZDcUIsR0FBRyxFQUFHQSxHQUFHLElBQUlyQixTQUFVO0lBQ3ZCMEIsYUFBYSxFQUFFUixZQUFZLElBQUlsQjtFQUNuQyxDQUFDLEVBQUViLEdBQUcsRUFBRXlCLE9BQU8sQ0FBQztFQUNoQixNQUFNZSxNQUFNLEdBQUc7SUFBRUMsU0FBUyxFQUFFTCxTQUFTLENBQUNLLFNBQVM7SUFBRVgsZUFBZSxFQUFFTSxTQUFTLENBQUNOO0VBQWdCLENBQUM7RUFDN0YsSUFBSSxPQUFPOUIsR0FBRyxLQUFLLFVBQVUsRUFBRTtJQUMzQixPQUFBVCxhQUFBLENBQUFBLGFBQUEsS0FBWWlELE1BQU07TUFBRXhDLEdBQUcsRUFBRW9DLFNBQVMsQ0FBQ3BDO0lBQUc7RUFDMUM7RUFDQSxPQUFPd0MsTUFBTTtBQUNqQjtBQUNBdEIsc0JBQXNCLEdBQUdDLGNBQWMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2RlY3J5cHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbXBhY3REZWNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9kZWNyeXB0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gY29tcGFjdERlY3J5cHQoandlLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoandlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBqd2UgPSBidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZShqd2UpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGp3ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0NvbXBhY3QgSldFIG11c3QgYmUgYSBzdHJpbmcgb3IgVWludDhBcnJheScpO1xuICAgIH1cbiAgICBjb25zdCB7IDA6IHByb3RlY3RlZEhlYWRlciwgMTogZW5jcnlwdGVkS2V5LCAyOiBpdiwgMzogY2lwaGVydGV4dCwgNDogdGFnLCBsZW5ndGgsIH0gPSBqd2Uuc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoICE9PSA1KSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdJbnZhbGlkIENvbXBhY3QgSldFJyk7XG4gICAgfVxuICAgIGNvbnN0IGRlY3J5cHRlZCA9IGF3YWl0ICgwLCBkZWNyeXB0X2pzXzEuZmxhdHRlbmVkRGVjcnlwdCkoe1xuICAgICAgICBjaXBoZXJ0ZXh0LFxuICAgICAgICBpdjogKGl2IHx8IHVuZGVmaW5lZCksXG4gICAgICAgIHByb3RlY3RlZDogcHJvdGVjdGVkSGVhZGVyIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgdGFnOiAodGFnIHx8IHVuZGVmaW5lZCksXG4gICAgICAgIGVuY3J5cHRlZF9rZXk6IGVuY3J5cHRlZEtleSB8fCB1bmRlZmluZWQsXG4gICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB7IHBsYWludGV4dDogZGVjcnlwdGVkLnBsYWludGV4dCwgcHJvdGVjdGVkSGVhZGVyOiBkZWNyeXB0ZWQucHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IGRlY3J5cHRlZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuY29tcGFjdERlY3J5cHQgPSBjb21wYWN0RGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsImV4cG9ydHMiLCJjb21wYWN0RGVjcnlwdCIsImRlY3J5cHRfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwiandlIiwib3B0aW9ucyIsIlVpbnQ4QXJyYXkiLCJkZWNvZGVyIiwiZGVjb2RlIiwiSldFSW52YWxpZCIsInByb3RlY3RlZEhlYWRlciIsImVuY3J5cHRlZEtleSIsIml2IiwiY2lwaGVydGV4dCIsInRhZyIsInNwbGl0IiwiZGVjcnlwdGVkIiwiZmxhdHRlbmVkRGVjcnlwdCIsInByb3RlY3RlZCIsImVuY3J5cHRlZF9rZXkiLCJyZXN1bHQiLCJwbGFpbnRleHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CompactEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nclass CompactEncrypt {\n  constructor(plaintext) {\n    this._flattened = new encrypt_js_1.FlattenedEncrypt(plaintext);\n  }\n  setContentEncryptionKey(cek) {\n    this._flattened.setContentEncryptionKey(cek);\n    return this;\n  }\n  setInitializationVector(iv) {\n    this._flattened.setInitializationVector(iv);\n    return this;\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  setKeyManagementParameters(parameters) {\n    this._flattened.setKeyManagementParameters(parameters);\n    return this;\n  }\n  async encrypt(key, options) {\n    const jwe = await this._flattened.encrypt(key, options);\n    return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n  }\n}\nexports.CompactEncrypt = CompactEncrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2NvbXBhY3QvZW5jcnlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsc0JBQXNCLEdBQUcsS0FBSyxDQUFDO0FBQy9CLE1BQU1HLFlBQVksR0FBR0MsbUJBQU8sQ0FBQyx3SEFBeUIsQ0FBQztBQUN2RCxNQUFNRixjQUFjLENBQUM7RUFDakJHLFdBQVdBLENBQUNDLFNBQVMsRUFBRTtJQUNuQixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJSixZQUFZLENBQUNLLGdCQUFnQixDQUFDRixTQUFTLENBQUM7RUFDbEU7RUFDQUcsdUJBQXVCQSxDQUFDQyxHQUFHLEVBQUU7SUFDekIsSUFBSSxDQUFDSCxVQUFVLENBQUNFLHVCQUF1QixDQUFDQyxHQUFHLENBQUM7SUFDNUMsT0FBTyxJQUFJO0VBQ2Y7RUFDQUMsdUJBQXVCQSxDQUFDQyxFQUFFLEVBQUU7SUFDeEIsSUFBSSxDQUFDTCxVQUFVLENBQUNJLHVCQUF1QixDQUFDQyxFQUFFLENBQUM7SUFDM0MsT0FBTyxJQUFJO0VBQ2Y7RUFDQUMsa0JBQWtCQSxDQUFDQyxlQUFlLEVBQUU7SUFDaEMsSUFBSSxDQUFDUCxVQUFVLENBQUNNLGtCQUFrQixDQUFDQyxlQUFlLENBQUM7SUFDbkQsT0FBTyxJQUFJO0VBQ2Y7RUFDQUMsMEJBQTBCQSxDQUFDQyxVQUFVLEVBQUU7SUFDbkMsSUFBSSxDQUFDVCxVQUFVLENBQUNRLDBCQUEwQixDQUFDQyxVQUFVLENBQUM7SUFDdEQsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxNQUFNQyxPQUFPQSxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtJQUN4QixNQUFNQyxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUNiLFVBQVUsQ0FBQ1UsT0FBTyxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sQ0FBQztJQUN2RCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFRCxHQUFHLENBQUNFLGFBQWEsRUFBRUYsR0FBRyxDQUFDUixFQUFFLEVBQUVRLEdBQUcsQ0FBQ0csVUFBVSxFQUFFSCxHQUFHLENBQUNJLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsR0FBRyxDQUFDO0VBQ3hGO0FBQ0o7QUFDQXpCLHNCQUFzQixHQUFHRSxjQUFjIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd2UvY29tcGFjdC9lbmNyeXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db21wYWN0RW5jcnlwdCA9IHZvaWQgMDtcbmNvbnN0IGVuY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvZW5jcnlwdC5qc1wiKTtcbmNsYXNzIENvbXBhY3RFbmNyeXB0IHtcbiAgICBjb25zdHJ1Y3RvcihwbGFpbnRleHQpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkID0gbmV3IGVuY3J5cHRfanNfMS5GbGF0dGVuZWRFbmNyeXB0KHBsYWludGV4dCk7XG4gICAgfVxuICAgIHNldENvbnRlbnRFbmNyeXB0aW9uS2V5KGNlaykge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0Q29udGVudEVuY3J5cHRpb25LZXkoY2VrKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEluaXRpYWxpemF0aW9uVmVjdG9yKGl2KSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRJbml0aWFsaXphdGlvblZlY3Rvcihpdik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgandlID0gYXdhaXQgdGhpcy5fZmxhdHRlbmVkLmVuY3J5cHQoa2V5LCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIFtqd2UucHJvdGVjdGVkLCBqd2UuZW5jcnlwdGVkX2tleSwgandlLml2LCBqd2UuY2lwaGVydGV4dCwgandlLnRhZ10uam9pbignLicpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcGFjdEVuY3J5cHQgPSBDb21wYWN0RW5jcnlwdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbXBhY3RFbmNyeXB0IiwiZW5jcnlwdF9qc18xIiwicmVxdWlyZSIsImNvbnN0cnVjdG9yIiwicGxhaW50ZXh0IiwiX2ZsYXR0ZW5lZCIsIkZsYXR0ZW5lZEVuY3J5cHQiLCJzZXRDb250ZW50RW5jcnlwdGlvbktleSIsImNlayIsInNldEluaXRpYWxpemF0aW9uVmVjdG9yIiwiaXYiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyIsInBhcmFtZXRlcnMiLCJlbmNyeXB0Iiwia2V5Iiwib3B0aW9ucyIsImp3ZSIsInByb3RlY3RlZCIsImVuY3J5cHRlZF9rZXkiLCJjaXBoZXJ0ZXh0IiwidGFnIiwiam9pbiJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.flattenedDecrypt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../../runtime/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst decrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/decrypt_key_management.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedDecrypt(jwe, key, options) {\n  var _a;\n  if (!(0, is_object_js_1.default)(jwe)) {\n    throw new errors_js_1.JWEInvalid('Flattened JWE must be an object');\n  }\n  if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n    throw new errors_js_1.JWEInvalid('JOSE Header missing');\n  }\n  if (typeof jwe.iv !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE Initialization Vector missing or incorrect type');\n  }\n  if (typeof jwe.ciphertext !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE Ciphertext missing or incorrect type');\n  }\n  if (typeof jwe.tag !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE Authentication Tag missing or incorrect type');\n  }\n  if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE Protected Header incorrect type');\n  }\n  if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE Encrypted Key incorrect type');\n  }\n  if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n    throw new errors_js_1.JWEInvalid('JWE AAD incorrect type');\n  }\n  if (jwe.header !== undefined && !(0, is_object_js_1.default)(jwe.header)) {\n    throw new errors_js_1.JWEInvalid('JWE Shared Unprotected Header incorrect type');\n  }\n  if (jwe.unprotected !== undefined && !(0, is_object_js_1.default)(jwe.unprotected)) {\n    throw new errors_js_1.JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n  }\n  let parsedProt;\n  if (jwe.protected) {\n    try {\n      const protectedHeader = (0, base64url_js_1.decode)(jwe.protected);\n      parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n    } catch {\n      throw new errors_js_1.JWEInvalid('JWE Protected Header is invalid');\n    }\n  }\n  if (!(0, is_disjoint_js_1.default)(parsedProt, jwe.header, jwe.unprotected)) {\n    throw new errors_js_1.JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n  }\n  const joseHeader = _objectSpread(_objectSpread(_objectSpread({}, parsedProt), jwe.header), jwe.unprotected);\n  (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n  if (joseHeader.zip !== undefined) {\n    if (!parsedProt || !parsedProt.zip) {\n      throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n    }\n    if (joseHeader.zip !== 'DEF') {\n      throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n    }\n  }\n  const {\n    alg,\n    enc\n  } = joseHeader;\n  if (typeof alg !== 'string' || !alg) {\n    throw new errors_js_1.JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n  }\n  if (typeof enc !== 'string' || !enc) {\n    throw new errors_js_1.JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n  }\n  const keyManagementAlgorithms = options && (0, validate_algorithms_js_1.default)('keyManagementAlgorithms', options.keyManagementAlgorithms);\n  const contentEncryptionAlgorithms = options && (0, validate_algorithms_js_1.default)('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n  if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n    throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n  }\n  if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n    throw new errors_js_1.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n  }\n  let encryptedKey;\n  if (jwe.encrypted_key !== undefined) {\n    try {\n      encryptedKey = (0, base64url_js_1.decode)(jwe.encrypted_key);\n    } catch {\n      throw new errors_js_1.JWEInvalid('Failed to base64url decode the encrypted_key');\n    }\n  }\n  let resolvedKey = false;\n  if (typeof key === 'function') {\n    key = await key(parsedProt, jwe);\n    resolvedKey = true;\n  }\n  let cek;\n  try {\n    cek = await (0, decrypt_key_management_js_1.default)(alg, key, encryptedKey, joseHeader, options);\n  } catch (err) {\n    if (err instanceof TypeError || err instanceof errors_js_1.JWEInvalid || err instanceof errors_js_1.JOSENotSupported) {\n      throw err;\n    }\n    cek = (0, cek_js_1.default)(enc);\n  }\n  let iv;\n  let tag;\n  try {\n    iv = (0, base64url_js_1.decode)(jwe.iv);\n  } catch {\n    throw new errors_js_1.JWEInvalid('Failed to base64url decode the iv');\n  }\n  try {\n    tag = (0, base64url_js_1.decode)(jwe.tag);\n  } catch {\n    throw new errors_js_1.JWEInvalid('Failed to base64url decode the tag');\n  }\n  const protectedHeader = buffer_utils_js_1.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n  let additionalData;\n  if (jwe.aad !== undefined) {\n    additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(jwe.aad));\n  } else {\n    additionalData = protectedHeader;\n  }\n  let ciphertext;\n  try {\n    ciphertext = (0, base64url_js_1.decode)(jwe.ciphertext);\n  } catch {\n    throw new errors_js_1.JWEInvalid('Failed to base64url decode the ciphertext');\n  }\n  let plaintext = await (0, decrypt_js_1.default)(enc, cek, ciphertext, iv, tag, additionalData);\n  if (joseHeader.zip === 'DEF') {\n    plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || zlib_js_1.inflate)(plaintext);\n  }\n  const result = {\n    plaintext\n  };\n  if (jwe.protected !== undefined) {\n    result.protectedHeader = parsedProt;\n  }\n  if (jwe.aad !== undefined) {\n    try {\n      result.additionalAuthenticatedData = (0, base64url_js_1.decode)(jwe.aad);\n    } catch {\n      throw new errors_js_1.JWEInvalid('Failed to base64url decode the aad');\n    }\n  }\n  if (jwe.unprotected !== undefined) {\n    result.sharedUnprotectedHeader = jwe.unprotected;\n  }\n  if (jwe.header !== undefined) {\n    result.unprotectedHeader = jwe.header;\n  }\n  if (resolvedKey) {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key\n    });\n  }\n  return result;\n}\nexports.flattenedDecrypt = flattenedDecrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FlattenedEncrypt = exports.unprotected = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst encrypt_js_1 = __webpack_require__(/*! ../../runtime/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst iv_js_1 = __webpack_require__(/*! ../../lib/iv.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nexports.unprotected = Symbol();\nclass FlattenedEncrypt {\n  constructor(plaintext) {\n    if (!(plaintext instanceof Uint8Array)) {\n      throw new TypeError('plaintext must be an instance of Uint8Array');\n    }\n    this._plaintext = plaintext;\n  }\n  setKeyManagementParameters(parameters) {\n    if (this._keyManagementParameters) {\n      throw new TypeError('setKeyManagementParameters can only be called once');\n    }\n    this._keyManagementParameters = parameters;\n    return this;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n    if (this._sharedUnprotectedHeader) {\n      throw new TypeError('setSharedUnprotectedHeader can only be called once');\n    }\n    this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  setAdditionalAuthenticatedData(aad) {\n    this._aad = aad;\n    return this;\n  }\n  setContentEncryptionKey(cek) {\n    if (this._cek) {\n      throw new TypeError('setContentEncryptionKey can only be called once');\n    }\n    this._cek = cek;\n    return this;\n  }\n  setInitializationVector(iv) {\n    if (this._iv) {\n      throw new TypeError('setInitializationVector can only be called once');\n    }\n    this._iv = iv;\n    return this;\n  }\n  async encrypt(key, options) {\n    if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n      throw new errors_js_1.JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n    }\n    if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n      throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n    }\n    const joseHeader = _objectSpread(_objectSpread(_objectSpread({}, this._protectedHeader), this._unprotectedHeader), this._sharedUnprotectedHeader);\n    (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n    if (joseHeader.zip !== undefined) {\n      if (!this._protectedHeader || !this._protectedHeader.zip) {\n        throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n      }\n      if (joseHeader.zip !== 'DEF') {\n        throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n      }\n    }\n    const {\n      alg,\n      enc\n    } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n      throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    if (typeof enc !== 'string' || !enc) {\n      throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n    }\n    let encryptedKey;\n    if (alg === 'dir') {\n      if (this._cek) {\n        throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n      }\n    } else if (alg === 'ECDH-ES') {\n      if (this._cek) {\n        throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n      }\n    }\n    let cek;\n    {\n      let parameters;\n      ({\n        cek,\n        encryptedKey,\n        parameters\n      } = await (0, encrypt_key_management_js_1.default)(alg, enc, key, this._cek, this._keyManagementParameters));\n      if (parameters) {\n        if (options && exports.unprotected in options) {\n          if (!this._unprotectedHeader) {\n            this.setUnprotectedHeader(parameters);\n          } else {\n            this._unprotectedHeader = _objectSpread(_objectSpread({}, this._unprotectedHeader), parameters);\n          }\n        } else {\n          if (!this._protectedHeader) {\n            this.setProtectedHeader(parameters);\n          } else {\n            this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), parameters);\n          }\n        }\n      }\n    }\n    this._iv || (this._iv = (0, iv_js_1.default)(enc));\n    let additionalData;\n    let protectedHeader;\n    let aadMember;\n    if (this._protectedHeader) {\n      protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n    } else {\n      protectedHeader = buffer_utils_js_1.encoder.encode('');\n    }\n    if (this._aad) {\n      aadMember = (0, base64url_js_1.encode)(this._aad);\n      additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), buffer_utils_js_1.encoder.encode(aadMember));\n    } else {\n      additionalData = protectedHeader;\n    }\n    let ciphertext;\n    let tag;\n    if (joseHeader.zip === 'DEF') {\n      const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || zlib_js_1.deflate)(this._plaintext);\n      ({\n        ciphertext,\n        tag\n      } = await (0, encrypt_js_1.default)(enc, deflated, cek, this._iv, additionalData));\n    } else {\n      ;\n      ({\n        ciphertext,\n        tag\n      } = await (0, encrypt_js_1.default)(enc, this._plaintext, cek, this._iv, additionalData));\n    }\n    const jwe = {\n      ciphertext: (0, base64url_js_1.encode)(ciphertext),\n      iv: (0, base64url_js_1.encode)(this._iv),\n      tag: (0, base64url_js_1.encode)(tag)\n    };\n    if (encryptedKey) {\n      jwe.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n    }\n    if (aadMember) {\n      jwe.aad = aadMember;\n    }\n    if (this._protectedHeader) {\n      jwe.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n    }\n    if (this._sharedUnprotectedHeader) {\n      jwe.unprotected = this._sharedUnprotectedHeader;\n    }\n    if (this._unprotectedHeader) {\n      jwe.header = this._unprotectedHeader;\n    }\n    return jwe;\n  }\n}\nexports.FlattenedEncrypt = FlattenedEncrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/decrypt.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/decrypt.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generalDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalDecrypt(jwe, key, options) {\n  if (!(0, is_object_js_1.default)(jwe)) {\n    throw new errors_js_1.JWEInvalid('General JWE must be an object');\n  }\n  if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(is_object_js_1.default)) {\n    throw new errors_js_1.JWEInvalid('JWE Recipients missing or incorrect type');\n  }\n  if (!jwe.recipients.length) {\n    throw new errors_js_1.JWEInvalid('JWE Recipients has no members');\n  }\n  for (const recipient of jwe.recipients) {\n    try {\n      return await (0, decrypt_js_1.flattenedDecrypt)({\n        aad: jwe.aad,\n        ciphertext: jwe.ciphertext,\n        encrypted_key: recipient.encrypted_key,\n        header: recipient.header,\n        iv: jwe.iv,\n        protected: jwe.protected,\n        tag: jwe.tag,\n        unprotected: jwe.unprotected\n      }, key, options);\n    } catch {}\n  }\n  throw new errors_js_1.JWEDecryptionFailed();\n}\nexports.generalDecrypt = generalDecrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2dlbmVyYWwvZGVjcnlwdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsc0JBQXNCLEdBQUcsS0FBSyxDQUFDO0FBQy9CLE1BQU1HLFlBQVksR0FBR0MsbUJBQU8sQ0FBQyx3SEFBeUIsQ0FBQztBQUN2RCxNQUFNQyxXQUFXLEdBQUdELG1CQUFPLENBQUMsMkdBQXNCLENBQUM7QUFDbkQsTUFBTUUsY0FBYyxHQUFHRixtQkFBTyxDQUFDLCtHQUF3QixDQUFDO0FBQ3hELGVBQWVGLGNBQWNBLENBQUNLLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUU7RUFDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFSCxjQUFjLENBQUNJLE9BQU8sRUFBRUgsR0FBRyxDQUFDLEVBQUU7SUFDbkMsTUFBTSxJQUFJRixXQUFXLENBQUNNLFVBQVUsQ0FBQywrQkFBK0IsQ0FBQztFQUNyRTtFQUNBLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLENBQUNOLEdBQUcsQ0FBQ08sVUFBVSxDQUFDLElBQUksQ0FBQ1AsR0FBRyxDQUFDTyxVQUFVLENBQUNDLEtBQUssQ0FBQ1QsY0FBYyxDQUFDSSxPQUFPLENBQUMsRUFBRTtJQUNqRixNQUFNLElBQUlMLFdBQVcsQ0FBQ00sVUFBVSxDQUFDLDBDQUEwQyxDQUFDO0VBQ2hGO0VBQ0EsSUFBSSxDQUFDSixHQUFHLENBQUNPLFVBQVUsQ0FBQ0UsTUFBTSxFQUFFO0lBQ3hCLE1BQU0sSUFBSVgsV0FBVyxDQUFDTSxVQUFVLENBQUMsK0JBQStCLENBQUM7RUFDckU7RUFDQSxLQUFLLE1BQU1NLFNBQVMsSUFBSVYsR0FBRyxDQUFDTyxVQUFVLEVBQUU7SUFDcEMsSUFBSTtNQUNBLE9BQU8sTUFBTSxDQUFDLENBQUMsRUFBRVgsWUFBWSxDQUFDZSxnQkFBZ0IsRUFBRTtRQUM1Q0MsR0FBRyxFQUFFWixHQUFHLENBQUNZLEdBQUc7UUFDWkMsVUFBVSxFQUFFYixHQUFHLENBQUNhLFVBQVU7UUFDMUJDLGFBQWEsRUFBRUosU0FBUyxDQUFDSSxhQUFhO1FBQ3RDQyxNQUFNLEVBQUVMLFNBQVMsQ0FBQ0ssTUFBTTtRQUN4QkMsRUFBRSxFQUFFaEIsR0FBRyxDQUFDZ0IsRUFBRTtRQUNWQyxTQUFTLEVBQUVqQixHQUFHLENBQUNpQixTQUFTO1FBQ3hCQyxHQUFHLEVBQUVsQixHQUFHLENBQUNrQixHQUFHO1FBQ1pDLFdBQVcsRUFBRW5CLEdBQUcsQ0FBQ21CO01BQ3JCLENBQUMsRUFBRWxCLEdBQUcsRUFBRUMsT0FBTyxDQUFDO0lBQ3BCLENBQUMsQ0FDRCxNQUFNLENBQ047RUFDSjtFQUNBLE1BQU0sSUFBSUosV0FBVyxDQUFDc0IsbUJBQW1CLENBQUMsQ0FBQztBQUMvQztBQUNBM0Isc0JBQXNCLEdBQUdFLGNBQWMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9nZW5lcmFsL2RlY3J5cHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYWxEZWNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9kZWNyeXB0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhbERlY3J5cHQoandlLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqd2UpKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdHZW5lcmFsIEpXRSBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoandlLnJlY2lwaWVudHMpIHx8ICFqd2UucmVjaXBpZW50cy5ldmVyeShpc19vYmplY3RfanNfMS5kZWZhdWx0KSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSldFIFJlY2lwaWVudHMgbWlzc2luZyBvciBpbmNvcnJlY3QgdHlwZScpO1xuICAgIH1cbiAgICBpZiAoIWp3ZS5yZWNpcGllbnRzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSldFIFJlY2lwaWVudHMgaGFzIG5vIG1lbWJlcnMnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCByZWNpcGllbnQgb2YgandlLnJlY2lwaWVudHMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCAoMCwgZGVjcnlwdF9qc18xLmZsYXR0ZW5lZERlY3J5cHQpKHtcbiAgICAgICAgICAgICAgICBhYWQ6IGp3ZS5hYWQsXG4gICAgICAgICAgICAgICAgY2lwaGVydGV4dDogandlLmNpcGhlcnRleHQsXG4gICAgICAgICAgICAgICAgZW5jcnlwdGVkX2tleTogcmVjaXBpZW50LmVuY3J5cHRlZF9rZXksXG4gICAgICAgICAgICAgICAgaGVhZGVyOiByZWNpcGllbnQuaGVhZGVyLFxuICAgICAgICAgICAgICAgIGl2OiBqd2UuaXYsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkOiBqd2UucHJvdGVjdGVkLFxuICAgICAgICAgICAgICAgIHRhZzogandlLnRhZyxcbiAgICAgICAgICAgICAgICB1bnByb3RlY3RlZDogandlLnVucHJvdGVjdGVkLFxuICAgICAgICAgICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRURlY3J5cHRpb25GYWlsZWQoKTtcbn1cbmV4cG9ydHMuZ2VuZXJhbERlY3J5cHQgPSBnZW5lcmFsRGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYWxEZWNyeXB0IiwiZGVjcnlwdF9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJqd2UiLCJrZXkiLCJvcHRpb25zIiwiZGVmYXVsdCIsIkpXRUludmFsaWQiLCJBcnJheSIsImlzQXJyYXkiLCJyZWNpcGllbnRzIiwiZXZlcnkiLCJsZW5ndGgiLCJyZWNpcGllbnQiLCJmbGF0dGVuZWREZWNyeXB0IiwiYWFkIiwiY2lwaGVydGV4dCIsImVuY3J5cHRlZF9rZXkiLCJoZWFkZXIiLCJpdiIsInByb3RlY3RlZCIsInRhZyIsInVucHJvdGVjdGVkIiwiSldFRGVjcnlwdGlvbkZhaWxlZCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/encrypt.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/encrypt.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GeneralEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass IndividualRecipient {\n  constructor(enc, key, options) {\n    this.parent = enc;\n    this.key = key;\n    this.options = options;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this.unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this.unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  addRecipient(...args) {\n    return this.parent.addRecipient(...args);\n  }\n  encrypt(...args) {\n    return this.parent.encrypt(...args);\n  }\n  done() {\n    return this.parent;\n  }\n}\nclass GeneralEncrypt {\n  constructor(plaintext) {\n    this._recipients = [];\n    this._plaintext = plaintext;\n  }\n  addRecipient(key, options) {\n    const recipient = new IndividualRecipient(this, key, {\n      crit: options === null || options === void 0 ? void 0 : options.crit\n    });\n    this._recipients.push(recipient);\n    return recipient;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setSharedUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = sharedUnprotectedHeader;\n    return this;\n  }\n  setAdditionalAuthenticatedData(aad) {\n    this._aad = aad;\n    return this;\n  }\n  async encrypt(options) {\n    var _a, _b, _c;\n    if (!this._recipients.length) {\n      throw new errors_js_1.JWEInvalid('at least one recipient must be added');\n    }\n    options = {\n      deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw\n    };\n    if (this._recipients.length === 1) {\n      const [recipient] = this._recipients;\n      const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, _objectSpread(_objectSpread({}, recipient.options), options));\n      let jwe = {\n        ciphertext: flattened.ciphertext,\n        iv: flattened.iv,\n        recipients: [{}],\n        tag: flattened.tag\n      };\n      if (flattened.aad) jwe.aad = flattened.aad;\n      if (flattened.protected) jwe.protected = flattened.protected;\n      if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n      if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n      if (flattened.header) jwe.recipients[0].header = flattened.header;\n      return jwe;\n    }\n    let enc;\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n        throw new errors_js_1.JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n      }\n      const joseHeader = _objectSpread(_objectSpread(_objectSpread({}, this._protectedHeader), this._unprotectedHeader), recipient.unprotectedHeader);\n      const {\n        alg\n      } = joseHeader;\n      if (typeof alg !== 'string' || !alg) {\n        throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n      }\n      if (alg === 'dir' || alg === 'ECDH-ES') {\n        throw new errors_js_1.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n      }\n      if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n        throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n      }\n      if (!enc) {\n        enc = joseHeader.enc;\n      } else if (enc !== joseHeader.enc) {\n        throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n      }\n      (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n      if (joseHeader.zip !== undefined) {\n        if (!this._protectedHeader || !this._protectedHeader.zip) {\n          throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n      }\n    }\n    const cek = (0, cek_js_1.default)(enc);\n    let jwe = {\n      ciphertext: '',\n      iv: '',\n      recipients: [],\n      tag: ''\n    };\n    for (let i = 0; i < this._recipients.length; i++) {\n      const recipient = this._recipients[i];\n      const target = {};\n      jwe.recipients.push(target);\n      const joseHeader = _objectSpread(_objectSpread(_objectSpread({}, this._protectedHeader), this._unprotectedHeader), recipient.unprotectedHeader);\n      const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n      if (i === 0) {\n        const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n          p2c\n        }).encrypt(recipient.key, _objectSpread(_objectSpread(_objectSpread({}, recipient.options), options), {}, {\n          [encrypt_js_1.unprotected]: true\n        }));\n        jwe.ciphertext = flattened.ciphertext;\n        jwe.iv = flattened.iv;\n        jwe.tag = flattened.tag;\n        if (flattened.aad) jwe.aad = flattened.aad;\n        if (flattened.protected) jwe.protected = flattened.protected;\n        if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n        target.encrypted_key = flattened.encrypted_key;\n        if (flattened.header) target.header = flattened.header;\n        continue;\n      }\n      const {\n        encryptedKey,\n        parameters\n      } = await (0, encrypt_key_management_js_1.default)(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) || ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) || ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, {\n        p2c\n      });\n      target.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n      if (recipient.unprotectedHeader || parameters) target.header = _objectSpread(_objectSpread({}, recipient.unprotectedHeader), parameters);\n    }\n    return jwe;\n  }\n}\nexports.GeneralEncrypt = GeneralEncrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/embedded.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/embedded.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EmbeddedJWK = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function EmbeddedJWK(protectedHeader, token) {\n  const joseHeader = _objectSpread(_objectSpread({}, protectedHeader), token === null || token === void 0 ? void 0 : token.header);\n  if (!(0, is_object_js_1.default)(joseHeader.jwk)) {\n    throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n  }\n  const key = await (0, import_js_1.importJWK)(_objectSpread(_objectSpread({}, joseHeader.jwk), {}, {\n    ext: true\n  }), joseHeader.alg, true);\n  if (key instanceof Uint8Array || key.type !== 'public') {\n    throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n  }\n  return key;\n}\nexports.EmbeddedJWK = EmbeddedJWK;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandrL2VtYmVkZGVkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUFBLFNBQUFBLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsQ0FBQSxFQUFBSSxDQUFBLFlBQUFKLENBQUE7QUFBQSxTQUFBVSxjQUFBWixDQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBWSxTQUFBLENBQUFDLE1BQUEsRUFBQWIsQ0FBQSxVQUFBQyxDQUFBLFdBQUFXLFNBQUEsQ0FBQVosQ0FBQSxJQUFBWSxTQUFBLENBQUFaLENBQUEsUUFBQUEsQ0FBQSxPQUFBRixPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxPQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQWUsZUFBQSxDQUFBaEIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsQ0FBQUQsQ0FBQSxTQUFBRSxNQUFBLENBQUFjLHlCQUFBLEdBQUFkLE1BQUEsQ0FBQWUsZ0JBQUEsQ0FBQWxCLENBQUEsRUFBQUcsTUFBQSxDQUFBYyx5QkFBQSxDQUFBZixDQUFBLEtBQUFILE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLEdBQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBRSxNQUFBLENBQUFnQixjQUFBLENBQUFuQixDQUFBLEVBQUFDLENBQUEsRUFBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBTixDQUFBLEVBQUFELENBQUEsaUJBQUFELENBQUE7QUFBQSxTQUFBZ0IsZ0JBQUFJLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxLQUFBLElBQUFELEdBQUEsR0FBQUUsY0FBQSxDQUFBRixHQUFBLE9BQUFBLEdBQUEsSUFBQUQsR0FBQSxJQUFBakIsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBQyxHQUFBLEVBQUFDLEdBQUEsSUFBQUMsS0FBQSxFQUFBQSxLQUFBLEVBQUFiLFVBQUEsUUFBQWUsWUFBQSxRQUFBQyxRQUFBLG9CQUFBTCxHQUFBLENBQUFDLEdBQUEsSUFBQUMsS0FBQSxXQUFBRixHQUFBO0FBQUEsU0FBQUcsZUFBQUcsR0FBQSxRQUFBTCxHQUFBLEdBQUFNLFlBQUEsQ0FBQUQsR0FBQSwyQkFBQUwsR0FBQSxnQkFBQUEsR0FBQSxHQUFBTyxNQUFBLENBQUFQLEdBQUE7QUFBQSxTQUFBTSxhQUFBRSxLQUFBLEVBQUFDLElBQUEsZUFBQUQsS0FBQSxpQkFBQUEsS0FBQSxrQkFBQUEsS0FBQSxNQUFBRSxJQUFBLEdBQUFGLEtBQUEsQ0FBQUcsTUFBQSxDQUFBQyxXQUFBLE9BQUFGLElBQUEsS0FBQUcsU0FBQSxRQUFBQyxHQUFBLEdBQUFKLElBQUEsQ0FBQUssSUFBQSxDQUFBUCxLQUFBLEVBQUFDLElBQUEsMkJBQUFLLEdBQUEsc0JBQUFBLEdBQUEsWUFBQUUsU0FBQSw0REFBQVAsSUFBQSxnQkFBQUYsTUFBQSxHQUFBVSxNQUFBLEVBQUFULEtBQUE7QUFDYjFCLDhDQUE2QztFQUFFbUIsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdEaUIsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0FBQzVCLE1BQU1FLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyxzR0FBa0IsQ0FBQztBQUMvQyxNQUFNQyxjQUFjLEdBQUdELG1CQUFPLENBQUMsNEdBQXFCLENBQUM7QUFDckQsTUFBTUUsV0FBVyxHQUFHRixtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELGVBQWVGLFdBQVdBLENBQUNLLGVBQWUsRUFBRUMsS0FBSyxFQUFFO0VBQy9DLE1BQU1DLFVBQVUsR0FBQW5DLGFBQUEsQ0FBQUEsYUFBQSxLQUNUaUMsZUFBZSxHQUNmQyxLQUFLLEtBQUssSUFBSSxJQUFJQSxLQUFLLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLEtBQUssQ0FBQ0UsTUFBTSxDQUNoRTtFQUNELElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRUwsY0FBYyxDQUFDTSxPQUFPLEVBQUVGLFVBQVUsQ0FBQ0csR0FBRyxDQUFDLEVBQUU7SUFDOUMsTUFBTSxJQUFJTixXQUFXLENBQUNPLFVBQVUsQ0FBQyw2REFBNkQsQ0FBQztFQUNuRztFQUNBLE1BQU05QixHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUMsRUFBRW9CLFdBQVcsQ0FBQ1csU0FBUyxFQUFBeEMsYUFBQSxDQUFBQSxhQUFBLEtBQU9tQyxVQUFVLENBQUNHLEdBQUc7SUFBRUcsR0FBRyxFQUFFO0VBQUksSUFBSU4sVUFBVSxDQUFDTyxHQUFHLEVBQUUsSUFBSSxDQUFDO0VBQ3BHLElBQUlqQyxHQUFHLFlBQVlrQyxVQUFVLElBQUlsQyxHQUFHLENBQUNtQyxJQUFJLEtBQUssUUFBUSxFQUFFO0lBQ3BELE1BQU0sSUFBSVosV0FBVyxDQUFDTyxVQUFVLENBQUMsNERBQTRELENBQUM7RUFDbEc7RUFDQSxPQUFPOUIsR0FBRztBQUNkO0FBQ0FrQixtQkFBbUIsR0FBR0MsV0FBVyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandrL2VtYmVkZGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbWJlZGRlZEpXSyA9IHZvaWQgMDtcbmNvbnN0IGltcG9ydF9qc18xID0gcmVxdWlyZShcIi4uL2tleS9pbXBvcnQuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5hc3luYyBmdW5jdGlvbiBFbWJlZGRlZEpXSyhwcm90ZWN0ZWRIZWFkZXIsIHRva2VuKSB7XG4gICAgY29uc3Qgam9zZUhlYWRlciA9IHtcbiAgICAgICAgLi4ucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAuLi50b2tlbiA9PT0gbnVsbCB8fCB0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9rZW4uaGVhZGVyLFxuICAgIH07XG4gICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkoam9zZUhlYWRlci5qd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdcImp3a1wiIChKU09OIFdlYiBLZXkpIEhlYWRlciBQYXJhbWV0ZXIgbXVzdCBiZSBhIEpTT04gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGNvbnN0IGtleSA9IGF3YWl0ICgwLCBpbXBvcnRfanNfMS5pbXBvcnRKV0spKHsgLi4uam9zZUhlYWRlci5qd2ssIGV4dDogdHJ1ZSB9LCBqb3NlSGVhZGVyLmFsZywgdHJ1ZSk7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHwga2V5LnR5cGUgIT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdcImp3a1wiIChKU09OIFdlYiBLZXkpIEhlYWRlciBQYXJhbWV0ZXIgbXVzdCBiZSBhIHB1YmxpYyBrZXknKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbn1cbmV4cG9ydHMuRW1iZWRkZWRKV0sgPSBFbWJlZGRlZEpXSztcbiJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsImV4cG9ydHMiLCJFbWJlZGRlZEpXSyIsImltcG9ydF9qc18xIiwicmVxdWlyZSIsImlzX29iamVjdF9qc18xIiwiZXJyb3JzX2pzXzEiLCJwcm90ZWN0ZWRIZWFkZXIiLCJ0b2tlbiIsImpvc2VIZWFkZXIiLCJoZWFkZXIiLCJkZWZhdWx0IiwiandrIiwiSldTSW52YWxpZCIsImltcG9ydEpXSyIsImV4dCIsImFsZyIsIlVpbnQ4QXJyYXkiLCJ0eXBlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/embedded.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/thumbprint.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/thumbprint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/digest.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check = (value, description) => {\n  if (typeof value !== 'string' || !value) {\n    throw new errors_js_1.JWKInvalid(`${description} missing or invalid`);\n  }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n  if (!(0, is_object_js_1.default)(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n  if (digestAlgorithm !== 'sha256' && digestAlgorithm !== 'sha384' && digestAlgorithm !== 'sha512') {\n    throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n  }\n  let components;\n  switch (jwk.kty) {\n    case 'EC':\n      check(jwk.crv, '\"crv\" (Curve) Parameter');\n      check(jwk.x, '\"x\" (X Coordinate) Parameter');\n      check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x,\n        y: jwk.y\n      };\n      break;\n    case 'OKP':\n      check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n      check(jwk.x, '\"x\" (Public Key) Parameter');\n      components = {\n        crv: jwk.crv,\n        kty: jwk.kty,\n        x: jwk.x\n      };\n      break;\n    case 'RSA':\n      check(jwk.e, '\"e\" (Exponent) Parameter');\n      check(jwk.n, '\"n\" (Modulus) Parameter');\n      components = {\n        e: jwk.e,\n        kty: jwk.kty,\n        n: jwk.n\n      };\n      break;\n    case 'oct':\n      check(jwk.k, '\"k\" (Key Value) Parameter');\n      components = {\n        k: jwk.k,\n        kty: jwk.kty\n      };\n      break;\n    default:\n      throw new errors_js_1.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n  }\n  const data = buffer_utils_js_1.encoder.encode(JSON.stringify(components));\n  return (0, base64url_js_1.encode)(await (0, digest_js_1.default)(digestAlgorithm, data));\n}\nexports.calculateJwkThumbprint = calculateJwkThumbprint;\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = 'sha256';\n  const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n  return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\nexports.calculateJwkThumbprintUri = calculateJwkThumbprintUri;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwk/thumbprint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/local.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/local.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createLocalJWKSet = exports.LocalJWKSet = exports.isJWKSLike = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction getKtyFromAlg(alg) {\n  switch (typeof alg === 'string' && alg.slice(0, 2)) {\n    case 'RS':\n    case 'PS':\n      return 'RSA';\n    case 'ES':\n      return 'EC';\n    case 'Ed':\n      return 'OKP';\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n  }\n}\nfunction isJWKSLike(jwks) {\n  return jwks && typeof jwks === 'object' && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nexports.isJWKSLike = isJWKSLike;\nfunction isJWKLike(key) {\n  return (0, is_object_js_1.default)(key);\n}\nfunction clone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n  constructor(jwks) {\n    this._cached = new WeakMap();\n    if (!isJWKSLike(jwks)) {\n      throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n    }\n    this._jwks = clone(jwks);\n  }\n  async getKey(protectedHeader, token) {\n    const {\n      alg,\n      kid\n    } = _objectSpread(_objectSpread({}, protectedHeader), token === null || token === void 0 ? void 0 : token.header);\n    const kty = getKtyFromAlg(alg);\n    const candidates = this._jwks.keys.filter(jwk => {\n      let candidate = kty === jwk.kty;\n      if (candidate && typeof kid === 'string') {\n        candidate = kid === jwk.kid;\n      }\n      if (candidate && typeof jwk.alg === 'string') {\n        candidate = alg === jwk.alg;\n      }\n      if (candidate && typeof jwk.use === 'string') {\n        candidate = jwk.use === 'sig';\n      }\n      if (candidate && Array.isArray(jwk.key_ops)) {\n        candidate = jwk.key_ops.includes('verify');\n      }\n      if (candidate && alg === 'EdDSA') {\n        candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n      }\n      if (candidate) {\n        switch (alg) {\n          case 'ES256':\n            candidate = jwk.crv === 'P-256';\n            break;\n          case 'ES256K':\n            candidate = jwk.crv === 'secp256k1';\n            break;\n          case 'ES384':\n            candidate = jwk.crv === 'P-384';\n            break;\n          case 'ES512':\n            candidate = jwk.crv === 'P-521';\n            break;\n        }\n      }\n      return candidate;\n    });\n    const {\n      0: jwk,\n      length\n    } = candidates;\n    if (length === 0) {\n      throw new errors_js_1.JWKSNoMatchingKey();\n    } else if (length !== 1) {\n      const error = new errors_js_1.JWKSMultipleMatchingKeys();\n      const {\n        _cached\n      } = this;\n      error[Symbol.asyncIterator] = async function* () {\n        for (const jwk of candidates) {\n          try {\n            yield await importWithAlgCache(_cached, jwk, alg);\n          } catch {\n            continue;\n          }\n        }\n      };\n      throw error;\n    }\n    return importWithAlgCache(this._cached, jwk, alg);\n  }\n}\nexports.LocalJWKSet = LocalJWKSet;\nasync function importWithAlgCache(cache, jwk, alg) {\n  const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n  if (cached[alg] === undefined) {\n    const key = await (0, import_js_1.importJWK)(_objectSpread(_objectSpread({}, jwk), {}, {\n      ext: true\n    }), alg);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n      throw new errors_js_1.JWKSInvalid('JSON Web Key Set members must be public keys');\n    }\n    cached[alg] = key;\n  }\n  return cached[alg];\n}\nfunction createLocalJWKSet(jwks) {\n  const set = new LocalJWKSet(jwks);\n  return async function (protectedHeader, token) {\n    return set.getKey(protectedHeader, token);\n  };\n}\nexports.createLocalJWKSet = createLocalJWKSet;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/local.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/remote.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/remote.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createRemoteJWKSet = void 0;\nconst fetch_jwks_js_1 = __webpack_require__(/*! ../runtime/fetch_jwks.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst local_js_1 = __webpack_require__(/*! ./local.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/local.js\");\nfunction isCloudflareWorkers() {\n  return typeof WebSocketPair !== 'undefined' || typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers' || typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel';\n}\nclass RemoteJWKSet extends local_js_1.LocalJWKSet {\n  constructor(url, options) {\n    super({\n      keys: []\n    });\n    this._jwks = undefined;\n    if (!(url instanceof URL)) {\n      throw new TypeError('url must be an instance of URL');\n    }\n    this._url = new URL(url.href);\n    this._options = {\n      agent: options === null || options === void 0 ? void 0 : options.agent,\n      headers: options === null || options === void 0 ? void 0 : options.headers\n    };\n    this._timeoutDuration = typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n    this._cooldownDuration = typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n    this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n  }\n  coolingDown() {\n    return typeof this._jwksTimestamp === 'number' ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;\n  }\n  fresh() {\n    return typeof this._jwksTimestamp === 'number' ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;\n  }\n  async getKey(protectedHeader, token) {\n    if (!this._jwks || !this.fresh()) {\n      await this.reload();\n    }\n    try {\n      return await super.getKey(protectedHeader, token);\n    } catch (err) {\n      if (err instanceof errors_js_1.JWKSNoMatchingKey) {\n        if (this.coolingDown() === false) {\n          await this.reload();\n          return super.getKey(protectedHeader, token);\n        }\n      }\n      throw err;\n    }\n  }\n  async reload() {\n    if (this._pendingFetch && isCloudflareWorkers()) {\n      this._pendingFetch = undefined;\n    }\n    this._pendingFetch || (this._pendingFetch = (0, fetch_jwks_js_1.default)(this._url, this._timeoutDuration, this._options).then(json => {\n      if (!(0, local_js_1.isJWKSLike)(json)) {\n        throw new errors_js_1.JWKSInvalid('JSON Web Key Set malformed');\n      }\n      this._jwks = {\n        keys: json.keys\n      };\n      this._jwksTimestamp = Date.now();\n      this._pendingFetch = undefined;\n    }).catch(err => {\n      this._pendingFetch = undefined;\n      throw err;\n    }));\n    await this._pendingFetch;\n  }\n}\nfunction createRemoteJWKSet(url, options) {\n  const set = new RemoteJWKSet(url, options);\n  return async function (protectedHeader, token) {\n    return set.getKey(protectedHeader, token);\n  };\n}\nexports.createRemoteJWKSet = createRemoteJWKSet;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandrcy9yZW1vdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBCQUEwQixHQUFHLEtBQUssQ0FBQztBQUNuQyxNQUFNRyxlQUFlLEdBQUdDLG1CQUFPLENBQUMsc0hBQTBCLENBQUM7QUFDM0QsTUFBTUMsV0FBVyxHQUFHRCxtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELE1BQU1FLFVBQVUsR0FBR0YsbUJBQU8sQ0FBQyxnR0FBWSxDQUFDO0FBQ3hDLFNBQVNHLG1CQUFtQkEsQ0FBQSxFQUFHO0VBQzNCLE9BQVEsT0FBT0MsYUFBYSxLQUFLLFdBQVcsSUFDdkMsT0FBT0MsU0FBUyxLQUFLLFdBQVcsSUFBSUEsU0FBUyxDQUFDQyxTQUFTLEtBQUssb0JBQXFCLElBQ2pGLE9BQU9DLFdBQVcsS0FBSyxXQUFXLElBQUlBLFdBQVcsS0FBSyxRQUFTO0FBQ3hFO0FBQ0EsTUFBTUMsWUFBWSxTQUFTTixVQUFVLENBQUNPLFdBQVcsQ0FBQztFQUM5Q0MsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7SUFDdEIsS0FBSyxDQUFDO01BQUVDLElBQUksRUFBRTtJQUFHLENBQUMsQ0FBQztJQUNuQixJQUFJLENBQUNDLEtBQUssR0FBR0MsU0FBUztJQUN0QixJQUFJLEVBQUVKLEdBQUcsWUFBWUssR0FBRyxDQUFDLEVBQUU7TUFDdkIsTUFBTSxJQUFJQyxTQUFTLENBQUMsZ0NBQWdDLENBQUM7SUFDekQ7SUFDQSxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJRixHQUFHLENBQUNMLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDO0lBQzdCLElBQUksQ0FBQ0MsUUFBUSxHQUFHO01BQUVDLEtBQUssRUFBRVQsT0FBTyxLQUFLLElBQUksSUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxPQUFPLENBQUNTLEtBQUs7TUFBRUMsT0FBTyxFQUFFVixPQUFPLEtBQUssSUFBSSxJQUFJQSxPQUFPLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLE9BQU8sQ0FBQ1U7SUFBUSxDQUFDO0lBQ3RLLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQ2pCLFFBQVFYLE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDWSxlQUFlLENBQUMsS0FBSyxRQUFRLEdBQUdaLE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDWSxlQUFlLEdBQUcsSUFBSTtJQUN0TCxJQUFJLENBQUNDLGlCQUFpQixHQUNsQixRQUFRYixPQUFPLEtBQUssSUFBSSxJQUFJQSxPQUFPLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdBLE9BQU8sQ0FBQ2MsZ0JBQWdCLENBQUMsS0FBSyxRQUFRLEdBQUdkLE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDYyxnQkFBZ0IsR0FBRyxLQUFLO0lBQ3pMLElBQUksQ0FBQ0MsWUFBWSxHQUFHLFFBQVFmLE9BQU8sS0FBSyxJQUFJLElBQUlBLE9BQU8sS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDZ0IsV0FBVyxDQUFDLEtBQUssUUFBUSxHQUFHaEIsT0FBTyxLQUFLLElBQUksSUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHQSxPQUFPLENBQUNnQixXQUFXLEdBQUcsTUFBTTtFQUNwTTtFQUNBQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixPQUFPLE9BQU8sSUFBSSxDQUFDQyxjQUFjLEtBQUssUUFBUSxHQUN4Q0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0YsY0FBYyxHQUFHLElBQUksQ0FBQ0wsaUJBQWlCLEdBQ3pELEtBQUs7RUFDZjtFQUNBUSxLQUFLQSxDQUFBLEVBQUc7SUFDSixPQUFPLE9BQU8sSUFBSSxDQUFDSCxjQUFjLEtBQUssUUFBUSxHQUN4Q0MsSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0YsY0FBYyxHQUFHLElBQUksQ0FBQ0gsWUFBWSxHQUNwRCxLQUFLO0VBQ2Y7RUFDQSxNQUFNTyxNQUFNQSxDQUFDQyxlQUFlLEVBQUVDLEtBQUssRUFBRTtJQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDdEIsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDbUIsS0FBSyxDQUFDLENBQUMsRUFBRTtNQUM5QixNQUFNLElBQUksQ0FBQ0ksTUFBTSxDQUFDLENBQUM7SUFDdkI7SUFDQSxJQUFJO01BQ0EsT0FBTyxNQUFNLEtBQUssQ0FBQ0gsTUFBTSxDQUFDQyxlQUFlLEVBQUVDLEtBQUssQ0FBQztJQUNyRCxDQUFDLENBQ0QsT0FBT0UsR0FBRyxFQUFFO01BQ1IsSUFBSUEsR0FBRyxZQUFZckMsV0FBVyxDQUFDc0MsaUJBQWlCLEVBQUU7UUFDOUMsSUFBSSxJQUFJLENBQUNWLFdBQVcsQ0FBQyxDQUFDLEtBQUssS0FBSyxFQUFFO1VBQzlCLE1BQU0sSUFBSSxDQUFDUSxNQUFNLENBQUMsQ0FBQztVQUNuQixPQUFPLEtBQUssQ0FBQ0gsTUFBTSxDQUFDQyxlQUFlLEVBQUVDLEtBQUssQ0FBQztRQUMvQztNQUNKO01BQ0EsTUFBTUUsR0FBRztJQUNiO0VBQ0o7RUFDQSxNQUFNRCxNQUFNQSxDQUFBLEVBQUc7SUFDWCxJQUFJLElBQUksQ0FBQ0csYUFBYSxJQUFJckMsbUJBQW1CLENBQUMsQ0FBQyxFQUFFO01BQzdDLElBQUksQ0FBQ3FDLGFBQWEsR0FBR3pCLFNBQVM7SUFDbEM7SUFDQSxJQUFJLENBQUN5QixhQUFhLEtBQUssSUFBSSxDQUFDQSxhQUFhLEdBQUcsQ0FBQyxDQUFDLEVBQUV6QyxlQUFlLENBQUMwQyxPQUFPLEVBQUUsSUFBSSxDQUFDdkIsSUFBSSxFQUFFLElBQUksQ0FBQ0ssZ0JBQWdCLEVBQUUsSUFBSSxDQUFDSCxRQUFRLENBQUMsQ0FDcEhzQixJQUFJLENBQUVDLElBQUksSUFBSztNQUNoQixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUV6QyxVQUFVLENBQUMwQyxVQUFVLEVBQUVELElBQUksQ0FBQyxFQUFFO1FBQ25DLE1BQU0sSUFBSTFDLFdBQVcsQ0FBQzRDLFdBQVcsQ0FBQyw0QkFBNEIsQ0FBQztNQUNuRTtNQUNBLElBQUksQ0FBQy9CLEtBQUssR0FBRztRQUFFRCxJQUFJLEVBQUU4QixJQUFJLENBQUM5QjtNQUFLLENBQUM7TUFDaEMsSUFBSSxDQUFDaUIsY0FBYyxHQUFHQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDO01BQ2hDLElBQUksQ0FBQ1EsYUFBYSxHQUFHekIsU0FBUztJQUNsQyxDQUFDLENBQUMsQ0FDRytCLEtBQUssQ0FBRVIsR0FBRyxJQUFLO01BQ2hCLElBQUksQ0FBQ0UsYUFBYSxHQUFHekIsU0FBUztNQUM5QixNQUFNdUIsR0FBRztJQUNiLENBQUMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxJQUFJLENBQUNFLGFBQWE7RUFDNUI7QUFDSjtBQUNBLFNBQVMxQyxrQkFBa0JBLENBQUNhLEdBQUcsRUFBRUMsT0FBTyxFQUFFO0VBQ3RDLE1BQU1tQyxHQUFHLEdBQUcsSUFBSXZDLFlBQVksQ0FBQ0csR0FBRyxFQUFFQyxPQUFPLENBQUM7RUFDMUMsT0FBTyxnQkFBZ0J1QixlQUFlLEVBQUVDLEtBQUssRUFBRTtJQUMzQyxPQUFPVyxHQUFHLENBQUNiLE1BQU0sQ0FBQ0MsZUFBZSxFQUFFQyxLQUFLLENBQUM7RUFDN0MsQ0FBQztBQUNMO0FBQ0F4QywwQkFBMEIsR0FBR0Usa0JBQWtCIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd2tzL3JlbW90ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlUmVtb3RlSldLU2V0ID0gdm9pZCAwO1xuY29uc3QgZmV0Y2hfandrc19qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZmV0Y2hfandrcy5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgbG9jYWxfanNfMSA9IHJlcXVpcmUoXCIuL2xvY2FsLmpzXCIpO1xuZnVuY3Rpb24gaXNDbG91ZGZsYXJlV29ya2VycygpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBXZWJTb2NrZXRQYWlyICE9PSAndW5kZWZpbmVkJyB8fFxuICAgICAgICAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCA9PT0gJ0Nsb3VkZmxhcmUtV29ya2VycycpIHx8XG4gICAgICAgICh0eXBlb2YgRWRnZVJ1bnRpbWUgIT09ICd1bmRlZmluZWQnICYmIEVkZ2VSdW50aW1lID09PSAndmVyY2VsJykpO1xufVxuY2xhc3MgUmVtb3RlSldLU2V0IGV4dGVuZHMgbG9jYWxfanNfMS5Mb2NhbEpXS1NldCB7XG4gICAgY29uc3RydWN0b3IodXJsLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKHsga2V5czogW10gfSk7XG4gICAgICAgIHRoaXMuX2p3a3MgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghKHVybCBpbnN0YW5jZW9mIFVSTCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3VybCBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIFVSTCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3VybCA9IG5ldyBVUkwodXJsLmhyZWYpO1xuICAgICAgICB0aGlzLl9vcHRpb25zID0geyBhZ2VudDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFnZW50LCBoZWFkZXJzOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycyB9O1xuICAgICAgICB0aGlzLl90aW1lb3V0RHVyYXRpb24gPVxuICAgICAgICAgICAgdHlwZW9mIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGltZW91dER1cmF0aW9uKSA9PT0gJ251bWJlcicgPyBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGltZW91dER1cmF0aW9uIDogNTAwMDtcbiAgICAgICAgdGhpcy5fY29vbGRvd25EdXJhdGlvbiA9XG4gICAgICAgICAgICB0eXBlb2YgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5jb29sZG93bkR1cmF0aW9uKSA9PT0gJ251bWJlcicgPyBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY29vbGRvd25EdXJhdGlvbiA6IDMwMDAwO1xuICAgICAgICB0aGlzLl9jYWNoZU1heEFnZSA9IHR5cGVvZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmNhY2hlTWF4QWdlKSA9PT0gJ251bWJlcicgPyBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY2FjaGVNYXhBZ2UgOiA2MDAwMDA7XG4gICAgfVxuICAgIGNvb2xpbmdEb3duKCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIHRoaXMuX2p3a3NUaW1lc3RhbXAgPT09ICdudW1iZXInXG4gICAgICAgICAgICA/IERhdGUubm93KCkgPCB0aGlzLl9qd2tzVGltZXN0YW1wICsgdGhpcy5fY29vbGRvd25EdXJhdGlvblxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICB9XG4gICAgZnJlc2goKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdGhpcy5fandrc1RpbWVzdGFtcCA9PT0gJ251bWJlcidcbiAgICAgICAgICAgID8gRGF0ZS5ub3coKSA8IHRoaXMuX2p3a3NUaW1lc3RhbXAgKyB0aGlzLl9jYWNoZU1heEFnZVxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0S2V5KHByb3RlY3RlZEhlYWRlciwgdG9rZW4pIHtcbiAgICAgICAgaWYgKCF0aGlzLl9qd2tzIHx8ICF0aGlzLmZyZXNoKCkpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucmVsb2FkKCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBzdXBlci5nZXRLZXkocHJvdGVjdGVkSGVhZGVyLCB0b2tlbik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIGVycm9yc19qc18xLkpXS1NOb01hdGNoaW5nS2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29vbGluZ0Rvd24oKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN1cGVyLmdldEtleShwcm90ZWN0ZWRIZWFkZXIsIHRva2VuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcmVsb2FkKCkge1xuICAgICAgICBpZiAodGhpcy5fcGVuZGluZ0ZldGNoICYmIGlzQ2xvdWRmbGFyZVdvcmtlcnMoKSkge1xuICAgICAgICAgICAgdGhpcy5fcGVuZGluZ0ZldGNoID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3BlbmRpbmdGZXRjaCB8fCAodGhpcy5fcGVuZGluZ0ZldGNoID0gKDAsIGZldGNoX2p3a3NfanNfMS5kZWZhdWx0KSh0aGlzLl91cmwsIHRoaXMuX3RpbWVvdXREdXJhdGlvbiwgdGhpcy5fb3B0aW9ucylcbiAgICAgICAgICAgIC50aGVuKChqc29uKSA9PiB7XG4gICAgICAgICAgICBpZiAoISgwLCBsb2NhbF9qc18xLmlzSldLU0xpa2UpKGpzb24pKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXS1NJbnZhbGlkKCdKU09OIFdlYiBLZXkgU2V0IG1hbGZvcm1lZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fandrcyA9IHsga2V5czoganNvbi5rZXlzIH07XG4gICAgICAgICAgICB0aGlzLl9qd2tzVGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdGZXRjaCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9wZW5kaW5nRmV0Y2ggPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pKTtcbiAgICAgICAgYXdhaXQgdGhpcy5fcGVuZGluZ0ZldGNoO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlbW90ZUpXS1NldCh1cmwsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBzZXQgPSBuZXcgUmVtb3RlSldLU2V0KHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIChwcm90ZWN0ZWRIZWFkZXIsIHRva2VuKSB7XG4gICAgICAgIHJldHVybiBzZXQuZ2V0S2V5KHByb3RlY3RlZEhlYWRlciwgdG9rZW4pO1xuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZVJlbW90ZUpXS1NldCA9IGNyZWF0ZVJlbW90ZUpXS1NldDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZVJlbW90ZUpXS1NldCIsImZldGNoX2p3a3NfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImxvY2FsX2pzXzEiLCJpc0Nsb3VkZmxhcmVXb3JrZXJzIiwiV2ViU29ja2V0UGFpciIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIkVkZ2VSdW50aW1lIiwiUmVtb3RlSldLU2V0IiwiTG9jYWxKV0tTZXQiLCJjb25zdHJ1Y3RvciIsInVybCIsIm9wdGlvbnMiLCJrZXlzIiwiX2p3a3MiLCJ1bmRlZmluZWQiLCJVUkwiLCJUeXBlRXJyb3IiLCJfdXJsIiwiaHJlZiIsIl9vcHRpb25zIiwiYWdlbnQiLCJoZWFkZXJzIiwiX3RpbWVvdXREdXJhdGlvbiIsInRpbWVvdXREdXJhdGlvbiIsIl9jb29sZG93bkR1cmF0aW9uIiwiY29vbGRvd25EdXJhdGlvbiIsIl9jYWNoZU1heEFnZSIsImNhY2hlTWF4QWdlIiwiY29vbGluZ0Rvd24iLCJfandrc1RpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJmcmVzaCIsImdldEtleSIsInByb3RlY3RlZEhlYWRlciIsInRva2VuIiwicmVsb2FkIiwiZXJyIiwiSldLU05vTWF0Y2hpbmdLZXkiLCJfcGVuZGluZ0ZldGNoIiwiZGVmYXVsdCIsInRoZW4iLCJqc29uIiwiaXNKV0tTTGlrZSIsIkpXS1NJbnZhbGlkIiwiY2F0Y2giLCJzZXQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwks/remote.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/sign.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/sign.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CompactSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nclass CompactSign {\n  constructor(payload) {\n    this._flattened = new sign_js_1.FlattenedSign(payload);\n  }\n  setProtectedHeader(protectedHeader) {\n    this._flattened.setProtectedHeader(protectedHeader);\n    return this;\n  }\n  async sign(key, options) {\n    const jws = await this._flattened.sign(key, options);\n    if (jws.payload === undefined) {\n      throw new TypeError('use the flattened module for creating JWS with b64: false');\n    }\n    return `${jws.protected}.${jws.payload}.${jws.signature}`;\n  }\n}\nexports.CompactSign = CompactSign;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2NvbXBhY3Qvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO0FBQzVCLE1BQU1HLFNBQVMsR0FBR0MsbUJBQU8sQ0FBQyxrSEFBc0IsQ0FBQztBQUNqRCxNQUFNRixXQUFXLENBQUM7RUFDZEcsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlKLFNBQVMsQ0FBQ0ssYUFBYSxDQUFDRixPQUFPLENBQUM7RUFDMUQ7RUFDQUcsa0JBQWtCQSxDQUFDQyxlQUFlLEVBQUU7SUFDaEMsSUFBSSxDQUFDSCxVQUFVLENBQUNFLGtCQUFrQixDQUFDQyxlQUFlLENBQUM7SUFDbkQsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxNQUFNQyxJQUFJQSxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtJQUNyQixNQUFNQyxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUNQLFVBQVUsQ0FBQ0ksSUFBSSxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sQ0FBQztJQUNwRCxJQUFJQyxHQUFHLENBQUNSLE9BQU8sS0FBS1MsU0FBUyxFQUFFO01BQzNCLE1BQU0sSUFBSUMsU0FBUyxDQUFDLDJEQUEyRCxDQUFDO0lBQ3BGO0lBQ0EsT0FBUSxHQUFFRixHQUFHLENBQUNHLFNBQVUsSUFBR0gsR0FBRyxDQUFDUixPQUFRLElBQUdRLEdBQUcsQ0FBQ0ksU0FBVSxFQUFDO0VBQzdEO0FBQ0o7QUFDQWxCLG1CQUFtQixHQUFHRSxXQUFXIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3MvY29tcGFjdC9zaWduLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db21wYWN0U2lnbiA9IHZvaWQgMDtcbmNvbnN0IHNpZ25fanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvc2lnbi5qc1wiKTtcbmNsYXNzIENvbXBhY3RTaWduIHtcbiAgICBjb25zdHJ1Y3RvcihwYXlsb2FkKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZCA9IG5ldyBzaWduX2pzXzEuRmxhdHRlbmVkU2lnbihwYXlsb2FkKTtcbiAgICB9XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBzaWduKGtleSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBqd3MgPSBhd2FpdCB0aGlzLl9mbGF0dGVuZWQuc2lnbihrZXksIG9wdGlvbnMpO1xuICAgICAgICBpZiAoandzLnBheWxvYWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndXNlIHRoZSBmbGF0dGVuZWQgbW9kdWxlIGZvciBjcmVhdGluZyBKV1Mgd2l0aCBiNjQ6IGZhbHNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGAke2p3cy5wcm90ZWN0ZWR9LiR7andzLnBheWxvYWR9LiR7andzLnNpZ25hdHVyZX1gO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcGFjdFNpZ24gPSBDb21wYWN0U2lnbjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbXBhY3RTaWduIiwic2lnbl9qc18xIiwicmVxdWlyZSIsImNvbnN0cnVjdG9yIiwicGF5bG9hZCIsIl9mbGF0dGVuZWQiLCJGbGF0dGVuZWRTaWduIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwic2lnbiIsImtleSIsIm9wdGlvbnMiLCJqd3MiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJwcm90ZWN0ZWQiLCJzaWduYXR1cmUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/sign.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/verify.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/verify.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.compactVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactVerify(jws, key, options) {\n  if (jws instanceof Uint8Array) {\n    jws = buffer_utils_js_1.decoder.decode(jws);\n  }\n  if (typeof jws !== 'string') {\n    throw new errors_js_1.JWSInvalid('Compact JWS must be a string or Uint8Array');\n  }\n  const {\n    0: protectedHeader,\n    1: payload,\n    2: signature,\n    length\n  } = jws.split('.');\n  if (length !== 3) {\n    throw new errors_js_1.JWSInvalid('Invalid Compact JWS');\n  }\n  const verified = await (0, verify_js_1.flattenedVerify)({\n    payload,\n    protected: protectedHeader,\n    signature\n  }, key, options);\n  const result = {\n    payload: verified.payload,\n    protectedHeader: verified.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key: verified.key\n    });\n  }\n  return result;\n}\nexports.compactVerify = compactVerify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2NvbXBhY3QvdmVyaWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUFBLFNBQUFBLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsQ0FBQSxFQUFBSSxDQUFBLFlBQUFKLENBQUE7QUFBQSxTQUFBVSxjQUFBWixDQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBWSxTQUFBLENBQUFDLE1BQUEsRUFBQWIsQ0FBQSxVQUFBQyxDQUFBLFdBQUFXLFNBQUEsQ0FBQVosQ0FBQSxJQUFBWSxTQUFBLENBQUFaLENBQUEsUUFBQUEsQ0FBQSxPQUFBRixPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxPQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQWUsZUFBQSxDQUFBaEIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsQ0FBQUQsQ0FBQSxTQUFBRSxNQUFBLENBQUFjLHlCQUFBLEdBQUFkLE1BQUEsQ0FBQWUsZ0JBQUEsQ0FBQWxCLENBQUEsRUFBQUcsTUFBQSxDQUFBYyx5QkFBQSxDQUFBZixDQUFBLEtBQUFILE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLEdBQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBRSxNQUFBLENBQUFnQixjQUFBLENBQUFuQixDQUFBLEVBQUFDLENBQUEsRUFBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBTixDQUFBLEVBQUFELENBQUEsaUJBQUFELENBQUE7QUFBQSxTQUFBZ0IsZ0JBQUFJLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxLQUFBLElBQUFELEdBQUEsR0FBQUUsY0FBQSxDQUFBRixHQUFBLE9BQUFBLEdBQUEsSUFBQUQsR0FBQSxJQUFBakIsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBQyxHQUFBLEVBQUFDLEdBQUEsSUFBQUMsS0FBQSxFQUFBQSxLQUFBLEVBQUFiLFVBQUEsUUFBQWUsWUFBQSxRQUFBQyxRQUFBLG9CQUFBTCxHQUFBLENBQUFDLEdBQUEsSUFBQUMsS0FBQSxXQUFBRixHQUFBO0FBQUEsU0FBQUcsZUFBQUcsR0FBQSxRQUFBTCxHQUFBLEdBQUFNLFlBQUEsQ0FBQUQsR0FBQSwyQkFBQUwsR0FBQSxnQkFBQUEsR0FBQSxHQUFBTyxNQUFBLENBQUFQLEdBQUE7QUFBQSxTQUFBTSxhQUFBRSxLQUFBLEVBQUFDLElBQUEsZUFBQUQsS0FBQSxpQkFBQUEsS0FBQSxrQkFBQUEsS0FBQSxNQUFBRSxJQUFBLEdBQUFGLEtBQUEsQ0FBQUcsTUFBQSxDQUFBQyxXQUFBLE9BQUFGLElBQUEsS0FBQUcsU0FBQSxRQUFBQyxHQUFBLEdBQUFKLElBQUEsQ0FBQUssSUFBQSxDQUFBUCxLQUFBLEVBQUFDLElBQUEsMkJBQUFLLEdBQUEsc0JBQUFBLEdBQUEsWUFBQUUsU0FBQSw0REFBQVAsSUFBQSxnQkFBQUYsTUFBQSxHQUFBVSxNQUFBLEVBQUFULEtBQUE7QUFDYjFCLDhDQUE2QztFQUFFbUIsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdEaUIscUJBQXFCLEdBQUcsS0FBSyxDQUFDO0FBQzlCLE1BQU1FLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyxzSEFBd0IsQ0FBQztBQUNyRCxNQUFNQyxXQUFXLEdBQUdELG1CQUFPLENBQUMsMkdBQXNCLENBQUM7QUFDbkQsTUFBTUUsaUJBQWlCLEdBQUdGLG1CQUFPLENBQUMscUhBQTJCLENBQUM7QUFDOUQsZUFBZUYsYUFBYUEsQ0FBQ0ssR0FBRyxFQUFFeEIsR0FBRyxFQUFFeUIsT0FBTyxFQUFFO0VBQzVDLElBQUlELEdBQUcsWUFBWUUsVUFBVSxFQUFFO0lBQzNCRixHQUFHLEdBQUdELGlCQUFpQixDQUFDSSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0osR0FBRyxDQUFDO0VBQy9DO0VBQ0EsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUFFO0lBQ3pCLE1BQU0sSUFBSUYsV0FBVyxDQUFDTyxVQUFVLENBQUMsNENBQTRDLENBQUM7RUFDbEY7RUFDQSxNQUFNO0lBQUUsQ0FBQyxFQUFFQyxlQUFlO0lBQUUsQ0FBQyxFQUFFQyxPQUFPO0lBQUUsQ0FBQyxFQUFFQyxTQUFTO0lBQUV2QztFQUFPLENBQUMsR0FBRytCLEdBQUcsQ0FBQ1MsS0FBSyxDQUFDLEdBQUcsQ0FBQztFQUMvRSxJQUFJeEMsTUFBTSxLQUFLLENBQUMsRUFBRTtJQUNkLE1BQU0sSUFBSTZCLFdBQVcsQ0FBQ08sVUFBVSxDQUFDLHFCQUFxQixDQUFDO0VBQzNEO0VBQ0EsTUFBTUssUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUVkLFdBQVcsQ0FBQ2UsZUFBZSxFQUFFO0lBQUVKLE9BQU87SUFBRUssU0FBUyxFQUFFTixlQUFlO0lBQUVFO0VBQVUsQ0FBQyxFQUFFaEMsR0FBRyxFQUFFeUIsT0FBTyxDQUFDO0VBQ3pILE1BQU1ZLE1BQU0sR0FBRztJQUFFTixPQUFPLEVBQUVHLFFBQVEsQ0FBQ0gsT0FBTztJQUFFRCxlQUFlLEVBQUVJLFFBQVEsQ0FBQ0o7RUFBZ0IsQ0FBQztFQUN2RixJQUFJLE9BQU85QixHQUFHLEtBQUssVUFBVSxFQUFFO0lBQzNCLE9BQUFULGFBQUEsQ0FBQUEsYUFBQSxLQUFZOEMsTUFBTTtNQUFFckMsR0FBRyxFQUFFa0MsUUFBUSxDQUFDbEM7SUFBRztFQUN6QztFQUNBLE9BQU9xQyxNQUFNO0FBQ2pCO0FBQ0FuQixxQkFBcUIsR0FBR0MsYUFBYSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2NvbXBhY3QvdmVyaWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wYWN0VmVyaWZ5ID0gdm9pZCAwO1xuY29uc3QgdmVyaWZ5X2pzXzEgPSByZXF1aXJlKFwiLi4vZmxhdHRlbmVkL3ZlcmlmeS5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGNvbXBhY3RWZXJpZnkoandzLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoandzIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBqd3MgPSBidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZShqd3MpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGp3cyAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0NvbXBhY3QgSldTIG11c3QgYmUgYSBzdHJpbmcgb3IgVWludDhBcnJheScpO1xuICAgIH1cbiAgICBjb25zdCB7IDA6IHByb3RlY3RlZEhlYWRlciwgMTogcGF5bG9hZCwgMjogc2lnbmF0dXJlLCBsZW5ndGggfSA9IGp3cy5zcGxpdCgnLicpO1xuICAgIGlmIChsZW5ndGggIT09IDMpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0ludmFsaWQgQ29tcGFjdCBKV1MnKTtcbiAgICB9XG4gICAgY29uc3QgdmVyaWZpZWQgPSBhd2FpdCAoMCwgdmVyaWZ5X2pzXzEuZmxhdHRlbmVkVmVyaWZ5KSh7IHBheWxvYWQsIHByb3RlY3RlZDogcHJvdGVjdGVkSGVhZGVyLCBzaWduYXR1cmUgfSwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB7IHBheWxvYWQ6IHZlcmlmaWVkLnBheWxvYWQsIHByb3RlY3RlZEhlYWRlcjogdmVyaWZpZWQucHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IHZlcmlmaWVkLmtleSB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5jb21wYWN0VmVyaWZ5ID0gY29tcGFjdFZlcmlmeTtcbiJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsImV4cG9ydHMiLCJjb21wYWN0VmVyaWZ5IiwidmVyaWZ5X2pzXzEiLCJyZXF1aXJlIiwiZXJyb3JzX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsImp3cyIsIm9wdGlvbnMiLCJVaW50OEFycmF5IiwiZGVjb2RlciIsImRlY29kZSIsIkpXU0ludmFsaWQiLCJwcm90ZWN0ZWRIZWFkZXIiLCJwYXlsb2FkIiwic2lnbmF0dXJlIiwic3BsaXQiLCJ2ZXJpZmllZCIsImZsYXR0ZW5lZFZlcmlmeSIsInByb3RlY3RlZCIsInJlc3VsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FlattenedSign = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst sign_js_1 = __webpack_require__(/*! ../../runtime/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass FlattenedSign {\n  constructor(payload) {\n    if (!(payload instanceof Uint8Array)) {\n      throw new TypeError('payload must be an instance of Uint8Array');\n    }\n    this._payload = payload;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this._unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this._unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  async sign(key, options) {\n    if (!this._protectedHeader && !this._unprotectedHeader) {\n      throw new errors_js_1.JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n    }\n    if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader)) {\n      throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = _objectSpread(_objectSpread({}, this._protectedHeader), this._unprotectedHeader);\n    const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n      b64 = this._protectedHeader.b64;\n      if (typeof b64 !== 'boolean') {\n        throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n      }\n    }\n    const {\n      alg\n    } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n      throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    (0, check_key_type_js_1.default)(alg, key, 'sign');\n    let payload = this._payload;\n    if (b64) {\n      payload = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(payload));\n    }\n    let protectedHeader;\n    if (this._protectedHeader) {\n      protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n    } else {\n      protectedHeader = buffer_utils_js_1.encoder.encode('');\n    }\n    const data = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode('.'), payload);\n    const signature = await (0, sign_js_1.default)(alg, key, data);\n    const jws = {\n      signature: (0, base64url_js_1.encode)(signature),\n      payload: ''\n    };\n    if (b64) {\n      jws.payload = buffer_utils_js_1.decoder.decode(payload);\n    }\n    if (this._unprotectedHeader) {\n      jws.header = this._unprotectedHeader;\n    }\n    if (this._protectedHeader) {\n      jws.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n    }\n    return jws;\n  }\n}\nexports.FlattenedSign = FlattenedSign;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.flattenedVerify = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst verify_js_1 = __webpack_require__(/*! ../../runtime/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedVerify(jws, key, options) {\n  var _a;\n  if (!(0, is_object_js_1.default)(jws)) {\n    throw new errors_js_1.JWSInvalid('Flattened JWS must be an object');\n  }\n  if (jws.protected === undefined && jws.header === undefined) {\n    throw new errors_js_1.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n  }\n  if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n    throw new errors_js_1.JWSInvalid('JWS Protected Header incorrect type');\n  }\n  if (jws.payload === undefined) {\n    throw new errors_js_1.JWSInvalid('JWS Payload missing');\n  }\n  if (typeof jws.signature !== 'string') {\n    throw new errors_js_1.JWSInvalid('JWS Signature missing or incorrect type');\n  }\n  if (jws.header !== undefined && !(0, is_object_js_1.default)(jws.header)) {\n    throw new errors_js_1.JWSInvalid('JWS Unprotected Header incorrect type');\n  }\n  let parsedProt = {};\n  if (jws.protected) {\n    try {\n      const protectedHeader = (0, base64url_js_1.decode)(jws.protected);\n      parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n    } catch {\n      throw new errors_js_1.JWSInvalid('JWS Protected Header is invalid');\n    }\n  }\n  if (!(0, is_disjoint_js_1.default)(parsedProt, jws.header)) {\n    throw new errors_js_1.JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n  }\n  const joseHeader = _objectSpread(_objectSpread({}, parsedProt), jws.header);\n  const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n  let b64 = true;\n  if (extensions.has('b64')) {\n    b64 = parsedProt.b64;\n    if (typeof b64 !== 'boolean') {\n      throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n    }\n  }\n  const {\n    alg\n  } = joseHeader;\n  if (typeof alg !== 'string' || !alg) {\n    throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n  }\n  const algorithms = options && (0, validate_algorithms_js_1.default)('algorithms', options.algorithms);\n  if (algorithms && !algorithms.has(alg)) {\n    throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n  }\n  if (b64) {\n    if (typeof jws.payload !== 'string') {\n      throw new errors_js_1.JWSInvalid('JWS Payload must be a string');\n    }\n  } else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n    throw new errors_js_1.JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n  }\n  let resolvedKey = false;\n  if (typeof key === 'function') {\n    key = await key(parsedProt, jws);\n    resolvedKey = true;\n  }\n  (0, check_key_type_js_1.default)(alg, key, 'verify');\n  const data = (0, buffer_utils_js_1.concat)(buffer_utils_js_1.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), buffer_utils_js_1.encoder.encode('.'), typeof jws.payload === 'string' ? buffer_utils_js_1.encoder.encode(jws.payload) : jws.payload);\n  let signature;\n  try {\n    signature = (0, base64url_js_1.decode)(jws.signature);\n  } catch {\n    throw new errors_js_1.JWSInvalid('Failed to base64url decode the signature');\n  }\n  const verified = await (0, verify_js_1.default)(alg, key, signature, data);\n  if (!verified) {\n    throw new errors_js_1.JWSSignatureVerificationFailed();\n  }\n  let payload;\n  if (b64) {\n    try {\n      payload = (0, base64url_js_1.decode)(jws.payload);\n    } catch {\n      throw new errors_js_1.JWSInvalid('Failed to base64url decode the payload');\n    }\n  } else if (typeof jws.payload === 'string') {\n    payload = buffer_utils_js_1.encoder.encode(jws.payload);\n  } else {\n    payload = jws.payload;\n  }\n  const result = {\n    payload\n  };\n  if (jws.protected !== undefined) {\n    result.protectedHeader = parsedProt;\n  }\n  if (jws.header !== undefined) {\n    result.unprotectedHeader = jws.header;\n  }\n  if (resolvedKey) {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key\n    });\n  }\n  return result;\n}\nexports.flattenedVerify = flattenedVerify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/sign.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/sign.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"payload\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GeneralSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nclass IndividualSignature {\n  constructor(sig, key, options) {\n    this.parent = sig;\n    this.key = key;\n    this.options = options;\n  }\n  setProtectedHeader(protectedHeader) {\n    if (this.protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this.protectedHeader = protectedHeader;\n    return this;\n  }\n  setUnprotectedHeader(unprotectedHeader) {\n    if (this.unprotectedHeader) {\n      throw new TypeError('setUnprotectedHeader can only be called once');\n    }\n    this.unprotectedHeader = unprotectedHeader;\n    return this;\n  }\n  addSignature(...args) {\n    return this.parent.addSignature(...args);\n  }\n  sign(...args) {\n    return this.parent.sign(...args);\n  }\n  done() {\n    return this.parent;\n  }\n}\nclass GeneralSign {\n  constructor(payload) {\n    this._signatures = [];\n    this._payload = payload;\n  }\n  addSignature(key, options) {\n    const signature = new IndividualSignature(this, key, options);\n    this._signatures.push(signature);\n    return signature;\n  }\n  async sign() {\n    if (!this._signatures.length) {\n      throw new errors_js_1.JWSInvalid('at least one signature must be added');\n    }\n    const jws = {\n      signatures: [],\n      payload: ''\n    };\n    for (let i = 0; i < this._signatures.length; i++) {\n      const signature = this._signatures[i];\n      const flattened = new sign_js_1.FlattenedSign(this._payload);\n      flattened.setProtectedHeader(signature.protectedHeader);\n      flattened.setUnprotectedHeader(signature.unprotectedHeader);\n      const _await$flattened$sign = await flattened.sign(signature.key, signature.options),\n        {\n          payload\n        } = _await$flattened$sign,\n        rest = _objectWithoutProperties(_await$flattened$sign, _excluded);\n      if (i === 0) {\n        jws.payload = payload;\n      } else if (jws.payload !== payload) {\n        throw new errors_js_1.JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n      }\n      jws.signatures.push(rest);\n    }\n    return jws;\n  }\n}\nexports.GeneralSign = GeneralSign;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/sign.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/verify.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/verify.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generalVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalVerify(jws, key, options) {\n  if (!(0, is_object_js_1.default)(jws)) {\n    throw new errors_js_1.JWSInvalid('General JWS must be an object');\n  }\n  if (!Array.isArray(jws.signatures) || !jws.signatures.every(is_object_js_1.default)) {\n    throw new errors_js_1.JWSInvalid('JWS Signatures missing or incorrect type');\n  }\n  for (const signature of jws.signatures) {\n    try {\n      return await (0, verify_js_1.flattenedVerify)({\n        header: signature.header,\n        payload: jws.payload,\n        protected: signature.protected,\n        signature: signature.signature\n      }, key, options);\n    } catch {}\n  }\n  throw new errors_js_1.JWSSignatureVerificationFailed();\n}\nexports.generalVerify = generalVerify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2dlbmVyYWwvdmVyaWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLLENBQUM7QUFDOUIsTUFBTUcsV0FBVyxHQUFHQyxtQkFBTyxDQUFDLHNIQUF3QixDQUFDO0FBQ3JELE1BQU1DLFdBQVcsR0FBR0QsbUJBQU8sQ0FBQywyR0FBc0IsQ0FBQztBQUNuRCxNQUFNRSxjQUFjLEdBQUdGLG1CQUFPLENBQUMsK0dBQXdCLENBQUM7QUFDeEQsZUFBZUYsYUFBYUEsQ0FBQ0ssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtFQUM1QyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVILGNBQWMsQ0FBQ0ksT0FBTyxFQUFFSCxHQUFHLENBQUMsRUFBRTtJQUNuQyxNQUFNLElBQUlGLFdBQVcsQ0FBQ00sVUFBVSxDQUFDLCtCQUErQixDQUFDO0VBQ3JFO0VBQ0EsSUFBSSxDQUFDQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ04sR0FBRyxDQUFDTyxVQUFVLENBQUMsSUFBSSxDQUFDUCxHQUFHLENBQUNPLFVBQVUsQ0FBQ0MsS0FBSyxDQUFDVCxjQUFjLENBQUNJLE9BQU8sQ0FBQyxFQUFFO0lBQ2pGLE1BQU0sSUFBSUwsV0FBVyxDQUFDTSxVQUFVLENBQUMsMENBQTBDLENBQUM7RUFDaEY7RUFDQSxLQUFLLE1BQU1LLFNBQVMsSUFBSVQsR0FBRyxDQUFDTyxVQUFVLEVBQUU7SUFDcEMsSUFBSTtNQUNBLE9BQU8sTUFBTSxDQUFDLENBQUMsRUFBRVgsV0FBVyxDQUFDYyxlQUFlLEVBQUU7UUFDMUNDLE1BQU0sRUFBRUYsU0FBUyxDQUFDRSxNQUFNO1FBQ3hCQyxPQUFPLEVBQUVaLEdBQUcsQ0FBQ1ksT0FBTztRQUNwQkMsU0FBUyxFQUFFSixTQUFTLENBQUNJLFNBQVM7UUFDOUJKLFNBQVMsRUFBRUEsU0FBUyxDQUFDQTtNQUN6QixDQUFDLEVBQUVSLEdBQUcsRUFBRUMsT0FBTyxDQUFDO0lBQ3BCLENBQUMsQ0FDRCxNQUFNLENBQ047RUFDSjtFQUNBLE1BQU0sSUFBSUosV0FBVyxDQUFDZ0IsOEJBQThCLENBQUMsQ0FBQztBQUMxRDtBQUNBckIscUJBQXFCLEdBQUdFLGFBQWEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3ZlcmlmeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhbFZlcmlmeSA9IHZvaWQgMDtcbmNvbnN0IHZlcmlmeV9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC92ZXJpZnkuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGlzX29iamVjdF9qc18xID0gcmVxdWlyZShcIi4uLy4uL2xpYi9pc19vYmplY3QuanNcIik7XG5hc3luYyBmdW5jdGlvbiBnZW5lcmFsVmVyaWZ5KGp3cywga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkoandzKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldTSW52YWxpZCgnR2VuZXJhbCBKV1MgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGp3cy5zaWduYXR1cmVzKSB8fCAhandzLnNpZ25hdHVyZXMuZXZlcnkoaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0pXUyBTaWduYXR1cmVzIG1pc3Npbmcgb3IgaW5jb3JyZWN0IHR5cGUnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzaWduYXR1cmUgb2YgandzLnNpZ25hdHVyZXMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCAoMCwgdmVyaWZ5X2pzXzEuZmxhdHRlbmVkVmVyaWZ5KSh7XG4gICAgICAgICAgICAgICAgaGVhZGVyOiBzaWduYXR1cmUuaGVhZGVyLFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IGp3cy5wYXlsb2FkLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZDogc2lnbmF0dXJlLnByb3RlY3RlZCxcbiAgICAgICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZS5zaWduYXR1cmUsXG4gICAgICAgICAgICB9LCBrZXksIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldTU2lnbmF0dXJlVmVyaWZpY2F0aW9uRmFpbGVkKCk7XG59XG5leHBvcnRzLmdlbmVyYWxWZXJpZnkgPSBnZW5lcmFsVmVyaWZ5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhbFZlcmlmeSIsInZlcmlmeV9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJqd3MiLCJrZXkiLCJvcHRpb25zIiwiZGVmYXVsdCIsIkpXU0ludmFsaWQiLCJBcnJheSIsImlzQXJyYXkiLCJzaWduYXR1cmVzIiwiZXZlcnkiLCJzaWduYXR1cmUiLCJmbGF0dGVuZWRWZXJpZnkiLCJoZWFkZXIiLCJwYXlsb2FkIiwicHJvdGVjdGVkIiwiSldTU2lnbmF0dXJlVmVyaWZpY2F0aW9uRmFpbGVkIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/general/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/decrypt.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/decrypt.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.jwtDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../jwe/compact/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtDecrypt(jwt, key, options) {\n  const decrypted = await (0, decrypt_js_1.compactDecrypt)(jwt, key, options);\n  const payload = (0, jwt_claims_set_js_1.default)(decrypted.protectedHeader, decrypted.plaintext, options);\n  const {\n    protectedHeader\n  } = decrypted;\n  if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n    throw new errors_js_1.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n  }\n  if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n    throw new errors_js_1.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n  }\n  if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n    throw new errors_js_1.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n  }\n  const result = {\n    payload,\n    protectedHeader\n  };\n  if (typeof key === 'function') {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key: decrypted.key\n    });\n  }\n  return result;\n}\nexports.jwtDecrypt = jwtDecrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQUEsU0FBQUEsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBZSxlQUFBLENBQUFoQixDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxDQUFBRCxDQUFBLFNBQUFFLE1BQUEsQ0FBQWMseUJBQUEsR0FBQWQsTUFBQSxDQUFBZSxnQkFBQSxDQUFBbEIsQ0FBQSxFQUFBRyxNQUFBLENBQUFjLHlCQUFBLENBQUFmLENBQUEsS0FBQUgsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsR0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFFLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQW5CLENBQUEsRUFBQUMsQ0FBQSxFQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFOLENBQUEsRUFBQUQsQ0FBQSxpQkFBQUQsQ0FBQTtBQUFBLFNBQUFnQixnQkFBQUksR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEtBQUEsSUFBQUQsR0FBQSxHQUFBRSxjQUFBLENBQUFGLEdBQUEsT0FBQUEsR0FBQSxJQUFBRCxHQUFBLElBQUFqQixNQUFBLENBQUFnQixjQUFBLENBQUFDLEdBQUEsRUFBQUMsR0FBQSxJQUFBQyxLQUFBLEVBQUFBLEtBQUEsRUFBQWIsVUFBQSxRQUFBZSxZQUFBLFFBQUFDLFFBQUEsb0JBQUFMLEdBQUEsQ0FBQUMsR0FBQSxJQUFBQyxLQUFBLFdBQUFGLEdBQUE7QUFBQSxTQUFBRyxlQUFBRyxHQUFBLFFBQUFMLEdBQUEsR0FBQU0sWUFBQSxDQUFBRCxHQUFBLDJCQUFBTCxHQUFBLGdCQUFBQSxHQUFBLEdBQUFPLE1BQUEsQ0FBQVAsR0FBQTtBQUFBLFNBQUFNLGFBQUFFLEtBQUEsRUFBQUMsSUFBQSxlQUFBRCxLQUFBLGlCQUFBQSxLQUFBLGtCQUFBQSxLQUFBLE1BQUFFLElBQUEsR0FBQUYsS0FBQSxDQUFBRyxNQUFBLENBQUFDLFdBQUEsT0FBQUYsSUFBQSxLQUFBRyxTQUFBLFFBQUFDLEdBQUEsR0FBQUosSUFBQSxDQUFBSyxJQUFBLENBQUFQLEtBQUEsRUFBQUMsSUFBQSwyQkFBQUssR0FBQSxzQkFBQUEsR0FBQSxZQUFBRSxTQUFBLDREQUFBUCxJQUFBLGdCQUFBRixNQUFBLEdBQUFVLE1BQUEsRUFBQVQsS0FBQTtBQUNiMUIsOENBQTZDO0VBQUVtQixLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RpQixrQkFBa0IsR0FBRyxLQUFLLENBQUM7QUFDM0IsTUFBTUUsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLHdIQUEyQixDQUFDO0FBQ3pELE1BQU1DLG1CQUFtQixHQUFHRCxtQkFBTyxDQUFDLHNIQUEwQixDQUFDO0FBQy9ELE1BQU1FLFdBQVcsR0FBR0YsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxlQUFlRixVQUFVQSxDQUFDSyxHQUFHLEVBQUV4QixHQUFHLEVBQUV5QixPQUFPLEVBQUU7RUFDekMsTUFBTUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUVOLFlBQVksQ0FBQ08sY0FBYyxFQUFFSCxHQUFHLEVBQUV4QixHQUFHLEVBQUV5QixPQUFPLENBQUM7RUFDM0UsTUFBTUcsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFTixtQkFBbUIsQ0FBQ08sT0FBTyxFQUFFSCxTQUFTLENBQUNJLGVBQWUsRUFBRUosU0FBUyxDQUFDSyxTQUFTLEVBQUVOLE9BQU8sQ0FBQztFQUN6RyxNQUFNO0lBQUVLO0VBQWdCLENBQUMsR0FBR0osU0FBUztFQUNyQyxJQUFJSSxlQUFlLENBQUNFLEdBQUcsS0FBS25CLFNBQVMsSUFBSWlCLGVBQWUsQ0FBQ0UsR0FBRyxLQUFLSixPQUFPLENBQUNJLEdBQUcsRUFBRTtJQUMxRSxNQUFNLElBQUlULFdBQVcsQ0FBQ1Usd0JBQXdCLENBQUMsa0RBQWtELEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQztFQUN6SDtFQUNBLElBQUlILGVBQWUsQ0FBQ0ksR0FBRyxLQUFLckIsU0FBUyxJQUFJaUIsZUFBZSxDQUFDSSxHQUFHLEtBQUtOLE9BQU8sQ0FBQ00sR0FBRyxFQUFFO0lBQzFFLE1BQU0sSUFBSVgsV0FBVyxDQUFDVSx3QkFBd0IsQ0FBQyxrREFBa0QsRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDO0VBQ3pIO0VBQ0EsSUFBSUgsZUFBZSxDQUFDSyxHQUFHLEtBQUt0QixTQUFTLElBQ2pDdUIsSUFBSSxDQUFDQyxTQUFTLENBQUNQLGVBQWUsQ0FBQ0ssR0FBRyxDQUFDLEtBQUtDLElBQUksQ0FBQ0MsU0FBUyxDQUFDVCxPQUFPLENBQUNPLEdBQUcsQ0FBQyxFQUFFO0lBQ3JFLE1BQU0sSUFBSVosV0FBVyxDQUFDVSx3QkFBd0IsQ0FBQyxrREFBa0QsRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDO0VBQ3pIO0VBQ0EsTUFBTUssTUFBTSxHQUFHO0lBQUVWLE9BQU87SUFBRUU7RUFBZ0IsQ0FBQztFQUMzQyxJQUFJLE9BQU85QixHQUFHLEtBQUssVUFBVSxFQUFFO0lBQzNCLE9BQUFULGFBQUEsQ0FBQUEsYUFBQSxLQUFZK0MsTUFBTTtNQUFFdEMsR0FBRyxFQUFFMEIsU0FBUyxDQUFDMUI7SUFBRztFQUMxQztFQUNBLE9BQU9zQyxNQUFNO0FBQ2pCO0FBQ0FwQixrQkFBa0IsR0FBR0MsVUFBVSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L2RlY3J5cHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmp3dERlY3J5cHQgPSB2b2lkIDA7XG5jb25zdCBkZWNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vandlL2NvbXBhY3QvZGVjcnlwdC5qc1wiKTtcbmNvbnN0IGp3dF9jbGFpbXNfc2V0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2p3dF9jbGFpbXNfc2V0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5hc3luYyBmdW5jdGlvbiBqd3REZWNyeXB0KGp3dCwga2V5LCBvcHRpb25zKSB7XG4gICAgY29uc3QgZGVjcnlwdGVkID0gYXdhaXQgKDAsIGRlY3J5cHRfanNfMS5jb21wYWN0RGVjcnlwdCkoand0LCBrZXksIG9wdGlvbnMpO1xuICAgIGNvbnN0IHBheWxvYWQgPSAoMCwgand0X2NsYWltc19zZXRfanNfMS5kZWZhdWx0KShkZWNyeXB0ZWQucHJvdGVjdGVkSGVhZGVyLCBkZWNyeXB0ZWQucGxhaW50ZXh0LCBvcHRpb25zKTtcbiAgICBjb25zdCB7IHByb3RlY3RlZEhlYWRlciB9ID0gZGVjcnlwdGVkO1xuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuaXNzICE9PSB1bmRlZmluZWQgJiYgcHJvdGVjdGVkSGVhZGVyLmlzcyAhPT0gcGF5bG9hZC5pc3MpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCgncmVwbGljYXRlZCBcImlzc1wiIGNsYWltIGhlYWRlciBwYXJhbWV0ZXIgbWlzbWF0Y2gnLCAnaXNzJywgJ21pc21hdGNoJyk7XG4gICAgfVxuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuc3ViICE9PSB1bmRlZmluZWQgJiYgcHJvdGVjdGVkSGVhZGVyLnN1YiAhPT0gcGF5bG9hZC5zdWIpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCgncmVwbGljYXRlZCBcInN1YlwiIGNsYWltIGhlYWRlciBwYXJhbWV0ZXIgbWlzbWF0Y2gnLCAnc3ViJywgJ21pc21hdGNoJyk7XG4gICAgfVxuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuYXVkICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkocHJvdGVjdGVkSGVhZGVyLmF1ZCkgIT09IEpTT04uc3RyaW5naWZ5KHBheWxvYWQuYXVkKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkKCdyZXBsaWNhdGVkIFwiYXVkXCIgY2xhaW0gaGVhZGVyIHBhcmFtZXRlciBtaXNtYXRjaCcsICdhdWQnLCAnbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXIgfTtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4geyAuLi5yZXN1bHQsIGtleTogZGVjcnlwdGVkLmtleSB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5qd3REZWNyeXB0ID0gand0RGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJfdG9Qcm9wZXJ0eUtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIk51bWJlciIsImV4cG9ydHMiLCJqd3REZWNyeXB0IiwiZGVjcnlwdF9qc18xIiwicmVxdWlyZSIsImp3dF9jbGFpbXNfc2V0X2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dCIsIm9wdGlvbnMiLCJkZWNyeXB0ZWQiLCJjb21wYWN0RGVjcnlwdCIsInBheWxvYWQiLCJkZWZhdWx0IiwicHJvdGVjdGVkSGVhZGVyIiwicGxhaW50ZXh0IiwiaXNzIiwiSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkIiwic3ViIiwiYXVkIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3VsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/encrypt.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/encrypt.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EncryptJWT = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../jwe/compact/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass EncryptJWT extends produce_js_1.ProduceJWT {\n  setProtectedHeader(protectedHeader) {\n    if (this._protectedHeader) {\n      throw new TypeError('setProtectedHeader can only be called once');\n    }\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  setKeyManagementParameters(parameters) {\n    if (this._keyManagementParameters) {\n      throw new TypeError('setKeyManagementParameters can only be called once');\n    }\n    this._keyManagementParameters = parameters;\n    return this;\n  }\n  setContentEncryptionKey(cek) {\n    if (this._cek) {\n      throw new TypeError('setContentEncryptionKey can only be called once');\n    }\n    this._cek = cek;\n    return this;\n  }\n  setInitializationVector(iv) {\n    if (this._iv) {\n      throw new TypeError('setInitializationVector can only be called once');\n    }\n    this._iv = iv;\n    return this;\n  }\n  replicateIssuerAsHeader() {\n    this._replicateIssuerAsHeader = true;\n    return this;\n  }\n  replicateSubjectAsHeader() {\n    this._replicateSubjectAsHeader = true;\n    return this;\n  }\n  replicateAudienceAsHeader() {\n    this._replicateAudienceAsHeader = true;\n    return this;\n  }\n  async encrypt(key, options) {\n    const enc = new encrypt_js_1.CompactEncrypt(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n    if (this._replicateIssuerAsHeader) {\n      this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n        iss: this._payload.iss\n      });\n    }\n    if (this._replicateSubjectAsHeader) {\n      this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n        sub: this._payload.sub\n      });\n    }\n    if (this._replicateAudienceAsHeader) {\n      this._protectedHeader = _objectSpread(_objectSpread({}, this._protectedHeader), {}, {\n        aud: this._payload.aud\n      });\n    }\n    enc.setProtectedHeader(this._protectedHeader);\n    if (this._iv) {\n      enc.setInitializationVector(this._iv);\n    }\n    if (this._cek) {\n      enc.setContentEncryptionKey(this._cek);\n    }\n    if (this._keyManagementParameters) {\n      enc.setKeyManagementParameters(this._keyManagementParameters);\n    }\n    return enc.encrypt(key, options);\n  }\n}\nexports.EncryptJWT = EncryptJWT;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/encrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ProduceJWT = void 0;\nconst epoch_js_1 = __webpack_require__(/*! ../lib/epoch.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst secs_js_1 = __webpack_require__(/*! ../lib/secs.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/secs.js\");\nclass ProduceJWT {\n  constructor(payload) {\n    if (!(0, is_object_js_1.default)(payload)) {\n      throw new TypeError('JWT Claims Set MUST be an object');\n    }\n    this._payload = payload;\n  }\n  setIssuer(issuer) {\n    this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n      iss: issuer\n    });\n    return this;\n  }\n  setSubject(subject) {\n    this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n      sub: subject\n    });\n    return this;\n  }\n  setAudience(audience) {\n    this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n      aud: audience\n    });\n    return this;\n  }\n  setJti(jwtId) {\n    this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n      jti: jwtId\n    });\n    return this;\n  }\n  setNotBefore(input) {\n    if (typeof input === 'number') {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        nbf: input\n      });\n    } else {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        nbf: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n      });\n    }\n    return this;\n  }\n  setExpirationTime(input) {\n    if (typeof input === 'number') {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        exp: input\n      });\n    } else {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        exp: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n      });\n    }\n    return this;\n  }\n  setIssuedAt(input) {\n    if (typeof input === 'undefined') {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        iat: (0, epoch_js_1.default)(new Date())\n      });\n    } else {\n      this._payload = _objectSpread(_objectSpread({}, this._payload), {}, {\n        iat: input\n      });\n    }\n    return this;\n  }\n}\nexports.ProduceJWT = ProduceJWT;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/sign.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/sign.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SignJWT = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../jws/compact/sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass SignJWT extends produce_js_1.ProduceJWT {\n  setProtectedHeader(protectedHeader) {\n    this._protectedHeader = protectedHeader;\n    return this;\n  }\n  async sign(key, options) {\n    var _a;\n    const sig = new sign_js_1.CompactSign(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n    sig.setProtectedHeader(this._protectedHeader);\n    if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) && this._protectedHeader.crit.includes('b64') && this._protectedHeader.b64 === false) {\n      throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    return sig.sign(key, options);\n  }\n}\nexports.SignJWT = SignJWT;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLLENBQUM7QUFDeEIsTUFBTUcsU0FBUyxHQUFHQyxtQkFBTyxDQUFDLGtIQUF3QixDQUFDO0FBQ25ELE1BQU1DLFdBQVcsR0FBR0QsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxNQUFNRSxpQkFBaUIsR0FBR0YsbUJBQU8sQ0FBQyxrSEFBd0IsQ0FBQztBQUMzRCxNQUFNRyxZQUFZLEdBQUdILG1CQUFPLENBQUMsbUdBQWMsQ0FBQztBQUM1QyxNQUFNRixPQUFPLFNBQVNLLFlBQVksQ0FBQ0MsVUFBVSxDQUFDO0VBQzFDQyxrQkFBa0JBLENBQUNDLGVBQWUsRUFBRTtJQUNoQyxJQUFJLENBQUNDLGdCQUFnQixHQUFHRCxlQUFlO0lBQ3ZDLE9BQU8sSUFBSTtFQUNmO0VBQ0EsTUFBTUUsSUFBSUEsQ0FBQ0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7SUFDckIsSUFBSUMsRUFBRTtJQUNOLE1BQU1DLEdBQUcsR0FBRyxJQUFJYixTQUFTLENBQUNjLFdBQVcsQ0FBQ1gsaUJBQWlCLENBQUNZLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxJQUFJLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdEdOLEdBQUcsQ0FBQ1Asa0JBQWtCLENBQUMsSUFBSSxDQUFDRSxnQkFBZ0IsQ0FBQztJQUM3QyxJQUFJWSxLQUFLLENBQUNDLE9BQU8sQ0FBQyxDQUFDVCxFQUFFLEdBQUcsSUFBSSxDQUFDSixnQkFBZ0IsTUFBTSxJQUFJLElBQUlJLEVBQUUsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsRUFBRSxDQUFDVSxJQUFJLENBQUMsSUFDeEYsSUFBSSxDQUFDZCxnQkFBZ0IsQ0FBQ2MsSUFBSSxDQUFDQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQzFDLElBQUksQ0FBQ2YsZ0JBQWdCLENBQUNnQixHQUFHLEtBQUssS0FBSyxFQUFFO01BQ3JDLE1BQU0sSUFBSXRCLFdBQVcsQ0FBQ3VCLFVBQVUsQ0FBQyxxQ0FBcUMsQ0FBQztJQUMzRTtJQUNBLE9BQU9aLEdBQUcsQ0FBQ0osSUFBSSxDQUFDQyxHQUFHLEVBQUVDLE9BQU8sQ0FBQztFQUNqQztBQUNKO0FBQ0FkLGVBQWUsR0FBR0UsT0FBTyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3NpZ24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpZ25KV1QgPSB2b2lkIDA7XG5jb25zdCBzaWduX2pzXzEgPSByZXF1aXJlKFwiLi4vandzL2NvbXBhY3Qvc2lnbi5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IHByb2R1Y2VfanNfMSA9IHJlcXVpcmUoXCIuL3Byb2R1Y2UuanNcIik7XG5jbGFzcyBTaWduSldUIGV4dGVuZHMgcHJvZHVjZV9qc18xLlByb2R1Y2VKV1Qge1xuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0gcHJvdGVjdGVkSGVhZGVyO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgc2lnbihrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBzaWcgPSBuZXcgc2lnbl9qc18xLkNvbXBhY3RTaWduKGJ1ZmZlcl91dGlsc19qc18xLmVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3BheWxvYWQpKSk7XG4gICAgICAgIHNpZy5zZXRQcm90ZWN0ZWRIZWFkZXIodGhpcy5fcHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoKF9hID0gdGhpcy5fcHJvdGVjdGVkSGVhZGVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY3JpdCkgJiZcbiAgICAgICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlci5jcml0LmluY2x1ZGVzKCdiNjQnKSAmJlxuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyLmI2NCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdKV1RzIE1VU1QgTk9UIHVzZSB1bmVuY29kZWQgcGF5bG9hZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzaWcuc2lnbihrZXksIG9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbkpXVCA9IFNpZ25KV1Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJTaWduSldUIiwic2lnbl9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJwcm9kdWNlX2pzXzEiLCJQcm9kdWNlSldUIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwiX3Byb3RlY3RlZEhlYWRlciIsInNpZ24iLCJrZXkiLCJvcHRpb25zIiwiX2EiLCJzaWciLCJDb21wYWN0U2lnbiIsImVuY29kZXIiLCJlbmNvZGUiLCJKU09OIiwic3RyaW5naWZ5IiwiX3BheWxvYWQiLCJBcnJheSIsImlzQXJyYXkiLCJjcml0IiwiaW5jbHVkZXMiLCJiNjQiLCJKV1RJbnZhbGlkIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/sign.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/unsecured.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/unsecured.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.UnsecuredJWT = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass UnsecuredJWT extends produce_js_1.ProduceJWT {\n  encode() {\n    const header = base64url.encode(JSON.stringify({\n      alg: 'none'\n    }));\n    const payload = base64url.encode(JSON.stringify(this._payload));\n    return `${header}.${payload}.`;\n  }\n  static decode(jwt, options) {\n    if (typeof jwt !== 'string') {\n      throw new errors_js_1.JWTInvalid('Unsecured JWT must be a string');\n    }\n    const {\n      0: encodedHeader,\n      1: encodedPayload,\n      2: signature,\n      length\n    } = jwt.split('.');\n    if (length !== 3 || signature !== '') {\n      throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n    }\n    let header;\n    try {\n      header = JSON.parse(buffer_utils_js_1.decoder.decode(base64url.decode(encodedHeader)));\n      if (header.alg !== 'none') throw new Error();\n    } catch {\n      throw new errors_js_1.JWTInvalid('Invalid Unsecured JWT');\n    }\n    const payload = (0, jwt_claims_set_js_1.default)(header, base64url.decode(encodedPayload), options);\n    return {\n      payload,\n      header\n    };\n  }\n}\nexports.UnsecuredJWT = UnsecuredJWT;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3Vuc2VjdXJlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUcsS0FBSyxDQUFDO0FBQzdCLE1BQU1HLFNBQVMsR0FBR0MsbUJBQU8sQ0FBQyxvSEFBeUIsQ0FBQztBQUNwRCxNQUFNQyxpQkFBaUIsR0FBR0QsbUJBQU8sQ0FBQyxrSEFBd0IsQ0FBQztBQUMzRCxNQUFNRSxXQUFXLEdBQUdGLG1CQUFPLENBQUMsd0dBQW1CLENBQUM7QUFDaEQsTUFBTUcsbUJBQW1CLEdBQUdILG1CQUFPLENBQUMsc0hBQTBCLENBQUM7QUFDL0QsTUFBTUksWUFBWSxHQUFHSixtQkFBTyxDQUFDLG1HQUFjLENBQUM7QUFDNUMsTUFBTUYsWUFBWSxTQUFTTSxZQUFZLENBQUNDLFVBQVUsQ0FBQztFQUMvQ0MsTUFBTUEsQ0FBQSxFQUFHO0lBQ0wsTUFBTUMsTUFBTSxHQUFHUixTQUFTLENBQUNPLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDQyxTQUFTLENBQUM7TUFBRUMsR0FBRyxFQUFFO0lBQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEUsTUFBTUMsT0FBTyxHQUFHWixTQUFTLENBQUNPLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDRyxRQUFRLENBQUMsQ0FBQztJQUMvRCxPQUFRLEdBQUVMLE1BQU8sSUFBR0ksT0FBUSxHQUFFO0VBQ2xDO0VBQ0EsT0FBT0UsTUFBTUEsQ0FBQ0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7SUFDeEIsSUFBSSxPQUFPRCxHQUFHLEtBQUssUUFBUSxFQUFFO01BQ3pCLE1BQU0sSUFBSVosV0FBVyxDQUFDYyxVQUFVLENBQUMsZ0NBQWdDLENBQUM7SUFDdEU7SUFDQSxNQUFNO01BQUUsQ0FBQyxFQUFFQyxhQUFhO01BQUUsQ0FBQyxFQUFFQyxjQUFjO01BQUUsQ0FBQyxFQUFFQyxTQUFTO01BQUVDO0lBQU8sQ0FBQyxHQUFHTixHQUFHLENBQUNPLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDcEYsSUFBSUQsTUFBTSxLQUFLLENBQUMsSUFBSUQsU0FBUyxLQUFLLEVBQUUsRUFBRTtNQUNsQyxNQUFNLElBQUlqQixXQUFXLENBQUNjLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQztJQUM3RDtJQUNBLElBQUlULE1BQU07SUFDVixJQUFJO01BQ0FBLE1BQU0sR0FBR0MsSUFBSSxDQUFDYyxLQUFLLENBQUNyQixpQkFBaUIsQ0FBQ3NCLE9BQU8sQ0FBQ1YsTUFBTSxDQUFDZCxTQUFTLENBQUNjLE1BQU0sQ0FBQ0ksYUFBYSxDQUFDLENBQUMsQ0FBQztNQUN0RixJQUFJVixNQUFNLENBQUNHLEdBQUcsS0FBSyxNQUFNLEVBQ3JCLE1BQU0sSUFBSWMsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQyxDQUNELE1BQU07TUFDRixNQUFNLElBQUl0QixXQUFXLENBQUNjLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQztJQUM3RDtJQUNBLE1BQU1MLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRVIsbUJBQW1CLENBQUNzQixPQUFPLEVBQUVsQixNQUFNLEVBQUVSLFNBQVMsQ0FBQ2MsTUFBTSxDQUFDSyxjQUFjLENBQUMsRUFBRUgsT0FBTyxDQUFDO0lBQ25HLE9BQU87TUFBRUosT0FBTztNQUFFSjtJQUFPLENBQUM7RUFDOUI7QUFDSjtBQUNBWCxvQkFBb0IsR0FBR0UsWUFBWSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3Vuc2VjdXJlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVW5zZWN1cmVkSldUID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3Qgand0X2NsYWltc19zZXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvand0X2NsYWltc19zZXQuanNcIik7XG5jb25zdCBwcm9kdWNlX2pzXzEgPSByZXF1aXJlKFwiLi9wcm9kdWNlLmpzXCIpO1xuY2xhc3MgVW5zZWN1cmVkSldUIGV4dGVuZHMgcHJvZHVjZV9qc18xLlByb2R1Y2VKV1Qge1xuICAgIGVuY29kZSgpIHtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeSh7IGFsZzogJ25vbmUnIH0pKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkodGhpcy5fcGF5bG9hZCkpO1xuICAgICAgICByZXR1cm4gYCR7aGVhZGVyfS4ke3BheWxvYWR9LmA7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUoand0LCBvcHRpb25zKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygand0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ1Vuc2VjdXJlZCBKV1QgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgMDogZW5jb2RlZEhlYWRlciwgMTogZW5jb2RlZFBheWxvYWQsIDI6IHNpZ25hdHVyZSwgbGVuZ3RoIH0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKGxlbmd0aCAhPT0gMyB8fCBzaWduYXR1cmUgIT09ICcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBVbnNlY3VyZWQgSldUJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGhlYWRlcjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGhlYWRlciA9IEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoYmFzZTY0dXJsLmRlY29kZShlbmNvZGVkSGVhZGVyKSkpO1xuICAgICAgICAgICAgaWYgKGhlYWRlci5hbGcgIT09ICdub25lJylcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBVbnNlY3VyZWQgSldUJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGF5bG9hZCA9ICgwLCBqd3RfY2xhaW1zX3NldF9qc18xLmRlZmF1bHQpKGhlYWRlciwgYmFzZTY0dXJsLmRlY29kZShlbmNvZGVkUGF5bG9hZCksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4geyBwYXlsb2FkLCBoZWFkZXIgfTtcbiAgICB9XG59XG5leHBvcnRzLlVuc2VjdXJlZEpXVCA9IFVuc2VjdXJlZEpXVDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVuc2VjdXJlZEpXVCIsImJhc2U2NHVybCIsInJlcXVpcmUiLCJidWZmZXJfdXRpbHNfanNfMSIsImVycm9yc19qc18xIiwiand0X2NsYWltc19zZXRfanNfMSIsInByb2R1Y2VfanNfMSIsIlByb2R1Y2VKV1QiLCJlbmNvZGUiLCJoZWFkZXIiLCJKU09OIiwic3RyaW5naWZ5IiwiYWxnIiwicGF5bG9hZCIsIl9wYXlsb2FkIiwiZGVjb2RlIiwiand0Iiwib3B0aW9ucyIsIkpXVEludmFsaWQiLCJlbmNvZGVkSGVhZGVyIiwiZW5jb2RlZFBheWxvYWQiLCJzaWduYXR1cmUiLCJsZW5ndGgiLCJzcGxpdCIsInBhcnNlIiwiZGVjb2RlciIsIkVycm9yIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/unsecured.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/verify.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/verify.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.jwtVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../jws/compact/verify.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtVerify(jwt, key, options) {\n  var _a;\n  const verified = await (0, verify_js_1.compactVerify)(jwt, key, options);\n  if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n    throw new errors_js_1.JWTInvalid('JWTs MUST NOT use unencoded payload');\n  }\n  const payload = (0, jwt_claims_set_js_1.default)(verified.protectedHeader, verified.payload, options);\n  const result = {\n    payload,\n    protectedHeader: verified.protectedHeader\n  };\n  if (typeof key === 'function') {\n    return _objectSpread(_objectSpread({}, result), {}, {\n      key: verified.key\n    });\n  }\n  return result;\n}\nexports.jwtVerify = jwtVerify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFBQSxTQUFBQSxRQUFBQyxDQUFBLEVBQUFDLENBQUEsUUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLElBQUEsQ0FBQUosQ0FBQSxPQUFBRyxNQUFBLENBQUFFLHFCQUFBLFFBQUFDLENBQUEsR0FBQUgsTUFBQSxDQUFBRSxxQkFBQSxDQUFBTCxDQUFBLEdBQUFDLENBQUEsS0FBQUssQ0FBQSxHQUFBQSxDQUFBLENBQUFDLE1BQUEsV0FBQU4sQ0FBQSxXQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFSLENBQUEsRUFBQUMsQ0FBQSxFQUFBUSxVQUFBLE9BQUFQLENBQUEsQ0FBQVEsSUFBQSxDQUFBQyxLQUFBLENBQUFULENBQUEsRUFBQUksQ0FBQSxZQUFBSixDQUFBO0FBQUEsU0FBQVUsY0FBQVosQ0FBQSxhQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQVksU0FBQSxDQUFBQyxNQUFBLEVBQUFiLENBQUEsVUFBQUMsQ0FBQSxXQUFBVyxTQUFBLENBQUFaLENBQUEsSUFBQVksU0FBQSxDQUFBWixDQUFBLFFBQUFBLENBQUEsT0FBQUYsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsT0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFlLGVBQUEsQ0FBQWhCLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLENBQUFELENBQUEsU0FBQUUsTUFBQSxDQUFBYyx5QkFBQSxHQUFBZCxNQUFBLENBQUFlLGdCQUFBLENBQUFsQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWMseUJBQUEsQ0FBQWYsQ0FBQSxLQUFBSCxPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxHQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQUUsTUFBQSxDQUFBZ0IsY0FBQSxDQUFBbkIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQU4sQ0FBQSxFQUFBRCxDQUFBLGlCQUFBRCxDQUFBO0FBQUEsU0FBQWdCLGdCQUFBSSxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsS0FBQSxJQUFBRCxHQUFBLEdBQUFFLGNBQUEsQ0FBQUYsR0FBQSxPQUFBQSxHQUFBLElBQUFELEdBQUEsSUFBQWpCLE1BQUEsQ0FBQWdCLGNBQUEsQ0FBQUMsR0FBQSxFQUFBQyxHQUFBLElBQUFDLEtBQUEsRUFBQUEsS0FBQSxFQUFBYixVQUFBLFFBQUFlLFlBQUEsUUFBQUMsUUFBQSxvQkFBQUwsR0FBQSxDQUFBQyxHQUFBLElBQUFDLEtBQUEsV0FBQUYsR0FBQTtBQUFBLFNBQUFHLGVBQUFHLEdBQUEsUUFBQUwsR0FBQSxHQUFBTSxZQUFBLENBQUFELEdBQUEsMkJBQUFMLEdBQUEsZ0JBQUFBLEdBQUEsR0FBQU8sTUFBQSxDQUFBUCxHQUFBO0FBQUEsU0FBQU0sYUFBQUUsS0FBQSxFQUFBQyxJQUFBLGVBQUFELEtBQUEsaUJBQUFBLEtBQUEsa0JBQUFBLEtBQUEsTUFBQUUsSUFBQSxHQUFBRixLQUFBLENBQUFHLE1BQUEsQ0FBQUMsV0FBQSxPQUFBRixJQUFBLEtBQUFHLFNBQUEsUUFBQUMsR0FBQSxHQUFBSixJQUFBLENBQUFLLElBQUEsQ0FBQVAsS0FBQSxFQUFBQyxJQUFBLDJCQUFBSyxHQUFBLHNCQUFBQSxHQUFBLFlBQUFFLFNBQUEsNERBQUFQLElBQUEsZ0JBQUFGLE1BQUEsR0FBQVUsTUFBQSxFQUFBVCxLQUFBO0FBQ2IxQiw4Q0FBNkM7RUFBRW1CLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RGlCLGlCQUFpQixHQUFHLEtBQUssQ0FBQztBQUMxQixNQUFNRSxXQUFXLEdBQUdDLG1CQUFPLENBQUMsc0hBQTBCLENBQUM7QUFDdkQsTUFBTUMsbUJBQW1CLEdBQUdELG1CQUFPLENBQUMsc0hBQTBCLENBQUM7QUFDL0QsTUFBTUUsV0FBVyxHQUFHRixtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELGVBQWVGLFNBQVNBLENBQUNLLEdBQUcsRUFBRXhCLEdBQUcsRUFBRXlCLE9BQU8sRUFBRTtFQUN4QyxJQUFJQyxFQUFFO0VBQ04sTUFBTUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUVQLFdBQVcsQ0FBQ1EsYUFBYSxFQUFFSixHQUFHLEVBQUV4QixHQUFHLEVBQUV5QixPQUFPLENBQUM7RUFDeEUsSUFBSSxDQUFDLENBQUNDLEVBQUUsR0FBR0MsUUFBUSxDQUFDRSxlQUFlLENBQUNDLElBQUksTUFBTSxJQUFJLElBQUlKLEVBQUUsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsRUFBRSxDQUFDSyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUtKLFFBQVEsQ0FBQ0UsZUFBZSxDQUFDRyxHQUFHLEtBQUssS0FBSyxFQUFFO0lBQzFJLE1BQU0sSUFBSVQsV0FBVyxDQUFDVSxVQUFVLENBQUMscUNBQXFDLENBQUM7RUFDM0U7RUFDQSxNQUFNQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLEVBQUVaLG1CQUFtQixDQUFDYSxPQUFPLEVBQUVSLFFBQVEsQ0FBQ0UsZUFBZSxFQUFFRixRQUFRLENBQUNPLE9BQU8sRUFBRVQsT0FBTyxDQUFDO0VBQ3JHLE1BQU1XLE1BQU0sR0FBRztJQUFFRixPQUFPO0lBQUVMLGVBQWUsRUFBRUYsUUFBUSxDQUFDRTtFQUFnQixDQUFDO0VBQ3JFLElBQUksT0FBTzdCLEdBQUcsS0FBSyxVQUFVLEVBQUU7SUFDM0IsT0FBQVQsYUFBQSxDQUFBQSxhQUFBLEtBQVk2QyxNQUFNO01BQUVwQyxHQUFHLEVBQUUyQixRQUFRLENBQUMzQjtJQUFHO0VBQ3pDO0VBQ0EsT0FBT29DLE1BQU07QUFDakI7QUFDQWxCLGlCQUFpQixHQUFHQyxTQUFTIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3QvdmVyaWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qd3RWZXJpZnkgPSB2b2lkIDA7XG5jb25zdCB2ZXJpZnlfanNfMSA9IHJlcXVpcmUoXCIuLi9qd3MvY29tcGFjdC92ZXJpZnkuanNcIik7XG5jb25zdCBqd3RfY2xhaW1zX3NldF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9qd3RfY2xhaW1zX3NldC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gand0VmVyaWZ5KGp3dCwga2V5LCBvcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHZlcmlmaWVkID0gYXdhaXQgKDAsIHZlcmlmeV9qc18xLmNvbXBhY3RWZXJpZnkpKGp3dCwga2V5LCBvcHRpb25zKTtcbiAgICBpZiAoKChfYSA9IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlci5jcml0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaW5jbHVkZXMoJ2I2NCcpKSAmJiB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIuYjY0ID09PSBmYWxzZSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBNVVNUIE5PVCB1c2UgdW5lbmNvZGVkIHBheWxvYWQnKTtcbiAgICB9XG4gICAgY29uc3QgcGF5bG9hZCA9ICgwLCBqd3RfY2xhaW1zX3NldF9qc18xLmRlZmF1bHQpKHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciwgdmVyaWZpZWQucGF5bG9hZCwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXI6IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiB2ZXJpZmllZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuand0VmVyaWZ5ID0gand0VmVyaWZ5O1xuIl0sIm5hbWVzIjpbIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwiZXhwb3J0cyIsImp3dFZlcmlmeSIsInZlcmlmeV9qc18xIiwicmVxdWlyZSIsImp3dF9jbGFpbXNfc2V0X2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dCIsIm9wdGlvbnMiLCJfYSIsInZlcmlmaWVkIiwiY29tcGFjdFZlcmlmeSIsInByb3RlY3RlZEhlYWRlciIsImNyaXQiLCJpbmNsdWRlcyIsImI2NCIsIkpXVEludmFsaWQiLCJwYXlsb2FkIiwiZGVmYXVsdCIsInJlc3VsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/jwt/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/export.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/export.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.exportJWK = exports.exportPKCS8 = exports.exportSPKI = void 0;\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst asn1_js_2 = __webpack_require__(/*! ../runtime/asn1.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst key_to_jwk_js_1 = __webpack_require__(/*! ../runtime/key_to_jwk.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\");\nasync function exportSPKI(key) {\n  return (0, asn1_js_1.toSPKI)(key);\n}\nexports.exportSPKI = exportSPKI;\nasync function exportPKCS8(key) {\n  return (0, asn1_js_2.toPKCS8)(key);\n}\nexports.exportPKCS8 = exportPKCS8;\nasync function exportJWK(key) {\n  return (0, key_to_jwk_js_1.default)(key);\n}\nexports.exportJWK = exportJWK;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2V4cG9ydC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLG1CQUFtQixHQUFHQSxrQkFBa0IsR0FBRyxLQUFLLENBQUM7QUFDckUsTUFBTUssU0FBUyxHQUFHQyxtQkFBTyxDQUFDLDBHQUFvQixDQUFDO0FBQy9DLE1BQU1DLFNBQVMsR0FBR0QsbUJBQU8sQ0FBQywwR0FBb0IsQ0FBQztBQUMvQyxNQUFNRSxlQUFlLEdBQUdGLG1CQUFPLENBQUMsc0hBQTBCLENBQUM7QUFDM0QsZUFBZUYsVUFBVUEsQ0FBQ0ssR0FBRyxFQUFFO0VBQzNCLE9BQU8sQ0FBQyxDQUFDLEVBQUVKLFNBQVMsQ0FBQ0ssTUFBTSxFQUFFRCxHQUFHLENBQUM7QUFDckM7QUFDQVQsa0JBQWtCLEdBQUdJLFVBQVU7QUFDL0IsZUFBZUQsV0FBV0EsQ0FBQ00sR0FBRyxFQUFFO0VBQzVCLE9BQU8sQ0FBQyxDQUFDLEVBQUVGLFNBQVMsQ0FBQ0ksT0FBTyxFQUFFRixHQUFHLENBQUM7QUFDdEM7QUFDQVQsbUJBQW1CLEdBQUdHLFdBQVc7QUFDakMsZUFBZUQsU0FBU0EsQ0FBQ08sR0FBRyxFQUFFO0VBQzFCLE9BQU8sQ0FBQyxDQUFDLEVBQUVELGVBQWUsQ0FBQ0ksT0FBTyxFQUFFSCxHQUFHLENBQUM7QUFDNUM7QUFDQVQsaUJBQWlCLEdBQUdFLFNBQVMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9leHBvcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmV4cG9ydEpXSyA9IGV4cG9ydHMuZXhwb3J0UEtDUzggPSBleHBvcnRzLmV4cG9ydFNQS0kgPSB2b2lkIDA7XG5jb25zdCBhc24xX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9hc24xLmpzXCIpO1xuY29uc3QgYXNuMV9qc18yID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYXNuMS5qc1wiKTtcbmNvbnN0IGtleV90b19qd2tfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2tleV90b19qd2suanNcIik7XG5hc3luYyBmdW5jdGlvbiBleHBvcnRTUEtJKGtleSkge1xuICAgIHJldHVybiAoMCwgYXNuMV9qc18xLnRvU1BLSSkoa2V5KTtcbn1cbmV4cG9ydHMuZXhwb3J0U1BLSSA9IGV4cG9ydFNQS0k7XG5hc3luYyBmdW5jdGlvbiBleHBvcnRQS0NTOChrZXkpIHtcbiAgICByZXR1cm4gKDAsIGFzbjFfanNfMi50b1BLQ1M4KShrZXkpO1xufVxuZXhwb3J0cy5leHBvcnRQS0NTOCA9IGV4cG9ydFBLQ1M4O1xuYXN5bmMgZnVuY3Rpb24gZXhwb3J0SldLKGtleSkge1xuICAgIHJldHVybiAoMCwga2V5X3RvX2p3a19qc18xLmRlZmF1bHQpKGtleSk7XG59XG5leHBvcnRzLmV4cG9ydEpXSyA9IGV4cG9ydEpXSztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImV4cG9ydEpXSyIsImV4cG9ydFBLQ1M4IiwiZXhwb3J0U1BLSSIsImFzbjFfanNfMSIsInJlcXVpcmUiLCJhc24xX2pzXzIiLCJrZXlfdG9fandrX2pzXzEiLCJrZXkiLCJ0b1NQS0kiLCJ0b1BLQ1M4IiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/export.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_key_pair.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_key_pair.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateKeyPair = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateKeyPair(alg, options) {\n  return (0, generate_js_1.generateKeyPair)(alg, options);\n}\nexports.generateKeyPair = generateKeyPair;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2dlbmVyYXRlX2tleV9wYWlyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBRyxLQUFLLENBQUM7QUFDaEMsTUFBTUcsYUFBYSxHQUFHQyxtQkFBTyxDQUFDLGtIQUF3QixDQUFDO0FBQ3ZELGVBQWVGLGVBQWVBLENBQUNHLEdBQUcsRUFBRUMsT0FBTyxFQUFFO0VBQ3pDLE9BQU8sQ0FBQyxDQUFDLEVBQUVILGFBQWEsQ0FBQ0QsZUFBZSxFQUFFRyxHQUFHLEVBQUVDLE9BQU8sQ0FBQztBQUMzRDtBQUNBTix1QkFBdUIsR0FBR0UsZUFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2dlbmVyYXRlX2tleV9wYWlyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZUtleVBhaXIgPSB2b2lkIDA7XG5jb25zdCBnZW5lcmF0ZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZ2VuZXJhdGUuanNcIik7XG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUtleVBhaXIoYWxnLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuICgwLCBnZW5lcmF0ZV9qc18xLmdlbmVyYXRlS2V5UGFpcikoYWxnLCBvcHRpb25zKTtcbn1cbmV4cG9ydHMuZ2VuZXJhdGVLZXlQYWlyID0gZ2VuZXJhdGVLZXlQYWlyO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhdGVLZXlQYWlyIiwiZ2VuZXJhdGVfanNfMSIsInJlcXVpcmUiLCJhbGciLCJvcHRpb25zIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_key_pair.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_secret.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_secret.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateSecret = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateSecret(alg, options) {\n  return (0, generate_js_1.generateSecret)(alg, options);\n}\nexports.generateSecret = generateSecret;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2dlbmVyYXRlX3NlY3JldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsc0JBQXNCLEdBQUcsS0FBSyxDQUFDO0FBQy9CLE1BQU1HLGFBQWEsR0FBR0MsbUJBQU8sQ0FBQyxrSEFBd0IsQ0FBQztBQUN2RCxlQUFlRixjQUFjQSxDQUFDRyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtFQUN4QyxPQUFPLENBQUMsQ0FBQyxFQUFFSCxhQUFhLENBQUNELGNBQWMsRUFBRUcsR0FBRyxFQUFFQyxPQUFPLENBQUM7QUFDMUQ7QUFDQU4sc0JBQXNCLEdBQUdFLGNBQWMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9zZWNyZXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYXRlU2VjcmV0ID0gdm9pZCAwO1xuY29uc3QgZ2VuZXJhdGVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2dlbmVyYXRlLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVTZWNyZXQoYWxnLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuICgwLCBnZW5lcmF0ZV9qc18xLmdlbmVyYXRlU2VjcmV0KShhbGcsIG9wdGlvbnMpO1xufVxuZXhwb3J0cy5nZW5lcmF0ZVNlY3JldCA9IGdlbmVyYXRlU2VjcmV0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhdGVTZWNyZXQiLCJnZW5lcmF0ZV9qc18xIiwicmVxdWlyZSIsImFsZyIsIm9wdGlvbnMiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/generate_secret.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.importJWK = exports.importPKCS8 = exports.importX509 = exports.importSPKI = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst jwk_to_key_js_1 = __webpack_require__(/*! ../runtime/jwk_to_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function importSPKI(spki, alg, options) {\n  if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n    throw new TypeError('\"spki\" must be SPKI formatted string');\n  }\n  return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importSPKI = importSPKI;\nasync function importX509(x509, alg, options) {\n  if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n    throw new TypeError('\"x509\" must be X.509 formatted string');\n  }\n  return (0, asn1_js_1.fromX509)(x509, alg, options);\n}\nexports.importX509 = importX509;\nasync function importPKCS8(pkcs8, alg, options) {\n  if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n    throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n  }\n  return (0, asn1_js_1.fromPKCS8)(pkcs8, alg, options);\n}\nexports.importPKCS8 = importPKCS8;\nasync function importJWK(jwk, alg, octAsKeyObject) {\n  var _a;\n  if (!(0, is_object_js_1.default)(jwk)) {\n    throw new TypeError('JWK must be an object');\n  }\n  alg || (alg = jwk.alg);\n  switch (jwk.kty) {\n    case 'oct':\n      if (typeof jwk.k !== 'string' || !jwk.k) {\n        throw new TypeError('missing \"k\" (Key Value) Parameter value');\n      }\n      octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;\n      if (octAsKeyObject) {\n        return (0, jwk_to_key_js_1.default)(_objectSpread(_objectSpread({}, jwk), {}, {\n          alg,\n          ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false\n        }));\n      }\n      return (0, base64url_js_1.decode)(jwk.k);\n    case 'RSA':\n      if (jwk.oth !== undefined) {\n        throw new errors_js_1.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n      }\n    case 'EC':\n    case 'OKP':\n      return (0, jwk_to_key_js_1.default)(_objectSpread(_objectSpread({}, jwk), {}, {\n        alg\n      }));\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n  }\n}\nexports.importJWK = importJWK;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../runtime/encrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../runtime/decrypt.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nasync function wrap(alg, key, cek, iv) {\n  const jweAlgorithm = alg.slice(0, 7);\n  iv || (iv = (0, iv_js_1.default)(jweAlgorithm));\n  const {\n    ciphertext: encryptedKey,\n    tag\n  } = await (0, encrypt_js_1.default)(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n  return {\n    encryptedKey,\n    iv: (0, base64url_js_1.encode)(iv),\n    tag: (0, base64url_js_1.encode)(tag)\n  };\n}\nexports.wrap = wrap;\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n  const jweAlgorithm = alg.slice(0, 7);\n  return (0, decrypt_js_1.default)(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\nexports.unwrap = unwrap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Flc2djbWt3LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxjQUFjLEdBQUdBLFlBQVksR0FBRyxLQUFLLENBQUM7QUFDdEMsTUFBTUksWUFBWSxHQUFHQyxtQkFBTyxDQUFDLGdIQUF1QixDQUFDO0FBQ3JELE1BQU1DLFlBQVksR0FBR0QsbUJBQU8sQ0FBQyxnSEFBdUIsQ0FBQztBQUNyRCxNQUFNRSxPQUFPLEdBQUdGLG1CQUFPLENBQUMseUZBQVMsQ0FBQztBQUNsQyxNQUFNRyxjQUFjLEdBQUdILG1CQUFPLENBQUMsb0hBQXlCLENBQUM7QUFDekQsZUFBZUYsSUFBSUEsQ0FBQ00sR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsRUFBRSxFQUFFO0VBQ25DLE1BQU1DLFlBQVksR0FBR0osR0FBRyxDQUFDSyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNwQ0YsRUFBRSxLQUFLQSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUVMLE9BQU8sQ0FBQ1EsT0FBTyxFQUFFRixZQUFZLENBQUMsQ0FBQztFQUMvQyxNQUFNO0lBQUVHLFVBQVUsRUFBRUMsWUFBWTtJQUFFQztFQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxFQUFFZCxZQUFZLENBQUNXLE9BQU8sRUFBRUYsWUFBWSxFQUFFRixHQUFHLEVBQUVELEdBQUcsRUFBRUUsRUFBRSxFQUFFLElBQUlPLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUN4SCxPQUFPO0lBQUVGLFlBQVk7SUFBRUwsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFSixjQUFjLENBQUNZLE1BQU0sRUFBRVIsRUFBRSxDQUFDO0lBQUVNLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRVYsY0FBYyxDQUFDWSxNQUFNLEVBQUVGLEdBQUc7RUFBRSxDQUFDO0FBQ3JHO0FBQ0FsQixZQUFZLEdBQUdHLElBQUk7QUFDbkIsZUFBZUQsTUFBTUEsQ0FBQ08sR0FBRyxFQUFFQyxHQUFHLEVBQUVPLFlBQVksRUFBRUwsRUFBRSxFQUFFTSxHQUFHLEVBQUU7RUFDbkQsTUFBTUwsWUFBWSxHQUFHSixHQUFHLENBQUNLLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0VBQ3BDLE9BQU8sQ0FBQyxDQUFDLEVBQUVSLFlBQVksQ0FBQ1MsT0FBTyxFQUFFRixZQUFZLEVBQUVILEdBQUcsRUFBRU8sWUFBWSxFQUFFTCxFQUFFLEVBQUVNLEdBQUcsRUFBRSxJQUFJQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakc7QUFDQW5CLGNBQWMsR0FBR0UsTUFBTSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Flc2djbWt3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51bndyYXAgPSBleHBvcnRzLndyYXAgPSB2b2lkIDA7XG5jb25zdCBlbmNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9lbmNyeXB0LmpzXCIpO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZGVjcnlwdC5qc1wiKTtcbmNvbnN0IGl2X2pzXzEgPSByZXF1aXJlKFwiLi9pdi5qc1wiKTtcbmNvbnN0IGJhc2U2NHVybF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gd3JhcChhbGcsIGtleSwgY2VrLCBpdikge1xuICAgIGNvbnN0IGp3ZUFsZ29yaXRobSA9IGFsZy5zbGljZSgwLCA3KTtcbiAgICBpdiB8fCAoaXYgPSAoMCwgaXZfanNfMS5kZWZhdWx0KShqd2VBbGdvcml0aG0pKTtcbiAgICBjb25zdCB7IGNpcGhlcnRleHQ6IGVuY3J5cHRlZEtleSwgdGFnIH0gPSBhd2FpdCAoMCwgZW5jcnlwdF9qc18xLmRlZmF1bHQpKGp3ZUFsZ29yaXRobSwgY2VrLCBrZXksIGl2LCBuZXcgVWludDhBcnJheSgwKSk7XG4gICAgcmV0dXJuIHsgZW5jcnlwdGVkS2V5LCBpdjogKDAsIGJhc2U2NHVybF9qc18xLmVuY29kZSkoaXYpLCB0YWc6ICgwLCBiYXNlNjR1cmxfanNfMS5lbmNvZGUpKHRhZykgfTtcbn1cbmV4cG9ydHMud3JhcCA9IHdyYXA7XG5hc3luYyBmdW5jdGlvbiB1bndyYXAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSwgaXYsIHRhZykge1xuICAgIGNvbnN0IGp3ZUFsZ29yaXRobSA9IGFsZy5zbGljZSgwLCA3KTtcbiAgICByZXR1cm4gKDAsIGRlY3J5cHRfanNfMS5kZWZhdWx0KShqd2VBbGdvcml0aG0sIGtleSwgZW5jcnlwdGVkS2V5LCBpdiwgdGFnLCBuZXcgVWludDhBcnJheSgwKSk7XG59XG5leHBvcnRzLnVud3JhcCA9IHVud3JhcDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVud3JhcCIsIndyYXAiLCJlbmNyeXB0X2pzXzEiLCJyZXF1aXJlIiwiZGVjcnlwdF9qc18xIiwiaXZfanNfMSIsImJhc2U2NHVybF9qc18xIiwiYWxnIiwia2V5IiwiY2VrIiwiaXYiLCJqd2VBbGdvcml0aG0iLCJzbGljZSIsImRlZmF1bHQiLCJjaXBoZXJ0ZXh0IiwiZW5jcnlwdGVkS2V5IiwidGFnIiwiVWludDhBcnJheSIsImVuY29kZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.concatKdf = exports.lengthAndInput = exports.uint32be = exports.uint64be = exports.p2s = exports.concat = exports.decoder = exports.encoder = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/digest.js\");\nexports.encoder = new TextEncoder();\nexports.decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n  const size = buffers.reduce((acc, {\n    length\n  }) => acc + length, 0);\n  const buf = new Uint8Array(size);\n  let i = 0;\n  buffers.forEach(buffer => {\n    buf.set(buffer, i);\n    i += buffer.length;\n  });\n  return buf;\n}\nexports.concat = concat;\nfunction p2s(alg, p2sInput) {\n  return concat(exports.encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nexports.p2s = p2s;\nfunction writeUInt32BE(buf, value, offset) {\n  if (value < 0 || value >= MAX_INT32) {\n    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n  }\n  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n  const high = Math.floor(value / MAX_INT32);\n  const low = value % MAX_INT32;\n  const buf = new Uint8Array(8);\n  writeUInt32BE(buf, high, 0);\n  writeUInt32BE(buf, low, 4);\n  return buf;\n}\nexports.uint64be = uint64be;\nfunction uint32be(value) {\n  const buf = new Uint8Array(4);\n  writeUInt32BE(buf, value);\n  return buf;\n}\nexports.uint32be = uint32be;\nfunction lengthAndInput(input) {\n  return concat(uint32be(input.length), input);\n}\nexports.lengthAndInput = lengthAndInput;\nasync function concatKdf(secret, bits, value) {\n  const iterations = Math.ceil((bits >> 3) / 32);\n  const res = new Uint8Array(iterations * 32);\n  for (let iter = 0; iter < iterations; iter++) {\n    const buf = new Uint8Array(4 + secret.length + value.length);\n    buf.set(uint32be(iter + 1));\n    buf.set(secret, 4);\n    buf.set(value, 4 + secret.length);\n    res.set(await (0, digest_js_1.default)('sha256', buf), iter * 32);\n  }\n  return res.slice(0, bits >> 3);\n}\nexports.concatKdf = concatKdf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2J1ZmZlcl91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLHNCQUFzQixHQUFHQSxnQkFBZ0IsR0FBR0EsZ0JBQWdCLEdBQUdBLFdBQVcsR0FBR0EsY0FBYyxHQUFHQSxlQUFlLEdBQUdBLGVBQWUsR0FBRyxLQUFLLENBQUM7QUFDNUosTUFBTVUsV0FBVyxHQUFHQyxtQkFBTyxDQUFDLDhHQUFzQixDQUFDO0FBQ25EWCxlQUFlLEdBQUcsSUFBSVksV0FBVyxDQUFDLENBQUM7QUFDbkNaLGVBQWUsR0FBRyxJQUFJYSxXQUFXLENBQUMsQ0FBQztBQUNuQyxNQUFNQyxTQUFTLEdBQUcsQ0FBQyxJQUFJLEVBQUU7QUFDekIsU0FBU1AsTUFBTUEsQ0FBQyxHQUFHUSxPQUFPLEVBQUU7RUFDeEIsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUNFLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLEVBQUU7SUFBRUM7RUFBTyxDQUFDLEtBQUtELEdBQUcsR0FBR0MsTUFBTSxFQUFFLENBQUMsQ0FBQztFQUNqRSxNQUFNQyxHQUFHLEdBQUcsSUFBSUMsVUFBVSxDQUFDTCxJQUFJLENBQUM7RUFDaEMsSUFBSU0sQ0FBQyxHQUFHLENBQUM7RUFDVFAsT0FBTyxDQUFDUSxPQUFPLENBQUVDLE1BQU0sSUFBSztJQUN4QkosR0FBRyxDQUFDSyxHQUFHLENBQUNELE1BQU0sRUFBRUYsQ0FBQyxDQUFDO0lBQ2xCQSxDQUFDLElBQUlFLE1BQU0sQ0FBQ0wsTUFBTTtFQUN0QixDQUFDLENBQUM7RUFDRixPQUFPQyxHQUFHO0FBQ2Q7QUFDQXBCLGNBQWMsR0FBR08sTUFBTTtBQUN2QixTQUFTRCxHQUFHQSxDQUFDb0IsR0FBRyxFQUFFQyxRQUFRLEVBQUU7RUFDeEIsT0FBT3BCLE1BQU0sQ0FBQ1AsT0FBTyxDQUFDUyxPQUFPLENBQUNtQixNQUFNLENBQUNGLEdBQUcsQ0FBQyxFQUFFLElBQUlMLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUVNLFFBQVEsQ0FBQztBQUM3RTtBQUNBM0IsV0FBVyxHQUFHTSxHQUFHO0FBQ2pCLFNBQVN1QixhQUFhQSxDQUFDVCxHQUFHLEVBQUVuQixLQUFLLEVBQUU2QixNQUFNLEVBQUU7RUFDdkMsSUFBSTdCLEtBQUssR0FBRyxDQUFDLElBQUlBLEtBQUssSUFBSWEsU0FBUyxFQUFFO0lBQ2pDLE1BQU0sSUFBSWlCLFVBQVUsQ0FBRSw2QkFBNEJqQixTQUFTLEdBQUcsQ0FBRSxjQUFhYixLQUFNLEVBQUMsQ0FBQztFQUN6RjtFQUNBbUIsR0FBRyxDQUFDSyxHQUFHLENBQUMsQ0FBQ3hCLEtBQUssS0FBSyxFQUFFLEVBQUVBLEtBQUssS0FBSyxFQUFFLEVBQUVBLEtBQUssS0FBSyxDQUFDLEVBQUVBLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRTZCLE1BQU0sQ0FBQztBQUM1RTtBQUNBLFNBQVN6QixRQUFRQSxDQUFDSixLQUFLLEVBQUU7RUFDckIsTUFBTStCLElBQUksR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNqQyxLQUFLLEdBQUdhLFNBQVMsQ0FBQztFQUMxQyxNQUFNcUIsR0FBRyxHQUFHbEMsS0FBSyxHQUFHYSxTQUFTO0VBQzdCLE1BQU1NLEdBQUcsR0FBRyxJQUFJQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0VBQzdCUSxhQUFhLENBQUNULEdBQUcsRUFBRVksSUFBSSxFQUFFLENBQUMsQ0FBQztFQUMzQkgsYUFBYSxDQUFDVCxHQUFHLEVBQUVlLEdBQUcsRUFBRSxDQUFDLENBQUM7RUFDMUIsT0FBT2YsR0FBRztBQUNkO0FBQ0FwQixnQkFBZ0IsR0FBR0ssUUFBUTtBQUMzQixTQUFTRCxRQUFRQSxDQUFDSCxLQUFLLEVBQUU7RUFDckIsTUFBTW1CLEdBQUcsR0FBRyxJQUFJQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0VBQzdCUSxhQUFhLENBQUNULEdBQUcsRUFBRW5CLEtBQUssQ0FBQztFQUN6QixPQUFPbUIsR0FBRztBQUNkO0FBQ0FwQixnQkFBZ0IsR0FBR0ksUUFBUTtBQUMzQixTQUFTRCxjQUFjQSxDQUFDaUMsS0FBSyxFQUFFO0VBQzNCLE9BQU83QixNQUFNLENBQUNILFFBQVEsQ0FBQ2dDLEtBQUssQ0FBQ2pCLE1BQU0sQ0FBQyxFQUFFaUIsS0FBSyxDQUFDO0FBQ2hEO0FBQ0FwQyxzQkFBc0IsR0FBR0csY0FBYztBQUN2QyxlQUFlRCxTQUFTQSxDQUFDbUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVyQyxLQUFLLEVBQUU7RUFDMUMsTUFBTXNDLFVBQVUsR0FBR04sSUFBSSxDQUFDTyxJQUFJLENBQUMsQ0FBQ0YsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7RUFDOUMsTUFBTUcsR0FBRyxHQUFHLElBQUlwQixVQUFVLENBQUNrQixVQUFVLEdBQUcsRUFBRSxDQUFDO0VBQzNDLEtBQUssSUFBSUcsSUFBSSxHQUFHLENBQUMsRUFBRUEsSUFBSSxHQUFHSCxVQUFVLEVBQUVHLElBQUksRUFBRSxFQUFFO0lBQzFDLE1BQU10QixHQUFHLEdBQUcsSUFBSUMsVUFBVSxDQUFDLENBQUMsR0FBR2dCLE1BQU0sQ0FBQ2xCLE1BQU0sR0FBR2xCLEtBQUssQ0FBQ2tCLE1BQU0sQ0FBQztJQUM1REMsR0FBRyxDQUFDSyxHQUFHLENBQUNyQixRQUFRLENBQUNzQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDM0J0QixHQUFHLENBQUNLLEdBQUcsQ0FBQ1ksTUFBTSxFQUFFLENBQUMsQ0FBQztJQUNsQmpCLEdBQUcsQ0FBQ0ssR0FBRyxDQUFDeEIsS0FBSyxFQUFFLENBQUMsR0FBR29DLE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQztJQUNqQ3NCLEdBQUcsQ0FBQ2hCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFZixXQUFXLENBQUNpQyxPQUFPLEVBQUUsUUFBUSxFQUFFdkIsR0FBRyxDQUFDLEVBQUVzQixJQUFJLEdBQUcsRUFBRSxDQUFDO0VBQ3JFO0VBQ0EsT0FBT0QsR0FBRyxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFTixJQUFJLElBQUksQ0FBQyxDQUFDO0FBQ2xDO0FBQ0F0QyxpQkFBaUIsR0FBR0UsU0FBUyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2J1ZmZlcl91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29uY2F0S2RmID0gZXhwb3J0cy5sZW5ndGhBbmRJbnB1dCA9IGV4cG9ydHMudWludDMyYmUgPSBleHBvcnRzLnVpbnQ2NGJlID0gZXhwb3J0cy5wMnMgPSBleHBvcnRzLmNvbmNhdCA9IGV4cG9ydHMuZGVjb2RlciA9IGV4cG9ydHMuZW5jb2RlciA9IHZvaWQgMDtcbmNvbnN0IGRpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZGlnZXN0LmpzXCIpO1xuZXhwb3J0cy5lbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5leHBvcnRzLmRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmNvbnN0IE1BWF9JTlQzMiA9IDIgKiogMzI7XG5mdW5jdGlvbiBjb25jYXQoLi4uYnVmZmVycykge1xuICAgIGNvbnN0IHNpemUgPSBidWZmZXJzLnJlZHVjZSgoYWNjLCB7IGxlbmd0aCB9KSA9PiBhY2MgKyBsZW5ndGgsIDApO1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIGxldCBpID0gMDtcbiAgICBidWZmZXJzLmZvckVhY2goKGJ1ZmZlcikgPT4ge1xuICAgICAgICBidWYuc2V0KGJ1ZmZlciwgaSk7XG4gICAgICAgIGkgKz0gYnVmZmVyLmxlbmd0aDtcbiAgICB9KTtcbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0cy5jb25jYXQgPSBjb25jYXQ7XG5mdW5jdGlvbiBwMnMoYWxnLCBwMnNJbnB1dCkge1xuICAgIHJldHVybiBjb25jYXQoZXhwb3J0cy5lbmNvZGVyLmVuY29kZShhbGcpLCBuZXcgVWludDhBcnJheShbMF0pLCBwMnNJbnB1dCk7XG59XG5leHBvcnRzLnAycyA9IHAycztcbmZ1bmN0aW9uIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgaWYgKHZhbHVlIDwgMCB8fCB2YWx1ZSA+PSBNQVhfSU5UMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoYHZhbHVlIG11c3QgYmUgPj0gMCBhbmQgPD0gJHtNQVhfSU5UMzIgLSAxfS4gUmVjZWl2ZWQgJHt2YWx1ZX1gKTtcbiAgICB9XG4gICAgYnVmLnNldChbdmFsdWUgPj4+IDI0LCB2YWx1ZSA+Pj4gMTYsIHZhbHVlID4+PiA4LCB2YWx1ZSAmIDB4ZmZdLCBvZmZzZXQpO1xufVxuZnVuY3Rpb24gdWludDY0YmUodmFsdWUpIHtcbiAgICBjb25zdCBoaWdoID0gTWF0aC5mbG9vcih2YWx1ZSAvIE1BWF9JTlQzMik7XG4gICAgY29uc3QgbG93ID0gdmFsdWUgJSBNQVhfSU5UMzI7XG4gICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoOCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGhpZ2gsIDApO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCBsb3csIDQpO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnRzLnVpbnQ2NGJlID0gdWludDY0YmU7XG5mdW5jdGlvbiB1aW50MzJiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydHMudWludDMyYmUgPSB1aW50MzJiZTtcbmZ1bmN0aW9uIGxlbmd0aEFuZElucHV0KGlucHV0KSB7XG4gICAgcmV0dXJuIGNvbmNhdCh1aW50MzJiZShpbnB1dC5sZW5ndGgpLCBpbnB1dCk7XG59XG5leHBvcnRzLmxlbmd0aEFuZElucHV0ID0gbGVuZ3RoQW5kSW5wdXQ7XG5hc3luYyBmdW5jdGlvbiBjb25jYXRLZGYoc2VjcmV0LCBiaXRzLCB2YWx1ZSkge1xuICAgIGNvbnN0IGl0ZXJhdGlvbnMgPSBNYXRoLmNlaWwoKGJpdHMgPj4gMykgLyAzMik7XG4gICAgY29uc3QgcmVzID0gbmV3IFVpbnQ4QXJyYXkoaXRlcmF0aW9ucyAqIDMyKTtcbiAgICBmb3IgKGxldCBpdGVyID0gMDsgaXRlciA8IGl0ZXJhdGlvbnM7IGl0ZXIrKykge1xuICAgICAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg0ICsgc2VjcmV0Lmxlbmd0aCArIHZhbHVlLmxlbmd0aCk7XG4gICAgICAgIGJ1Zi5zZXQodWludDMyYmUoaXRlciArIDEpKTtcbiAgICAgICAgYnVmLnNldChzZWNyZXQsIDQpO1xuICAgICAgICBidWYuc2V0KHZhbHVlLCA0ICsgc2VjcmV0Lmxlbmd0aCk7XG4gICAgICAgIHJlcy5zZXQoYXdhaXQgKDAsIGRpZ2VzdF9qc18xLmRlZmF1bHQpKCdzaGEyNTYnLCBidWYpLCBpdGVyICogMzIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLnNsaWNlKDAsIGJpdHMgPj4gMyk7XG59XG5leHBvcnRzLmNvbmNhdEtkZiA9IGNvbmNhdEtkZjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbmNhdEtkZiIsImxlbmd0aEFuZElucHV0IiwidWludDMyYmUiLCJ1aW50NjRiZSIsInAycyIsImNvbmNhdCIsImRlY29kZXIiLCJlbmNvZGVyIiwiZGlnZXN0X2pzXzEiLCJyZXF1aXJlIiwiVGV4dEVuY29kZXIiLCJUZXh0RGVjb2RlciIsIk1BWF9JTlQzMiIsImJ1ZmZlcnMiLCJzaXplIiwicmVkdWNlIiwiYWNjIiwibGVuZ3RoIiwiYnVmIiwiVWludDhBcnJheSIsImkiLCJmb3JFYWNoIiwiYnVmZmVyIiwic2V0IiwiYWxnIiwicDJzSW5wdXQiLCJlbmNvZGUiLCJ3cml0ZVVJbnQzMkJFIiwib2Zmc2V0IiwiUmFuZ2VFcnJvciIsImhpZ2giLCJNYXRoIiwiZmxvb3IiLCJsb3ciLCJpbnB1dCIsInNlY3JldCIsImJpdHMiLCJpdGVyYXRpb25zIiwiY2VpbCIsInJlcyIsIml0ZXIiLCJkZWZhdWx0Iiwic2xpY2UiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n  switch (alg) {\n    case 'A128GCM':\n      return 128;\n    case 'A192GCM':\n      return 192;\n    case 'A256GCM':\n    case 'A128CBC-HS256':\n      return 256;\n    case 'A192CBC-HS384':\n      return 384;\n    case 'A256CBC-HS512':\n      return 512;\n    default:\n      throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n  }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = alg => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Nlay5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0FBQzFCLE1BQU1HLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxNQUFNQyxXQUFXLEdBQUdELG1CQUFPLENBQUMsOEdBQXNCLENBQUM7QUFDbkQsU0FBU0YsU0FBU0EsQ0FBQ0ksR0FBRyxFQUFFO0VBQ3BCLFFBQVFBLEdBQUc7SUFDUCxLQUFLLFNBQVM7TUFDVixPQUFPLEdBQUc7SUFDZCxLQUFLLFNBQVM7TUFDVixPQUFPLEdBQUc7SUFDZCxLQUFLLFNBQVM7SUFDZCxLQUFLLGVBQWU7TUFDaEIsT0FBTyxHQUFHO0lBQ2QsS0FBSyxlQUFlO01BQ2hCLE9BQU8sR0FBRztJQUNkLEtBQUssZUFBZTtNQUNoQixPQUFPLEdBQUc7SUFDZDtNQUNJLE1BQU0sSUFBSUgsV0FBVyxDQUFDSSxnQkFBZ0IsQ0FBRSw4QkFBNkJELEdBQUksRUFBQyxDQUFDO0VBQ25GO0FBQ0o7QUFDQU4saUJBQWlCLEdBQUdFLFNBQVM7QUFDN0JGLGtCQUFlLEdBQUlNLEdBQUcsSUFBSyxDQUFDLENBQUMsRUFBRUQsV0FBVyxDQUFDRyxPQUFPLEVBQUUsSUFBSUMsVUFBVSxDQUFDUCxTQUFTLENBQUNJLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2VrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5iaXRMZW5ndGggPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IHJhbmRvbV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvcmFuZG9tLmpzXCIpO1xuZnVuY3Rpb24gYml0TGVuZ3RoKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICAgICAgcmV0dXJuIDEyODtcbiAgICAgICAgY2FzZSAnQTE5MkdDTSc6XG4gICAgICAgICAgICByZXR1cm4gMTkyO1xuICAgICAgICBjYXNlICdBMjU2R0NNJzpcbiAgICAgICAgY2FzZSAnQTEyOENCQy1IUzI1Nic6XG4gICAgICAgICAgICByZXR1cm4gMjU2O1xuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAzODQ7XG4gICAgICAgIGNhc2UgJ0EyNTZDQkMtSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIDUxMjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBVbnN1cHBvcnRlZCBKV0UgQWxnb3JpdGhtOiAke2FsZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLmJpdExlbmd0aCA9IGJpdExlbmd0aDtcbmV4cG9ydHMuZGVmYXVsdCA9IChhbGcpID0+ICgwLCByYW5kb21fanNfMS5kZWZhdWx0KShuZXcgVWludDhBcnJheShiaXRMZW5ndGgoYWxnKSA+PiAzKSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJiaXRMZW5ndGgiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJyYW5kb21fanNfMSIsImFsZyIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJkZWZhdWx0IiwiVWludDhBcnJheSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_iv_length.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_iv_length.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst checkIvLength = (enc, iv) => {\n  if (iv.length << 3 !== (0, iv_js_1.bitLength)(enc)) {\n    throw new errors_js_1.JWEInvalid('Invalid Initialization Vector length');\n  }\n};\nexports[\"default\"] = checkIvLength;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX2l2X2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXLEdBQUdDLG1CQUFPLENBQUMsd0dBQW1CLENBQUM7QUFDaEQsTUFBTUMsT0FBTyxHQUFHRCxtQkFBTyxDQUFDLHlGQUFTLENBQUM7QUFDbEMsTUFBTUUsYUFBYSxHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLEVBQUUsS0FBSztFQUMvQixJQUFJQSxFQUFFLENBQUNDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUVKLE9BQU8sQ0FBQ0ssU0FBUyxFQUFFSCxHQUFHLENBQUMsRUFBRTtJQUNoRCxNQUFNLElBQUlKLFdBQVcsQ0FBQ1EsVUFBVSxDQUFDLHNDQUFzQyxDQUFDO0VBQzVFO0FBQ0osQ0FBQztBQUNEVixrQkFBZSxHQUFHSyxhQUFhIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2hlY2tfaXZfbGVuZ3RoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpdl9qc18xID0gcmVxdWlyZShcIi4vaXYuanNcIik7XG5jb25zdCBjaGVja0l2TGVuZ3RoID0gKGVuYywgaXYpID0+IHtcbiAgICBpZiAoaXYubGVuZ3RoIDw8IDMgIT09ICgwLCBpdl9qc18xLmJpdExlbmd0aCkoZW5jKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSW52YWxpZCBJbml0aWFsaXphdGlvbiBWZWN0b3IgbGVuZ3RoJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoZWNrSXZMZW5ndGg7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJpdl9qc18xIiwiY2hlY2tJdkxlbmd0aCIsImVuYyIsIml2IiwibGVuZ3RoIiwiYml0TGVuZ3RoIiwiSldFSW52YWxpZCIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_iv_length.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst invalid_key_input_js_1 = __webpack_require__(/*! ./invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ../runtime/is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst symmetricTypeCheck = (alg, key) => {\n  if (key instanceof Uint8Array) return;\n  if (!(0, is_key_like_js_1.default)(key)) {\n    throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types, 'Uint8Array'));\n  }\n  if (key.type !== 'secret') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n  }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n  if (!(0, is_key_like_js_1.default)(key)) {\n    throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types));\n  }\n  if (key.type === 'secret') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n  }\n  if (usage === 'sign' && key.type === 'public') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n  }\n  if (usage === 'decrypt' && key.type === 'public') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n  }\n  if (key.algorithm && usage === 'verify' && key.type === 'private') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n  }\n  if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n    throw new TypeError(`${is_key_like_js_1.types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n  }\n};\nconst checkKeyType = (alg, key, usage) => {\n  const symmetric = alg.startsWith('HS') || alg === 'dir' || alg.startsWith('PBES2') || /^A\\d{3}(?:GCM)?KW$/.test(alg);\n  if (symmetric) {\n    symmetricTypeCheck(alg, key);\n  } else {\n    asymmetricTypeCheck(alg, key, usage);\n  }\n};\nexports[\"default\"] = checkKeyType;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX2tleV90eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLHNCQUFzQixHQUFHQyxtQkFBTyxDQUFDLHVIQUF3QixDQUFDO0FBQ2hFLE1BQU1DLGdCQUFnQixHQUFHRCxtQkFBTyxDQUFDLHdIQUEyQixDQUFDO0FBQzdELE1BQU1FLGtCQUFrQixHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUNyQyxJQUFJQSxHQUFHLFlBQVlDLFVBQVUsRUFDekI7RUFDSixJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVKLGdCQUFnQixDQUFDSyxPQUFPLEVBQUVGLEdBQUcsQ0FBQyxFQUFFO0lBQ3JDLE1BQU0sSUFBSUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFUixzQkFBc0IsQ0FBQ1MsT0FBTyxFQUFFTCxHQUFHLEVBQUVDLEdBQUcsRUFBRSxHQUFHSCxnQkFBZ0IsQ0FBQ1EsS0FBSyxFQUFFLFlBQVksQ0FBQyxDQUFDO0VBQy9HO0VBQ0EsSUFBSUwsR0FBRyxDQUFDTSxJQUFJLEtBQUssUUFBUSxFQUFFO0lBQ3ZCLE1BQU0sSUFBSUgsU0FBUyxDQUFFLEdBQUVOLGdCQUFnQixDQUFDUSxLQUFLLENBQUNFLElBQUksQ0FBQyxNQUFNLENBQUUsOERBQTZELENBQUM7RUFDN0g7QUFDSixDQUFDO0FBQ0QsTUFBTUMsbUJBQW1CLEdBQUdBLENBQUNULEdBQUcsRUFBRUMsR0FBRyxFQUFFUyxLQUFLLEtBQUs7RUFDN0MsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFWixnQkFBZ0IsQ0FBQ0ssT0FBTyxFQUFFRixHQUFHLENBQUMsRUFBRTtJQUNyQyxNQUFNLElBQUlHLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRVIsc0JBQXNCLENBQUNTLE9BQU8sRUFBRUwsR0FBRyxFQUFFQyxHQUFHLEVBQUUsR0FBR0gsZ0JBQWdCLENBQUNRLEtBQUssQ0FBQyxDQUFDO0VBQ2pHO0VBQ0EsSUFBSUwsR0FBRyxDQUFDTSxJQUFJLEtBQUssUUFBUSxFQUFFO0lBQ3ZCLE1BQU0sSUFBSUgsU0FBUyxDQUFFLEdBQUVOLGdCQUFnQixDQUFDUSxLQUFLLENBQUNFLElBQUksQ0FBQyxNQUFNLENBQUUsbUVBQWtFLENBQUM7RUFDbEk7RUFDQSxJQUFJRSxLQUFLLEtBQUssTUFBTSxJQUFJVCxHQUFHLENBQUNNLElBQUksS0FBSyxRQUFRLEVBQUU7SUFDM0MsTUFBTSxJQUFJSCxTQUFTLENBQUUsR0FBRU4sZ0JBQWdCLENBQUNRLEtBQUssQ0FBQ0UsSUFBSSxDQUFDLE1BQU0sQ0FBRSx1RUFBc0UsQ0FBQztFQUN0STtFQUNBLElBQUlFLEtBQUssS0FBSyxTQUFTLElBQUlULEdBQUcsQ0FBQ00sSUFBSSxLQUFLLFFBQVEsRUFBRTtJQUM5QyxNQUFNLElBQUlILFNBQVMsQ0FBRSxHQUFFTixnQkFBZ0IsQ0FBQ1EsS0FBSyxDQUFDRSxJQUFJLENBQUMsTUFBTSxDQUFFLDBFQUF5RSxDQUFDO0VBQ3pJO0VBQ0EsSUFBSVAsR0FBRyxDQUFDVSxTQUFTLElBQUlELEtBQUssS0FBSyxRQUFRLElBQUlULEdBQUcsQ0FBQ00sSUFBSSxLQUFLLFNBQVMsRUFBRTtJQUMvRCxNQUFNLElBQUlILFNBQVMsQ0FBRSxHQUFFTixnQkFBZ0IsQ0FBQ1EsS0FBSyxDQUFDRSxJQUFJLENBQUMsTUFBTSxDQUFFLHdFQUF1RSxDQUFDO0VBQ3ZJO0VBQ0EsSUFBSVAsR0FBRyxDQUFDVSxTQUFTLElBQUlELEtBQUssS0FBSyxTQUFTLElBQUlULEdBQUcsQ0FBQ00sSUFBSSxLQUFLLFNBQVMsRUFBRTtJQUNoRSxNQUFNLElBQUlILFNBQVMsQ0FBRSxHQUFFTixnQkFBZ0IsQ0FBQ1EsS0FBSyxDQUFDRSxJQUFJLENBQUMsTUFBTSxDQUFFLHlFQUF3RSxDQUFDO0VBQ3hJO0FBQ0osQ0FBQztBQUNELE1BQU1JLFlBQVksR0FBR0EsQ0FBQ1osR0FBRyxFQUFFQyxHQUFHLEVBQUVTLEtBQUssS0FBSztFQUN0QyxNQUFNRyxTQUFTLEdBQUdiLEdBQUcsQ0FBQ2MsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUNsQ2QsR0FBRyxLQUFLLEtBQUssSUFDYkEsR0FBRyxDQUFDYyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQ3ZCLG9CQUFvQixDQUFDQyxJQUFJLENBQUNmLEdBQUcsQ0FBQztFQUNsQyxJQUFJYSxTQUFTLEVBQUU7SUFDWGQsa0JBQWtCLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxDQUFDO0VBQ2hDLENBQUMsTUFDSTtJQUNEUSxtQkFBbUIsQ0FBQ1QsR0FBRyxFQUFFQyxHQUFHLEVBQUVTLEtBQUssQ0FBQztFQUN4QztBQUNKLENBQUM7QUFDRGhCLGtCQUFlLEdBQUdrQixZQUFZIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2hlY2tfa2V5X3R5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4vaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBzeW1tZXRyaWNUeXBlQ2hlY2sgPSAoYWxnLCBrZXkpID0+IHtcbiAgICBpZiAoa2V5IGluc3RhbmNlb2YgVWludDhBcnJheSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKDAsIGlzX2tleV9saWtlX2pzXzEuZGVmYXVsdCkoa2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLndpdGhBbGcpKGFsZywga2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzLCAnVWludDhBcnJheScpKTtcbiAgICB9XG4gICAgaWYgKGtleS50eXBlICE9PSAnc2VjcmV0Jykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2lzX2tleV9saWtlX2pzXzEudHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIHN5bW1ldHJpYyBhbGdvcml0aG1zIG11c3QgYmUgb2YgdHlwZSBcInNlY3JldFwiYCk7XG4gICAgfVxufTtcbmNvbnN0IGFzeW1tZXRyaWNUeXBlQ2hlY2sgPSAoYWxnLCBrZXksIHVzYWdlKSA9PiB7XG4gICAgaWYgKCEoMCwgaXNfa2V5X2xpa2VfanNfMS5kZWZhdWx0KShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEud2l0aEFsZykoYWxnLCBrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICB9XG4gICAgaWYgKGtleS50eXBlID09PSAnc2VjcmV0Jykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2lzX2tleV9saWtlX2pzXzEudHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtcyBtdXN0IG5vdCBiZSBvZiB0eXBlIFwic2VjcmV0XCJgKTtcbiAgICB9XG4gICAgaWYgKHVzYWdlID09PSAnc2lnbicgJiYga2V5LnR5cGUgPT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gc2lnbmluZyBtdXN0IGJlIG9mIHR5cGUgXCJwcml2YXRlXCJgKTtcbiAgICB9XG4gICAgaWYgKHVzYWdlID09PSAnZGVjcnlwdCcgJiYga2V5LnR5cGUgPT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gZGVjcnlwdGlvbiBtdXN0IGJlIG9mIHR5cGUgXCJwcml2YXRlXCJgKTtcbiAgICB9XG4gICAgaWYgKGtleS5hbGdvcml0aG0gJiYgdXNhZ2UgPT09ICd2ZXJpZnknICYmIGtleS50eXBlID09PSAncHJpdmF0ZScpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtpc19rZXlfbGlrZV9qc18xLnR5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSB2ZXJpZnlpbmcgbXVzdCBiZSBvZiB0eXBlIFwicHVibGljXCJgKTtcbiAgICB9XG4gICAgaWYgKGtleS5hbGdvcml0aG0gJiYgdXNhZ2UgPT09ICdlbmNyeXB0JyAmJiBrZXkudHlwZSA9PT0gJ3ByaXZhdGUnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gZW5jcnlwdGlvbiBtdXN0IGJlIG9mIHR5cGUgXCJwdWJsaWNcImApO1xuICAgIH1cbn07XG5jb25zdCBjaGVja0tleVR5cGUgPSAoYWxnLCBrZXksIHVzYWdlKSA9PiB7XG4gICAgY29uc3Qgc3ltbWV0cmljID0gYWxnLnN0YXJ0c1dpdGgoJ0hTJykgfHxcbiAgICAgICAgYWxnID09PSAnZGlyJyB8fFxuICAgICAgICBhbGcuc3RhcnRzV2l0aCgnUEJFUzInKSB8fFxuICAgICAgICAvXkFcXGR7M30oPzpHQ00pP0tXJC8udGVzdChhbGcpO1xuICAgIGlmIChzeW1tZXRyaWMpIHtcbiAgICAgICAgc3ltbWV0cmljVHlwZUNoZWNrKGFsZywga2V5KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGFzeW1tZXRyaWNUeXBlQ2hlY2soYWxnLCBrZXksIHVzYWdlKTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hlY2tLZXlUeXBlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaW52YWxpZF9rZXlfaW5wdXRfanNfMSIsInJlcXVpcmUiLCJpc19rZXlfbGlrZV9qc18xIiwic3ltbWV0cmljVHlwZUNoZWNrIiwiYWxnIiwia2V5IiwiVWludDhBcnJheSIsImRlZmF1bHQiLCJUeXBlRXJyb3IiLCJ3aXRoQWxnIiwidHlwZXMiLCJ0eXBlIiwiam9pbiIsImFzeW1tZXRyaWNUeXBlQ2hlY2siLCJ1c2FnZSIsImFsZ29yaXRobSIsImNoZWNrS2V5VHlwZSIsInN5bW1ldHJpYyIsInN0YXJ0c1dpdGgiLCJ0ZXN0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_p2s.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_p2s.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction checkP2s(p2s) {\n  if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n    throw new errors_js_1.JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n  }\n}\nexports[\"default\"] = checkP2s;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX3Aycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXLEdBQUdDLG1CQUFPLENBQUMsd0dBQW1CLENBQUM7QUFDaEQsU0FBU0MsUUFBUUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ25CLElBQUksRUFBRUEsR0FBRyxZQUFZQyxVQUFVLENBQUMsSUFBSUQsR0FBRyxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxFQUFFO0lBQ2hELE1BQU0sSUFBSUwsV0FBVyxDQUFDTSxVQUFVLENBQUMsMkNBQTJDLENBQUM7RUFDakY7QUFDSjtBQUNBUixrQkFBZSxHQUFHSSxRQUFRIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2hlY2tfcDJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiBjaGVja1AycyhwMnMpIHtcbiAgICBpZiAoIShwMnMgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB8fCBwMnMubGVuZ3RoIDwgOCkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnUEJFUzIgU2FsdCBJbnB1dCBtdXN0IGJlIDggb3IgbW9yZSBvY3RldHMnKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja1AycztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsImNoZWNrUDJzIiwicDJzIiwiVWludDhBcnJheSIsImxlbmd0aCIsIkpXRUludmFsaWQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_p2s.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.checkEncCryptoKey = exports.checkSigCryptoKey = void 0;\nfunction unusable(name, prop = 'algorithm.name') {\n  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n  return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n  return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n  switch (alg) {\n    case 'ES256':\n      return 'P-256';\n    case 'ES384':\n      return 'P-384';\n    case 'ES512':\n      return 'P-521';\n    default:\n      throw new Error('unreachable');\n  }\n}\nfunction checkUsage(key, usages) {\n  if (usages.length && !usages.some(expected => key.usages.includes(expected))) {\n    let msg = 'CryptoKey does not support this operation, its usages must include ';\n    if (usages.length > 2) {\n      const last = usages.pop();\n      msg += `one of ${usages.join(', ')}, or ${last}.`;\n    } else if (usages.length === 2) {\n      msg += `one of ${usages[0]} or ${usages[1]}.`;\n    } else {\n      msg += `${usages[0]}.`;\n    }\n    throw new TypeError(msg);\n  }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n  switch (alg) {\n    case 'HS256':\n    case 'HS384':\n    case 'HS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'HMAC')) throw unusable('HMAC');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5')) throw unusable('RSASSA-PKCS1-v1_5');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'PS256':\n    case 'PS384':\n    case 'PS512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSA-PSS')) throw unusable('RSA-PSS');\n        const expected = parseInt(alg.slice(2), 10);\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    case 'EdDSA':\n      {\n        if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n          throw unusable('Ed25519 or Ed448');\n        }\n        break;\n      }\n    case 'ES256':\n    case 'ES384':\n    case 'ES512':\n      {\n        if (!isAlgorithm(key.algorithm, 'ECDSA')) throw unusable('ECDSA');\n        const expected = getNamedCurve(alg);\n        const actual = key.algorithm.namedCurve;\n        if (actual !== expected) throw unusable(expected, 'algorithm.namedCurve');\n        break;\n      }\n    default:\n      throw new TypeError('CryptoKey does not support this operation');\n  }\n  checkUsage(key, usages);\n}\nexports.checkSigCryptoKey = checkSigCryptoKey;\nfunction checkEncCryptoKey(key, alg, ...usages) {\n  switch (alg) {\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      {\n        if (!isAlgorithm(key.algorithm, 'AES-GCM')) throw unusable('AES-GCM');\n        const expected = parseInt(alg.slice(1, 4), 10);\n        const actual = key.algorithm.length;\n        if (actual !== expected) throw unusable(expected, 'algorithm.length');\n        break;\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        if (!isAlgorithm(key.algorithm, 'AES-KW')) throw unusable('AES-KW');\n        const expected = parseInt(alg.slice(1, 4), 10);\n        const actual = key.algorithm.length;\n        if (actual !== expected) throw unusable(expected, 'algorithm.length');\n        break;\n      }\n    case 'ECDH':\n      {\n        switch (key.algorithm.name) {\n          case 'ECDH':\n          case 'X25519':\n          case 'X448':\n            break;\n          default:\n            throw unusable('ECDH, X25519, or X448');\n        }\n        break;\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      if (!isAlgorithm(key.algorithm, 'PBKDF2')) throw unusable('PBKDF2');\n      break;\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        if (!isAlgorithm(key.algorithm, 'RSA-OAEP')) throw unusable('RSA-OAEP');\n        const expected = parseInt(alg.slice(9), 10) || 1;\n        const actual = getHashLength(key.algorithm.hash);\n        if (actual !== expected) throw unusable(`SHA-${expected}`, 'algorithm.hash');\n        break;\n      }\n    default:\n      throw new TypeError('CryptoKey does not support this operation');\n  }\n  checkUsage(key, usages);\n}\nexports.checkEncCryptoKey = checkEncCryptoKey;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/import.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n  (0, check_key_type_js_1.default)(alg, key, 'decrypt');\n  switch (alg) {\n    case 'dir':\n      {\n        if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        return key;\n      }\n    case 'ECDH-ES':\n      if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid('Encountered unexpected JWE Encrypted Key');\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        if (!(0, is_object_js_1.default)(joseHeader.epk)) throw new errors_js_1.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n        if (!ECDH.ecdhAllowed(key)) throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n        const epk = await (0, import_js_1.importJWK)(joseHeader.epk, alg);\n        let partyUInfo;\n        let partyVInfo;\n        if (joseHeader.apu !== undefined) {\n          if (typeof joseHeader.apu !== 'string') throw new errors_js_1.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n          try {\n            partyUInfo = (0, base64url_js_1.decode)(joseHeader.apu);\n          } catch {\n            throw new errors_js_1.JWEInvalid('Failed to base64url decode the apu');\n          }\n        }\n        if (joseHeader.apv !== undefined) {\n          if (typeof joseHeader.apv !== 'string') throw new errors_js_1.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n          try {\n            partyVInfo = (0, base64url_js_1.decode)(joseHeader.apv);\n          } catch {\n            throw new errors_js_1.JWEInvalid('Failed to base64url decode the apv');\n          }\n        }\n        const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n        if (alg === 'ECDH-ES') return sharedSecret;\n        if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n        return (0, aeskw_js_1.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n      }\n    case 'RSA1_5':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n        return (0, rsaes_js_1.decrypt)(alg, key, encryptedKey);\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      {\n        if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.p2c !== 'number') throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n        const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n        if (joseHeader.p2c > p2cLimit) throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n        if (typeof joseHeader.p2s !== 'string') throw new errors_js_1.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n        let p2s;\n        try {\n          p2s = (0, base64url_js_1.decode)(joseHeader.p2s);\n        } catch {\n          throw new errors_js_1.JWEInvalid('Failed to base64url decode the p2s');\n        }\n        return (0, pbes2kw_js_1.decrypt)(alg, key, encryptedKey, joseHeader.p2c, p2s);\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n        return (0, aeskw_js_1.unwrap)(alg, key, encryptedKey);\n      }\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n      {\n        if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid('JWE Encrypted Key missing');\n        if (typeof joseHeader.iv !== 'string') throw new errors_js_1.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n        if (typeof joseHeader.tag !== 'string') throw new errors_js_1.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n        let iv;\n        try {\n          iv = (0, base64url_js_1.decode)(joseHeader.iv);\n        } catch {\n          throw new errors_js_1.JWEInvalid('Failed to base64url decode the iv');\n        }\n        let tag;\n        try {\n          tag = (0, base64url_js_1.decode)(joseHeader.tag);\n        } catch {\n          throw new errors_js_1.JWEInvalid('Failed to base64url decode the tag');\n        }\n        return (0, aesgcmkw_js_1.unwrap)(alg, key, encryptedKey, iv, tag);\n      }\n    default:\n      {\n        throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n      }\n  }\n}\nexports[\"default\"] = decryptKeyManagement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst _excluded = [\"encryptedKey\"],\n  _excluded2 = [\"encryptedKey\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst export_js_1 = __webpack_require__(/*! ../key/export.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/key/export.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n  let encryptedKey;\n  let parameters;\n  let cek;\n  (0, check_key_type_js_1.default)(alg, key, 'encrypt');\n  switch (alg) {\n    case 'dir':\n      {\n        cek = key;\n        break;\n      }\n    case 'ECDH-ES':\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      {\n        if (!ECDH.ecdhAllowed(key)) {\n          throw new errors_js_1.JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n        }\n        const {\n          apu,\n          apv\n        } = providedParameters;\n        let {\n          epk: ephemeralKey\n        } = providedParameters;\n        ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n        const {\n          x,\n          y,\n          crv,\n          kty\n        } = await (0, export_js_1.exportJWK)(ephemeralKey);\n        const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? (0, cek_js_1.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n        parameters = {\n          epk: {\n            x,\n            crv,\n            kty\n          }\n        };\n        if (kty === 'EC') parameters.epk.y = y;\n        if (apu) parameters.apu = (0, base64url_js_1.encode)(apu);\n        if (apv) parameters.apv = (0, base64url_js_1.encode)(apv);\n        if (alg === 'ECDH-ES') {\n          cek = sharedSecret;\n          break;\n        }\n        cek = providedCek || (0, cek_js_1.default)(enc);\n        const kwAlg = alg.slice(-6);\n        encryptedKey = await (0, aeskw_js_1.wrap)(kwAlg, sharedSecret, cek);\n        break;\n      }\n    case 'RSA1_5':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      {\n        cek = providedCek || (0, cek_js_1.default)(enc);\n        encryptedKey = await (0, rsaes_js_1.encrypt)(alg, key, cek);\n        break;\n      }\n    case 'PBES2-HS256+A128KW':\n    case 'PBES2-HS384+A192KW':\n    case 'PBES2-HS512+A256KW':\n      {\n        cek = providedCek || (0, cek_js_1.default)(enc);\n        const {\n          p2c,\n          p2s\n        } = providedParameters;\n        var _await = await (0, pbes2kw_js_1.encrypt)(alg, key, cek, p2c, p2s);\n        ({\n          encryptedKey\n        } = _await);\n        parameters = _objectWithoutProperties(_await, _excluded);\n        _await;\n        break;\n      }\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n      {\n        cek = providedCek || (0, cek_js_1.default)(enc);\n        encryptedKey = await (0, aeskw_js_1.wrap)(alg, key, cek);\n        break;\n      }\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n      {\n        cek = providedCek || (0, cek_js_1.default)(enc);\n        const {\n          iv\n        } = providedParameters;\n        var _await2 = await (0, aesgcmkw_js_1.wrap)(alg, key, cek, iv);\n        ({\n          encryptedKey\n        } = _await2);\n        parameters = _objectWithoutProperties(_await2, _excluded2);\n        _await2;\n        break;\n      }\n    default:\n      {\n        throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n      }\n  }\n  return {\n    cek,\n    encryptedKey,\n    parameters\n  };\n}\nexports[\"default\"] = encryptKeyManagement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/epoch.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/epoch.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = date => Math.floor(date.getTime() / 1000);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Vwb2NoLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBZSxHQUFJRyxJQUFJLElBQUtDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixJQUFJLENBQUNHLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvZXBvY2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSAoZGF0ZSkgPT4gTWF0aC5mbG9vcihkYXRlLmdldFRpbWUoKSAvIDEwMDApO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImRhdGUiLCJNYXRoIiwiZmxvb3IiLCJnZXRUaW1lIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/epoch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.withAlg = void 0;\nfunction message(msg, actual, ...types) {\n  if (types.length > 2) {\n    const last = types.pop();\n    msg += `one of type ${types.join(', ')}, or ${last}.`;\n  } else if (types.length === 2) {\n    msg += `one of type ${types[0]} or ${types[1]}.`;\n  } else {\n    msg += `of type ${types[0]}.`;\n  }\n  if (actual == null) {\n    msg += ` Received ${actual}`;\n  } else if (typeof actual === 'function' && actual.name) {\n    msg += ` Received function ${actual.name}`;\n  } else if (typeof actual === 'object' && actual != null) {\n    if (actual.constructor && actual.constructor.name) {\n      msg += ` Received an instance of ${actual.constructor.name}`;\n    }\n  }\n  return msg;\n}\nexports[\"default\"] = (actual, ...types) => {\n  return message('Key must be ', actual, ...types);\n};\nfunction withAlg(alg, actual, ...types) {\n  return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\nexports.withAlg = withAlg;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2ludmFsaWRfa2V5X2lucHV0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxlQUFlLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFNBQVNHLE9BQU9BLENBQUNDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLEdBQUdDLEtBQUssRUFBRTtFQUNwQyxJQUFJQSxLQUFLLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUU7SUFDbEIsTUFBTUMsSUFBSSxHQUFHRixLQUFLLENBQUNHLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCTCxHQUFHLElBQUssZUFBY0UsS0FBSyxDQUFDSSxJQUFJLENBQUMsSUFBSSxDQUFFLFFBQU9GLElBQUssR0FBRTtFQUN6RCxDQUFDLE1BQ0ksSUFBSUYsS0FBSyxDQUFDQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQ3pCSCxHQUFHLElBQUssZUFBY0UsS0FBSyxDQUFDLENBQUMsQ0FBRSxPQUFNQSxLQUFLLENBQUMsQ0FBQyxDQUFFLEdBQUU7RUFDcEQsQ0FBQyxNQUNJO0lBQ0RGLEdBQUcsSUFBSyxXQUFVRSxLQUFLLENBQUMsQ0FBQyxDQUFFLEdBQUU7RUFDakM7RUFDQSxJQUFJRCxNQUFNLElBQUksSUFBSSxFQUFFO0lBQ2hCRCxHQUFHLElBQUssYUFBWUMsTUFBTyxFQUFDO0VBQ2hDLENBQUMsTUFDSSxJQUFJLE9BQU9BLE1BQU0sS0FBSyxVQUFVLElBQUlBLE1BQU0sQ0FBQ00sSUFBSSxFQUFFO0lBQ2xEUCxHQUFHLElBQUssc0JBQXFCQyxNQUFNLENBQUNNLElBQUssRUFBQztFQUM5QyxDQUFDLE1BQ0ksSUFBSSxPQUFPTixNQUFNLEtBQUssUUFBUSxJQUFJQSxNQUFNLElBQUksSUFBSSxFQUFFO0lBQ25ELElBQUlBLE1BQU0sQ0FBQ08sV0FBVyxJQUFJUCxNQUFNLENBQUNPLFdBQVcsQ0FBQ0QsSUFBSSxFQUFFO01BQy9DUCxHQUFHLElBQUssNEJBQTJCQyxNQUFNLENBQUNPLFdBQVcsQ0FBQ0QsSUFBSyxFQUFDO0lBQ2hFO0VBQ0o7RUFDQSxPQUFPUCxHQUFHO0FBQ2Q7QUFDQUosa0JBQWUsR0FBRyxDQUFDSyxNQUFNLEVBQUUsR0FBR0MsS0FBSyxLQUFLO0VBQ3BDLE9BQU9ILE9BQU8sQ0FBQyxjQUFjLEVBQUVFLE1BQU0sRUFBRSxHQUFHQyxLQUFLLENBQUM7QUFDcEQsQ0FBQztBQUNELFNBQVNKLE9BQU9BLENBQUNZLEdBQUcsRUFBRVQsTUFBTSxFQUFFLEdBQUdDLEtBQUssRUFBRTtFQUNwQyxPQUFPSCxPQUFPLENBQUUsZUFBY1csR0FBSSxxQkFBb0IsRUFBRVQsTUFBTSxFQUFFLEdBQUdDLEtBQUssQ0FBQztBQUM3RTtBQUNBTixlQUFlLEdBQUdFLE9BQU8iLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMud2l0aEFsZyA9IHZvaWQgMDtcbmZ1bmN0aW9uIG1lc3NhZ2UobXNnLCBhY3R1YWwsIC4uLnR5cGVzKSB7XG4gICAgaWYgKHR5cGVzLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgY29uc3QgbGFzdCA9IHR5cGVzLnBvcCgpO1xuICAgICAgICBtc2cgKz0gYG9uZSBvZiB0eXBlICR7dHlwZXMuam9pbignLCAnKX0sIG9yICR7bGFzdH0uYDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIG1zZyArPSBgb25lIG9mIHR5cGUgJHt0eXBlc1swXX0gb3IgJHt0eXBlc1sxXX0uYDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1zZyArPSBgb2YgdHlwZSAke3R5cGVzWzBdfS5gO1xuICAgIH1cbiAgICBpZiAoYWN0dWFsID09IG51bGwpIHtcbiAgICAgICAgbXNnICs9IGAgUmVjZWl2ZWQgJHthY3R1YWx9YDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGFjdHVhbCA9PT0gJ2Z1bmN0aW9uJyAmJiBhY3R1YWwubmFtZSkge1xuICAgICAgICBtc2cgKz0gYCBSZWNlaXZlZCBmdW5jdGlvbiAke2FjdHVhbC5uYW1lfWA7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBhY3R1YWwgPT09ICdvYmplY3QnICYmIGFjdHVhbCAhPSBudWxsKSB7XG4gICAgICAgIGlmIChhY3R1YWwuY29uc3RydWN0b3IgJiYgYWN0dWFsLmNvbnN0cnVjdG9yLm5hbWUpIHtcbiAgICAgICAgICAgIG1zZyArPSBgIFJlY2VpdmVkIGFuIGluc3RhbmNlIG9mICR7YWN0dWFsLmNvbnN0cnVjdG9yLm5hbWV9YDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbXNnO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gKGFjdHVhbCwgLi4udHlwZXMpID0+IHtcbiAgICByZXR1cm4gbWVzc2FnZSgnS2V5IG11c3QgYmUgJywgYWN0dWFsLCAuLi50eXBlcyk7XG59O1xuZnVuY3Rpb24gd2l0aEFsZyhhbGcsIGFjdHVhbCwgLi4udHlwZXMpIHtcbiAgICByZXR1cm4gbWVzc2FnZShgS2V5IGZvciB0aGUgJHthbGd9IGFsZ29yaXRobSBtdXN0IGJlIGAsIGFjdHVhbCwgLi4udHlwZXMpO1xufVxuZXhwb3J0cy53aXRoQWxnID0gd2l0aEFsZztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIndpdGhBbGciLCJtZXNzYWdlIiwibXNnIiwiYWN0dWFsIiwidHlwZXMiLCJsZW5ndGgiLCJsYXN0IiwicG9wIiwiam9pbiIsIm5hbWUiLCJjb25zdHJ1Y3RvciIsImRlZmF1bHQiLCJhbGciXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst isDisjoint = (...headers) => {\n  const sources = headers.filter(Boolean);\n  if (sources.length === 0 || sources.length === 1) {\n    return true;\n  }\n  let acc;\n  for (const header of sources) {\n    const parameters = Object.keys(header);\n    if (!acc || acc.size === 0) {\n      acc = new Set(parameters);\n      continue;\n    }\n    for (const parameter of parameters) {\n      if (acc.has(parameter)) {\n        return false;\n      }\n      acc.add(parameter);\n    }\n  }\n  return true;\n};\nexports[\"default\"] = isDisjoint;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2lzX2Rpc2pvaW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVUsR0FBR0EsQ0FBQyxHQUFHQyxPQUFPLEtBQUs7RUFDL0IsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUNFLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDO0VBQ3ZDLElBQUlGLE9BQU8sQ0FBQ0csTUFBTSxLQUFLLENBQUMsSUFBSUgsT0FBTyxDQUFDRyxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQzlDLE9BQU8sSUFBSTtFQUNmO0VBQ0EsSUFBSUMsR0FBRztFQUNQLEtBQUssTUFBTUMsTUFBTSxJQUFJTCxPQUFPLEVBQUU7SUFDMUIsTUFBTU0sVUFBVSxHQUFHWixNQUFNLENBQUNhLElBQUksQ0FBQ0YsTUFBTSxDQUFDO0lBQ3RDLElBQUksQ0FBQ0QsR0FBRyxJQUFJQSxHQUFHLENBQUNJLElBQUksS0FBSyxDQUFDLEVBQUU7TUFDeEJKLEdBQUcsR0FBRyxJQUFJSyxHQUFHLENBQUNILFVBQVUsQ0FBQztNQUN6QjtJQUNKO0lBQ0EsS0FBSyxNQUFNSSxTQUFTLElBQUlKLFVBQVUsRUFBRTtNQUNoQyxJQUFJRixHQUFHLENBQUNPLEdBQUcsQ0FBQ0QsU0FBUyxDQUFDLEVBQUU7UUFDcEIsT0FBTyxLQUFLO01BQ2hCO01BQ0FOLEdBQUcsQ0FBQ1EsR0FBRyxDQUFDRixTQUFTLENBQUM7SUFDdEI7RUFDSjtFQUNBLE9BQU8sSUFBSTtBQUNmLENBQUM7QUFDRGQsa0JBQWUsR0FBR0UsVUFBVSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2lzX2Rpc2pvaW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaXNEaXNqb2ludCA9ICguLi5oZWFkZXJzKSA9PiB7XG4gICAgY29uc3Qgc291cmNlcyA9IGhlYWRlcnMuZmlsdGVyKEJvb2xlYW4pO1xuICAgIGlmIChzb3VyY2VzLmxlbmd0aCA9PT0gMCB8fCBzb3VyY2VzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IGFjYztcbiAgICBmb3IgKGNvbnN0IGhlYWRlciBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlcnMgPSBPYmplY3Qua2V5cyhoZWFkZXIpO1xuICAgICAgICBpZiAoIWFjYyB8fCBhY2Muc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgYWNjID0gbmV3IFNldChwYXJhbWV0ZXJzKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGlmIChhY2MuaGFzKHBhcmFtZXRlcikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY2MuYWRkKHBhcmFtZXRlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNEaXNqb2ludDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzRGlzam9pbnQiLCJoZWFkZXJzIiwic291cmNlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJsZW5ndGgiLCJhY2MiLCJoZWFkZXIiLCJwYXJhbWV0ZXJzIiwia2V5cyIsInNpemUiLCJTZXQiLCJwYXJhbWV0ZXIiLCJoYXMiLCJhZGQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_disjoint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nfunction isObjectLike(value) {\n  return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n    return false;\n  }\n  if (Object.getPrototypeOf(input) === null) {\n    return true;\n  }\n  let proto = input;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(input) === proto;\n}\nexports[\"default\"] = isObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2lzX29iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RCxTQUFTQyxZQUFZQSxDQUFDRCxLQUFLLEVBQUU7RUFDekIsT0FBTyxPQUFPQSxLQUFLLEtBQUssUUFBUSxJQUFJQSxLQUFLLEtBQUssSUFBSTtBQUN0RDtBQUNBLFNBQVNFLFFBQVFBLENBQUNDLEtBQUssRUFBRTtFQUNyQixJQUFJLENBQUNGLFlBQVksQ0FBQ0UsS0FBSyxDQUFDLElBQUlOLE1BQU0sQ0FBQ08sU0FBUyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQ0gsS0FBSyxDQUFDLEtBQUssaUJBQWlCLEVBQUU7SUFDckYsT0FBTyxLQUFLO0VBQ2hCO0VBQ0EsSUFBSU4sTUFBTSxDQUFDVSxjQUFjLENBQUNKLEtBQUssQ0FBQyxLQUFLLElBQUksRUFBRTtJQUN2QyxPQUFPLElBQUk7RUFDZjtFQUNBLElBQUlLLEtBQUssR0FBR0wsS0FBSztFQUNqQixPQUFPTixNQUFNLENBQUNVLGNBQWMsQ0FBQ0MsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFO0lBQzFDQSxLQUFLLEdBQUdYLE1BQU0sQ0FBQ1UsY0FBYyxDQUFDQyxLQUFLLENBQUM7RUFDeEM7RUFDQSxPQUFPWCxNQUFNLENBQUNVLGNBQWMsQ0FBQ0osS0FBSyxDQUFDLEtBQUtLLEtBQUs7QUFDakQ7QUFDQVQsa0JBQWUsR0FBR0csUUFBUSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2lzX29iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICBpZiAoIWlzT2JqZWN0TGlrZShpbnB1dCkgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IHByb3RvID0gaW5wdXQ7XG4gICAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gcHJvdG87XG59XG5leHBvcnRzLmRlZmF1bHQgPSBpc09iamVjdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzT2JqZWN0TGlrZSIsImlzT2JqZWN0IiwiaW5wdXQiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJnZXRQcm90b3R5cGVPZiIsInByb3RvIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n  switch (alg) {\n    case 'A128GCM':\n    case 'A128GCMKW':\n    case 'A192GCM':\n    case 'A192GCMKW':\n    case 'A256GCM':\n    case 'A256GCMKW':\n      return 96;\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return 128;\n    default:\n      throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n  }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = alg => (0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2l2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDMUIsTUFBTUcsV0FBVyxHQUFHQyxtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELE1BQU1DLFdBQVcsR0FBR0QsbUJBQU8sQ0FBQyw4R0FBc0IsQ0FBQztBQUNuRCxTQUFTRixTQUFTQSxDQUFDSSxHQUFHLEVBQUU7RUFDcEIsUUFBUUEsR0FBRztJQUNQLEtBQUssU0FBUztJQUNkLEtBQUssV0FBVztJQUNoQixLQUFLLFNBQVM7SUFDZCxLQUFLLFdBQVc7SUFDaEIsS0FBSyxTQUFTO0lBQ2QsS0FBSyxXQUFXO01BQ1osT0FBTyxFQUFFO0lBQ2IsS0FBSyxlQUFlO0lBQ3BCLEtBQUssZUFBZTtJQUNwQixLQUFLLGVBQWU7TUFDaEIsT0FBTyxHQUFHO0lBQ2Q7TUFDSSxNQUFNLElBQUlILFdBQVcsQ0FBQ0ksZ0JBQWdCLENBQUUsOEJBQTZCRCxHQUFJLEVBQUMsQ0FBQztFQUNuRjtBQUNKO0FBQ0FOLGlCQUFpQixHQUFHRSxTQUFTO0FBQzdCRixrQkFBZSxHQUFJTSxHQUFHLElBQUssQ0FBQyxDQUFDLEVBQUVELFdBQVcsQ0FBQ0csT0FBTyxFQUFFLElBQUlDLFVBQVUsQ0FBQ1AsU0FBUyxDQUFDSSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2l2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5iaXRMZW5ndGggPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IHJhbmRvbV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvcmFuZG9tLmpzXCIpO1xuZnVuY3Rpb24gYml0TGVuZ3RoKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICBjYXNlICdBMTI4R0NNS1cnOlxuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTUtXJzpcbiAgICAgICAgY2FzZSAnQTI1NkdDTSc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ01LVyc6XG4gICAgICAgICAgICByZXR1cm4gOTY7XG4gICAgICAgIGNhc2UgJ0ExMjhDQkMtSFMyNTYnOlxuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gMTI4O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYFVuc3VwcG9ydGVkIEpXRSBBbGdvcml0aG06ICR7YWxnfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuYml0TGVuZ3RoID0gYml0TGVuZ3RoO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGFsZykgPT4gKDAsIHJhbmRvbV9qc18xLmRlZmF1bHQpKG5ldyBVaW50OEFycmF5KGJpdExlbmd0aChhbGcpID4+IDMpKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJpdExlbmd0aCIsImVycm9yc19qc18xIiwicmVxdWlyZSIsInJhbmRvbV9qc18xIiwiYWxnIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiLCJVaW50OEFycmF5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/iv.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ./buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst epoch_js_1 = __webpack_require__(/*! ./epoch.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst secs_js_1 = __webpack_require__(/*! ./secs.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/secs.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst normalizeTyp = value => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload);\n  }\n  if (Array.isArray(audPayload)) {\n    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n  }\n  return false;\n};\nexports[\"default\"] = (protectedHeader, encodedPayload, options = {}) => {\n  const {\n    typ\n  } = options;\n  if (typ && (typeof protectedHeader.typ !== 'string' || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n    throw new errors_js_1.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n  }\n  let payload;\n  try {\n    payload = JSON.parse(buffer_utils_js_1.decoder.decode(encodedPayload));\n  } catch {}\n  if (!(0, is_object_js_1.default)(payload)) {\n    throw new errors_js_1.JWTInvalid('JWT Claims Set must be a top-level JSON object');\n  }\n  const {\n    requiredClaims = [],\n    issuer,\n    subject,\n    audience,\n    maxTokenAge\n  } = options;\n  if (maxTokenAge !== undefined) requiredClaims.push('iat');\n  if (audience !== undefined) requiredClaims.push('aud');\n  if (subject !== undefined) requiredClaims.push('sub');\n  if (issuer !== undefined) requiredClaims.push('iss');\n  for (const claim of new Set(requiredClaims.reverse())) {\n    if (!(claim in payload)) {\n      throw new errors_js_1.JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n    }\n  }\n  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n    throw new errors_js_1.JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n  }\n  if (subject && payload.sub !== subject) {\n    throw new errors_js_1.JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n  }\n  if (audience && !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new errors_js_1.JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n  }\n  let tolerance;\n  switch (typeof options.clockTolerance) {\n    case 'string':\n      tolerance = (0, secs_js_1.default)(options.clockTolerance);\n      break;\n    case 'number':\n      tolerance = options.clockTolerance;\n      break;\n    case 'undefined':\n      tolerance = 0;\n      break;\n    default:\n      throw new TypeError('Invalid clockTolerance option type');\n  }\n  const {\n    currentDate\n  } = options;\n  const now = (0, epoch_js_1.default)(currentDate || new Date());\n  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n    throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n  }\n  if (payload.nbf !== undefined) {\n    if (typeof payload.nbf !== 'number') {\n      throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n    }\n    if (payload.nbf > now + tolerance) {\n      throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n    }\n  }\n  if (payload.exp !== undefined) {\n    if (typeof payload.exp !== 'number') {\n      throw new errors_js_1.JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n    }\n    if (payload.exp <= now - tolerance) {\n      throw new errors_js_1.JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n    }\n  }\n  if (maxTokenAge) {\n    const age = now - payload.iat;\n    const max = typeof maxTokenAge === 'number' ? maxTokenAge : (0, secs_js_1.default)(maxTokenAge);\n    if (age - tolerance > max) {\n      throw new errors_js_1.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n    }\n    if (age < 0 - tolerance) {\n      throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n    }\n  }\n  return payload;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/secs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/secs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexports[\"default\"] = str => {\n  const matched = REGEX.exec(str);\n  if (!matched) {\n    throw new TypeError('Invalid time period format');\n  }\n  const value = parseFloat(matched[1]);\n  const unit = matched[2].toLowerCase();\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      return Math.round(value);\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      return Math.round(value * minute);\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      return Math.round(value * hour);\n    case 'day':\n    case 'days':\n    case 'd':\n      return Math.round(value * day);\n    case 'week':\n    case 'weeks':\n    case 'w':\n      return Math.round(value * week);\n    default:\n      return Math.round(value * year);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL3NlY3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsTUFBTSxHQUFHLEVBQUU7QUFDakIsTUFBTUMsSUFBSSxHQUFHRCxNQUFNLEdBQUcsRUFBRTtBQUN4QixNQUFNRSxHQUFHLEdBQUdELElBQUksR0FBRyxFQUFFO0FBQ3JCLE1BQU1FLElBQUksR0FBR0QsR0FBRyxHQUFHLENBQUM7QUFDcEIsTUFBTUUsSUFBSSxHQUFHRixHQUFHLEdBQUcsTUFBTTtBQUN6QixNQUFNRyxLQUFLLEdBQUcscUdBQXFHO0FBQ25IUCxrQkFBZSxHQUFJUyxHQUFHLElBQUs7RUFDdkIsTUFBTUMsT0FBTyxHQUFHSCxLQUFLLENBQUNJLElBQUksQ0FBQ0YsR0FBRyxDQUFDO0VBQy9CLElBQUksQ0FBQ0MsT0FBTyxFQUFFO0lBQ1YsTUFBTSxJQUFJRSxTQUFTLENBQUMsNEJBQTRCLENBQUM7RUFDckQ7RUFDQSxNQUFNWCxLQUFLLEdBQUdZLFVBQVUsQ0FBQ0gsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ3BDLE1BQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDSyxXQUFXLENBQUMsQ0FBQztFQUNyQyxRQUFRRCxJQUFJO0lBQ1IsS0FBSyxLQUFLO0lBQ1YsS0FBSyxNQUFNO0lBQ1gsS0FBSyxRQUFRO0lBQ2IsS0FBSyxTQUFTO0lBQ2QsS0FBSyxHQUFHO01BQ0osT0FBT0UsSUFBSSxDQUFDQyxLQUFLLENBQUNoQixLQUFLLENBQUM7SUFDNUIsS0FBSyxRQUFRO0lBQ2IsS0FBSyxTQUFTO0lBQ2QsS0FBSyxLQUFLO0lBQ1YsS0FBSyxNQUFNO0lBQ1gsS0FBSyxHQUFHO01BQ0osT0FBT2UsSUFBSSxDQUFDQyxLQUFLLENBQUNoQixLQUFLLEdBQUdDLE1BQU0sQ0FBQztJQUNyQyxLQUFLLE1BQU07SUFDWCxLQUFLLE9BQU87SUFDWixLQUFLLElBQUk7SUFDVCxLQUFLLEtBQUs7SUFDVixLQUFLLEdBQUc7TUFDSixPQUFPYyxJQUFJLENBQUNDLEtBQUssQ0FBQ2hCLEtBQUssR0FBR0UsSUFBSSxDQUFDO0lBQ25DLEtBQUssS0FBSztJQUNWLEtBQUssTUFBTTtJQUNYLEtBQUssR0FBRztNQUNKLE9BQU9hLElBQUksQ0FBQ0MsS0FBSyxDQUFDaEIsS0FBSyxHQUFHRyxHQUFHLENBQUM7SUFDbEMsS0FBSyxNQUFNO0lBQ1gsS0FBSyxPQUFPO0lBQ1osS0FBSyxHQUFHO01BQ0osT0FBT1ksSUFBSSxDQUFDQyxLQUFLLENBQUNoQixLQUFLLEdBQUdJLElBQUksQ0FBQztJQUNuQztNQUNJLE9BQU9XLElBQUksQ0FBQ0MsS0FBSyxDQUFDaEIsS0FBSyxHQUFHSyxJQUFJLENBQUM7RUFDdkM7QUFDSixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvc2Vjcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IG1pbnV0ZSA9IDYwO1xuY29uc3QgaG91ciA9IG1pbnV0ZSAqIDYwO1xuY29uc3QgZGF5ID0gaG91ciAqIDI0O1xuY29uc3Qgd2VlayA9IGRheSAqIDc7XG5jb25zdCB5ZWFyID0gZGF5ICogMzY1LjI1O1xuY29uc3QgUkVHRVggPSAvXihcXGQrfFxcZCtcXC5cXGQrKSA/KHNlY29uZHM/fHNlY3M/fHN8bWludXRlcz98bWlucz98bXxob3Vycz98aHJzP3xofGRheXM/fGR8d2Vla3M/fHd8eWVhcnM/fHlycz98eSkkL2k7XG5leHBvcnRzLmRlZmF1bHQgPSAoc3RyKSA9PiB7XG4gICAgY29uc3QgbWF0Y2hlZCA9IFJFR0VYLmV4ZWMoc3RyKTtcbiAgICBpZiAoIW1hdGNoZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCB0aW1lIHBlcmlvZCBmb3JtYXQnKTtcbiAgICB9XG4gICAgY29uc3QgdmFsdWUgPSBwYXJzZUZsb2F0KG1hdGNoZWRbMV0pO1xuICAgIGNvbnN0IHVuaXQgPSBtYXRjaGVkWzJdLnRvTG93ZXJDYXNlKCk7XG4gICAgc3dpdGNoICh1bml0KSB7XG4gICAgICAgIGNhc2UgJ3NlYyc6XG4gICAgICAgIGNhc2UgJ3NlY3MnOlxuICAgICAgICBjYXNlICdzZWNvbmQnOlxuICAgICAgICBjYXNlICdzZWNvbmRzJzpcbiAgICAgICAgY2FzZSAncyc6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgICAgIGNhc2UgJ21pbnV0ZXMnOlxuICAgICAgICBjYXNlICdtaW4nOlxuICAgICAgICBjYXNlICdtaW5zJzpcbiAgICAgICAgY2FzZSAnbSc6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIG1pbnV0ZSk7XG4gICAgICAgIGNhc2UgJ2hvdXInOlxuICAgICAgICBjYXNlICdob3Vycyc6XG4gICAgICAgIGNhc2UgJ2hyJzpcbiAgICAgICAgY2FzZSAnaHJzJzpcbiAgICAgICAgY2FzZSAnaCc6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIGhvdXIpO1xuICAgICAgICBjYXNlICdkYXknOlxuICAgICAgICBjYXNlICdkYXlzJzpcbiAgICAgICAgY2FzZSAnZCc6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIGRheSk7XG4gICAgICAgIGNhc2UgJ3dlZWsnOlxuICAgICAgICBjYXNlICd3ZWVrcyc6XG4gICAgICAgIGNhc2UgJ3cnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiB3ZWVrKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogeWVhcik7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1pbnV0ZSIsImhvdXIiLCJkYXkiLCJ3ZWVrIiwieWVhciIsIlJFR0VYIiwiZGVmYXVsdCIsInN0ciIsIm1hdGNoZWQiLCJleGVjIiwiVHlwZUVycm9yIiwicGFyc2VGbG9hdCIsInVuaXQiLCJ0b0xvd2VyQ2FzZSIsIk1hdGgiLCJyb3VuZCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/secs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst validateAlgorithms = (option, algorithms) => {\n  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some(s => typeof s !== 'string'))) {\n    throw new TypeError(`\"${option}\" option must be an array of strings`);\n  }\n  if (!algorithms) {\n    return undefined;\n  }\n  return new Set(algorithms);\n};\nexports[\"default\"] = validateAlgorithms;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL3ZhbGlkYXRlX2FsZ29yaXRobXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsa0JBQWtCLEdBQUdBLENBQUNDLE1BQU0sRUFBRUMsVUFBVSxLQUFLO0VBQy9DLElBQUlBLFVBQVUsS0FBS0MsU0FBUyxLQUN2QixDQUFDQyxLQUFLLENBQUNDLE9BQU8sQ0FBQ0gsVUFBVSxDQUFDLElBQUlBLFVBQVUsQ0FBQ0ksSUFBSSxDQUFFQyxDQUFDLElBQUssT0FBT0EsQ0FBQyxLQUFLLFFBQVEsQ0FBQyxDQUFDLEVBQUU7SUFDL0UsTUFBTSxJQUFJQyxTQUFTLENBQUUsSUFBR1AsTUFBTyxzQ0FBcUMsQ0FBQztFQUN6RTtFQUNBLElBQUksQ0FBQ0MsVUFBVSxFQUFFO0lBQ2IsT0FBT0MsU0FBUztFQUNwQjtFQUNBLE9BQU8sSUFBSU0sR0FBRyxDQUFDUCxVQUFVLENBQUM7QUFDOUIsQ0FBQztBQUNESixrQkFBZSxHQUFHRSxrQkFBa0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9hbGdvcml0aG1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdmFsaWRhdGVBbGdvcml0aG1zID0gKG9wdGlvbiwgYWxnb3JpdGhtcykgPT4ge1xuICAgIGlmIChhbGdvcml0aG1zICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgKCFBcnJheS5pc0FycmF5KGFsZ29yaXRobXMpIHx8IGFsZ29yaXRobXMuc29tZSgocykgPT4gdHlwZW9mIHMgIT09ICdzdHJpbmcnKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgXCIke29wdGlvbn1cIiBvcHRpb24gbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzYCk7XG4gICAgfVxuICAgIGlmICghYWxnb3JpdGhtcykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFNldChhbGdvcml0aG1zKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSB2YWxpZGF0ZUFsZ29yaXRobXM7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2YWxpZGF0ZUFsZ29yaXRobXMiLCJvcHRpb24iLCJhbGdvcml0aG1zIiwidW5kZWZpbmVkIiwiQXJyYXkiLCJpc0FycmF5Iiwic29tZSIsInMiLCJUeXBlRXJyb3IiLCJTZXQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n  if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n  }\n  if (!protectedHeader || protectedHeader.crit === undefined) {\n    return new Set();\n  }\n  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some(input => typeof input !== 'string' || input.length === 0)) {\n    throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n  }\n  let recognized;\n  if (recognizedOption !== undefined) {\n    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n  } else {\n    recognized = recognizedDefault;\n  }\n  for (const parameter of protectedHeader.crit) {\n    if (!recognized.has(parameter)) {\n      throw new errors_js_1.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n    }\n    if (joseHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n    } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n      throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n    }\n  }\n  return new Set(protectedHeader.crit);\n}\nexports[\"default\"] = validateCrit;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL3ZhbGlkYXRlX2NyaXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsV0FBVyxHQUFHQyxtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELFNBQVNDLFlBQVlBLENBQUNDLEdBQUcsRUFBRUMsaUJBQWlCLEVBQUVDLGdCQUFnQixFQUFFQyxlQUFlLEVBQUVDLFVBQVUsRUFBRTtFQUN6RixJQUFJQSxVQUFVLENBQUNDLElBQUksS0FBS0MsU0FBUyxJQUFJSCxlQUFlLENBQUNFLElBQUksS0FBS0MsU0FBUyxFQUFFO0lBQ3JFLE1BQU0sSUFBSU4sR0FBRyxDQUFDLGdFQUFnRSxDQUFDO0VBQ25GO0VBQ0EsSUFBSSxDQUFDRyxlQUFlLElBQUlBLGVBQWUsQ0FBQ0UsSUFBSSxLQUFLQyxTQUFTLEVBQUU7SUFDeEQsT0FBTyxJQUFJQyxHQUFHLENBQUMsQ0FBQztFQUNwQjtFQUNBLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLENBQUNOLGVBQWUsQ0FBQ0UsSUFBSSxDQUFDLElBQ3BDRixlQUFlLENBQUNFLElBQUksQ0FBQ0ssTUFBTSxLQUFLLENBQUMsSUFDakNQLGVBQWUsQ0FBQ0UsSUFBSSxDQUFDTSxJQUFJLENBQUVDLEtBQUssSUFBSyxPQUFPQSxLQUFLLEtBQUssUUFBUSxJQUFJQSxLQUFLLENBQUNGLE1BQU0sS0FBSyxDQUFDLENBQUMsRUFBRTtJQUN2RixNQUFNLElBQUlWLEdBQUcsQ0FBQyx1RkFBdUYsQ0FBQztFQUMxRztFQUNBLElBQUlhLFVBQVU7RUFDZCxJQUFJWCxnQkFBZ0IsS0FBS0ksU0FBUyxFQUFFO0lBQ2hDTyxVQUFVLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUMsR0FBR3JCLE1BQU0sQ0FBQ3NCLE9BQU8sQ0FBQ2IsZ0JBQWdCLENBQUMsRUFBRSxHQUFHRCxpQkFBaUIsQ0FBQ2MsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQy9GLENBQUMsTUFDSTtJQUNERixVQUFVLEdBQUdaLGlCQUFpQjtFQUNsQztFQUNBLEtBQUssTUFBTWUsU0FBUyxJQUFJYixlQUFlLENBQUNFLElBQUksRUFBRTtJQUMxQyxJQUFJLENBQUNRLFVBQVUsQ0FBQ0ksR0FBRyxDQUFDRCxTQUFTLENBQUMsRUFBRTtNQUM1QixNQUFNLElBQUluQixXQUFXLENBQUNxQixnQkFBZ0IsQ0FBRSwrQkFBOEJGLFNBQVUscUJBQW9CLENBQUM7SUFDekc7SUFDQSxJQUFJWixVQUFVLENBQUNZLFNBQVMsQ0FBQyxLQUFLVixTQUFTLEVBQUU7TUFDckMsTUFBTSxJQUFJTixHQUFHLENBQUUsK0JBQThCZ0IsU0FBVSxjQUFhLENBQUM7SUFDekUsQ0FBQyxNQUNJLElBQUlILFVBQVUsQ0FBQ00sR0FBRyxDQUFDSCxTQUFTLENBQUMsSUFBSWIsZUFBZSxDQUFDYSxTQUFTLENBQUMsS0FBS1YsU0FBUyxFQUFFO01BQzVFLE1BQU0sSUFBSU4sR0FBRyxDQUFFLCtCQUE4QmdCLFNBQVUsK0JBQThCLENBQUM7SUFDMUY7RUFDSjtFQUNBLE9BQU8sSUFBSVQsR0FBRyxDQUFDSixlQUFlLENBQUNFLElBQUksQ0FBQztBQUN4QztBQUNBVixrQkFBZSxHQUFHSSxZQUFZIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvdmFsaWRhdGVfY3JpdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gdmFsaWRhdGVDcml0KEVyciwgcmVjb2duaXplZERlZmF1bHQsIHJlY29nbml6ZWRPcHRpb24sIHByb3RlY3RlZEhlYWRlciwgam9zZUhlYWRlcikge1xuICAgIGlmIChqb3NlSGVhZGVyLmNyaXQgIT09IHVuZGVmaW5lZCAmJiBwcm90ZWN0ZWRIZWFkZXIuY3JpdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnIoJ1wiY3JpdFwiIChDcml0aWNhbCkgSGVhZGVyIFBhcmFtZXRlciBNVVNUIGJlIGludGVncml0eSBwcm90ZWN0ZWQnKTtcbiAgICB9XG4gICAgaWYgKCFwcm90ZWN0ZWRIZWFkZXIgfHwgcHJvdGVjdGVkSGVhZGVyLmNyaXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbmV3IFNldCgpO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkocHJvdGVjdGVkSGVhZGVyLmNyaXQpIHx8XG4gICAgICAgIHByb3RlY3RlZEhlYWRlci5jcml0Lmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICBwcm90ZWN0ZWRIZWFkZXIuY3JpdC5zb21lKChpbnB1dCkgPT4gdHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJyB8fCBpbnB1dC5sZW5ndGggPT09IDApKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnIoJ1wiY3JpdFwiIChDcml0aWNhbCkgSGVhZGVyIFBhcmFtZXRlciBNVVNUIGJlIGFuIGFycmF5IG9mIG5vbi1lbXB0eSBzdHJpbmdzIHdoZW4gcHJlc2VudCcpO1xuICAgIH1cbiAgICBsZXQgcmVjb2duaXplZDtcbiAgICBpZiAocmVjb2duaXplZE9wdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJlY29nbml6ZWQgPSBuZXcgTWFwKFsuLi5PYmplY3QuZW50cmllcyhyZWNvZ25pemVkT3B0aW9uKSwgLi4ucmVjb2duaXplZERlZmF1bHQuZW50cmllcygpXSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZWNvZ25pemVkID0gcmVjb2duaXplZERlZmF1bHQ7XG4gICAgfVxuICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIHByb3RlY3RlZEhlYWRlci5jcml0KSB7XG4gICAgICAgIGlmICghcmVjb2duaXplZC5oYXMocGFyYW1ldGVyKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYEV4dGVuc2lvbiBIZWFkZXIgUGFyYW1ldGVyIFwiJHtwYXJhbWV0ZXJ9XCIgaXMgbm90IHJlY29nbml6ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoam9zZUhlYWRlcltwYXJhbWV0ZXJdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnIoYEV4dGVuc2lvbiBIZWFkZXIgUGFyYW1ldGVyIFwiJHtwYXJhbWV0ZXJ9XCIgaXMgbWlzc2luZ2ApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlY29nbml6ZWQuZ2V0KHBhcmFtZXRlcikgJiYgcHJvdGVjdGVkSGVhZGVyW3BhcmFtZXRlcl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycihgRXh0ZW5zaW9uIEhlYWRlciBQYXJhbWV0ZXIgXCIke3BhcmFtZXRlcn1cIiBNVVNUIGJlIGludGVncml0eSBwcm90ZWN0ZWRgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IFNldChwcm90ZWN0ZWRIZWFkZXIuY3JpdCk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSB2YWxpZGF0ZUNyaXQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJ2YWxpZGF0ZUNyaXQiLCJFcnIiLCJyZWNvZ25pemVkRGVmYXVsdCIsInJlY29nbml6ZWRPcHRpb24iLCJwcm90ZWN0ZWRIZWFkZXIiLCJqb3NlSGVhZGVyIiwiY3JpdCIsInVuZGVmaW5lZCIsIlNldCIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsInNvbWUiLCJpbnB1dCIsInJlY29nbml6ZWQiLCJNYXAiLCJlbnRyaWVzIiwicGFyYW1ldGVyIiwiaGFzIiwiSk9TRU5vdFN1cHBvcnRlZCIsImdldCIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/validate_crit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction checkKeySize(key, alg) {\n  if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n    throw new TypeError(`Invalid key size for alg: ${alg}`);\n  }\n}\nfunction ensureKeyObject(key, alg, usage) {\n  if ((0, is_key_object_js_1.default)(key)) {\n    return key;\n  }\n  if (key instanceof Uint8Array) {\n    return (0, crypto_1.createSecretKey)(key);\n  }\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, usage);\n    return crypto_1.KeyObject.from(key);\n  }\n  throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst wrap = (alg, key, cek) => {\n  const size = parseInt(alg.slice(1, 4), 10);\n  const algorithm = `aes${size}-wrap`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n  const keyObject = ensureKeyObject(key, alg, 'wrapKey');\n  checkKeySize(keyObject, alg);\n  const cipher = (0, crypto_1.createCipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n  return (0, buffer_utils_js_1.concat)(cipher.update(cek), cipher.final());\n};\nexports.wrap = wrap;\nconst unwrap = (alg, key, encryptedKey) => {\n  const size = parseInt(alg.slice(1, 4), 10);\n  const algorithm = `aes${size}-wrap`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n  const keyObject = ensureKeyObject(key, alg, 'unwrapKey');\n  checkKeySize(keyObject, alg);\n  const cipher = (0, crypto_1.createDecipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n  return (0, buffer_utils_js_1.concat)(cipher.update(encryptedKey), cipher.final());\n};\nexports.unwrap = unwrap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.fromX509 = exports.fromSPKI = exports.fromPKCS8 = exports.toPKCS8 = exports.toSPKI = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst genericExport = (keyType, keyFormat, key) => {\n  let keyObject;\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    if (!key.extractable) {\n      throw new TypeError('CryptoKey is not extractable');\n    }\n    keyObject = crypto_1.KeyObject.from(key);\n  } else if ((0, is_key_object_js_1.default)(key)) {\n    keyObject = key;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n  }\n  if (keyObject.type !== keyType) {\n    throw new TypeError(`key is not a ${keyType} key`);\n  }\n  return keyObject.export({\n    format: 'pem',\n    type: keyFormat\n  });\n};\nconst toSPKI = key => {\n  return genericExport('public', 'spki', key);\n};\nexports.toSPKI = toSPKI;\nconst toPKCS8 = key => {\n  return genericExport('private', 'pkcs8', key);\n};\nexports.toPKCS8 = toPKCS8;\nconst fromPKCS8 = pem => (0, crypto_1.createPrivateKey)({\n  key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n  type: 'pkcs8',\n  format: 'der'\n});\nexports.fromPKCS8 = fromPKCS8;\nconst fromSPKI = pem => (0, crypto_1.createPublicKey)({\n  key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n  type: 'spki',\n  format: 'der'\n});\nexports.fromSPKI = fromSPKI;\nconst fromX509 = pem => (0, crypto_1.createPublicKey)({\n  key: pem,\n  type: 'spki',\n  format: 'pem'\n});\nexports.fromX509 = fromX509;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQkFBZ0IsR0FBR0EsZ0JBQWdCLEdBQUdBLGlCQUFpQixHQUFHQSxlQUFlLEdBQUdBLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDbkcsTUFBTU8sUUFBUSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFRLENBQUM7QUFDbEMsTUFBTUMsUUFBUSxHQUFHRCxtQkFBTyxDQUFDLHNCQUFRLENBQUM7QUFDbEMsTUFBTUUsY0FBYyxHQUFHRixtQkFBTyxDQUFDLDJHQUFnQixDQUFDO0FBQ2hELE1BQU1HLGtCQUFrQixHQUFHSCxtQkFBTyxDQUFDLG1IQUFvQixDQUFDO0FBQ3hELE1BQU1JLHNCQUFzQixHQUFHSixtQkFBTyxDQUFDLDRIQUE2QixDQUFDO0FBQ3JFLE1BQU1LLGdCQUFnQixHQUFHTCxtQkFBTyxDQUFDLCtHQUFrQixDQUFDO0FBQ3BELE1BQU1NLGFBQWEsR0FBR0EsQ0FBQ0MsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsS0FBSztFQUMvQyxJQUFJQyxTQUFTO0VBQ2IsSUFBSSxDQUFDLENBQUMsRUFBRVIsY0FBYyxDQUFDUyxXQUFXLEVBQUVGLEdBQUcsQ0FBQyxFQUFFO0lBQ3RDLElBQUksQ0FBQ0EsR0FBRyxDQUFDRyxXQUFXLEVBQUU7TUFDbEIsTUFBTSxJQUFJQyxTQUFTLENBQUMsOEJBQThCLENBQUM7SUFDdkQ7SUFDQUgsU0FBUyxHQUFHWCxRQUFRLENBQUNlLFNBQVMsQ0FBQ0MsSUFBSSxDQUFDTixHQUFHLENBQUM7RUFDNUMsQ0FBQyxNQUNJLElBQUksQ0FBQyxDQUFDLEVBQUVOLGtCQUFrQixDQUFDYSxPQUFPLEVBQUVQLEdBQUcsQ0FBQyxFQUFFO0lBQzNDQyxTQUFTLEdBQUdELEdBQUc7RUFDbkIsQ0FBQyxNQUNJO0lBQ0QsTUFBTSxJQUFJSSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUVULHNCQUFzQixDQUFDWSxPQUFPLEVBQUVQLEdBQUcsRUFBRSxHQUFHSixnQkFBZ0IsQ0FBQ1ksS0FBSyxDQUFDLENBQUM7RUFDNUY7RUFDQSxJQUFJUCxTQUFTLENBQUNRLElBQUksS0FBS1gsT0FBTyxFQUFFO0lBQzVCLE1BQU0sSUFBSU0sU0FBUyxDQUFFLGdCQUFlTixPQUFRLE1BQUssQ0FBQztFQUN0RDtFQUNBLE9BQU9HLFNBQVMsQ0FBQ1MsTUFBTSxDQUFDO0lBQUVDLE1BQU0sRUFBRSxLQUFLO0lBQUVGLElBQUksRUFBRVY7RUFBVSxDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU1WLE1BQU0sR0FBSVcsR0FBRyxJQUFLO0VBQ3BCLE9BQU9ILGFBQWEsQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFRyxHQUFHLENBQUM7QUFDL0MsQ0FBQztBQUNEakIsY0FBYyxHQUFHTSxNQUFNO0FBQ3ZCLE1BQU1ELE9BQU8sR0FBSVksR0FBRyxJQUFLO0VBQ3JCLE9BQU9ILGFBQWEsQ0FBQyxTQUFTLEVBQUUsT0FBTyxFQUFFRyxHQUFHLENBQUM7QUFDakQsQ0FBQztBQUNEakIsZUFBZSxHQUFHSyxPQUFPO0FBQ3pCLE1BQU1ELFNBQVMsR0FBSXlCLEdBQUcsSUFBSyxDQUFDLENBQUMsRUFBRXRCLFFBQVEsQ0FBQ3VCLGdCQUFnQixFQUFFO0VBQ3REYixHQUFHLEVBQUVSLFFBQVEsQ0FBQ3NCLE1BQU0sQ0FBQ1IsSUFBSSxDQUFDTSxHQUFHLENBQUNHLE9BQU8sQ0FBQyw2Q0FBNkMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUM7RUFDbkdOLElBQUksRUFBRSxPQUFPO0VBQ2JFLE1BQU0sRUFBRTtBQUNaLENBQUMsQ0FBQztBQUNGNUIsaUJBQWlCLEdBQUdJLFNBQVM7QUFDN0IsTUFBTUQsUUFBUSxHQUFJMEIsR0FBRyxJQUFLLENBQUMsQ0FBQyxFQUFFdEIsUUFBUSxDQUFDMEIsZUFBZSxFQUFFO0VBQ3BEaEIsR0FBRyxFQUFFUixRQUFRLENBQUNzQixNQUFNLENBQUNSLElBQUksQ0FBQ00sR0FBRyxDQUFDRyxPQUFPLENBQUMsNENBQTRDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDO0VBQ2xHTixJQUFJLEVBQUUsTUFBTTtFQUNaRSxNQUFNLEVBQUU7QUFDWixDQUFDLENBQUM7QUFDRjVCLGdCQUFnQixHQUFHRyxRQUFRO0FBQzNCLE1BQU1ELFFBQVEsR0FBSTJCLEdBQUcsSUFBSyxDQUFDLENBQUMsRUFBRXRCLFFBQVEsQ0FBQzBCLGVBQWUsRUFBRTtFQUNwRGhCLEdBQUcsRUFBRVksR0FBRztFQUNSSCxJQUFJLEVBQUUsTUFBTTtFQUNaRSxNQUFNLEVBQUU7QUFDWixDQUFDLENBQUM7QUFDRjVCLGdCQUFnQixHQUFHRSxRQUFRIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2FzbjEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21YNTA5ID0gZXhwb3J0cy5mcm9tU1BLSSA9IGV4cG9ydHMuZnJvbVBLQ1M4ID0gZXhwb3J0cy50b1BLQ1M4ID0gZXhwb3J0cy50b1NQS0kgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCB3ZWJjcnlwdG9fanNfMSA9IHJlcXVpcmUoXCIuL3dlYmNyeXB0by5qc1wiKTtcbmNvbnN0IGlzX2tleV9vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9vYmplY3QuanNcIik7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmNvbnN0IGdlbmVyaWNFeHBvcnQgPSAoa2V5VHlwZSwga2V5Rm9ybWF0LCBrZXkpID0+IHtcbiAgICBsZXQga2V5T2JqZWN0O1xuICAgIGlmICgoMCwgd2ViY3J5cHRvX2pzXzEuaXNDcnlwdG9LZXkpKGtleSkpIHtcbiAgICAgICAgaWYgKCFrZXkuZXh0cmFjdGFibGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NyeXB0b0tleSBpcyBub3QgZXh0cmFjdGFibGUnKTtcbiAgICAgICAgfVxuICAgICAgICBrZXlPYmplY3QgPSBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAga2V5T2JqZWN0ID0ga2V5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICB9XG4gICAgaWYgKGtleU9iamVjdC50eXBlICE9PSBrZXlUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYGtleSBpcyBub3QgYSAke2tleVR5cGV9IGtleWApO1xuICAgIH1cbiAgICByZXR1cm4ga2V5T2JqZWN0LmV4cG9ydCh7IGZvcm1hdDogJ3BlbScsIHR5cGU6IGtleUZvcm1hdCB9KTtcbn07XG5jb25zdCB0b1NQS0kgPSAoa2V5KSA9PiB7XG4gICAgcmV0dXJuIGdlbmVyaWNFeHBvcnQoJ3B1YmxpYycsICdzcGtpJywga2V5KTtcbn07XG5leHBvcnRzLnRvU1BLSSA9IHRvU1BLSTtcbmNvbnN0IHRvUEtDUzggPSAoa2V5KSA9PiB7XG4gICAgcmV0dXJuIGdlbmVyaWNFeHBvcnQoJ3ByaXZhdGUnLCAncGtjczgnLCBrZXkpO1xufTtcbmV4cG9ydHMudG9QS0NTOCA9IHRvUEtDUzg7XG5jb25zdCBmcm9tUEtDUzggPSAocGVtKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlUHJpdmF0ZUtleSkoe1xuICAgIGtleTogYnVmZmVyXzEuQnVmZmVyLmZyb20ocGVtLnJlcGxhY2UoLyg/Oi0tLS0tKD86QkVHSU58RU5EKSBQUklWQVRFIEtFWS0tLS0tfFxccykvZywgJycpLCAnYmFzZTY0JyksXG4gICAgdHlwZTogJ3BrY3M4JyxcbiAgICBmb3JtYXQ6ICdkZXInLFxufSk7XG5leHBvcnRzLmZyb21QS0NTOCA9IGZyb21QS0NTODtcbmNvbnN0IGZyb21TUEtJID0gKHBlbSkgPT4gKDAsIGNyeXB0b18xLmNyZWF0ZVB1YmxpY0tleSkoe1xuICAgIGtleTogYnVmZmVyXzEuQnVmZmVyLmZyb20ocGVtLnJlcGxhY2UoLyg/Oi0tLS0tKD86QkVHSU58RU5EKSBQVUJMSUMgS0VZLS0tLS18XFxzKS9nLCAnJyksICdiYXNlNjQnKSxcbiAgICB0eXBlOiAnc3BraScsXG4gICAgZm9ybWF0OiAnZGVyJyxcbn0pO1xuZXhwb3J0cy5mcm9tU1BLSSA9IGZyb21TUEtJO1xuY29uc3QgZnJvbVg1MDkgPSAocGVtKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlUHVibGljS2V5KSh7XG4gICAga2V5OiBwZW0sXG4gICAgdHlwZTogJ3Nwa2knLFxuICAgIGZvcm1hdDogJ3BlbScsXG59KTtcbmV4cG9ydHMuZnJvbVg1MDkgPSBmcm9tWDUwOTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZyb21YNTA5IiwiZnJvbVNQS0kiLCJmcm9tUEtDUzgiLCJ0b1BLQ1M4IiwidG9TUEtJIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiYnVmZmVyXzEiLCJ3ZWJjcnlwdG9fanNfMSIsImlzX2tleV9vYmplY3RfanNfMSIsImludmFsaWRfa2V5X2lucHV0X2pzXzEiLCJpc19rZXlfbGlrZV9qc18xIiwiZ2VuZXJpY0V4cG9ydCIsImtleVR5cGUiLCJrZXlGb3JtYXQiLCJrZXkiLCJrZXlPYmplY3QiLCJpc0NyeXB0b0tleSIsImV4dHJhY3RhYmxlIiwiVHlwZUVycm9yIiwiS2V5T2JqZWN0IiwiZnJvbSIsImRlZmF1bHQiLCJ0eXBlcyIsInR5cGUiLCJleHBvcnQiLCJmb3JtYXQiLCJwZW0iLCJjcmVhdGVQcml2YXRlS2V5IiwiQnVmZmVyIiwicmVwbGFjZSIsImNyZWF0ZVB1YmxpY0tleSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst tagInteger = 0x02;\nconst tagSequence = 0x30;\nclass Asn1SequenceDecoder {\n  constructor(buffer) {\n    if (buffer[0] !== tagSequence) {\n      throw new TypeError();\n    }\n    this.buffer = buffer;\n    this.offset = 1;\n    const len = this.decodeLength();\n    if (len !== buffer.length - this.offset) {\n      throw new TypeError();\n    }\n  }\n  decodeLength() {\n    let length = this.buffer[this.offset++];\n    if (length & 0x80) {\n      const nBytes = length & ~0x80;\n      length = 0;\n      for (let i = 0; i < nBytes; i++) length = length << 8 | this.buffer[this.offset + i];\n      this.offset += nBytes;\n    }\n    return length;\n  }\n  unsignedInteger() {\n    if (this.buffer[this.offset++] !== tagInteger) {\n      throw new TypeError();\n    }\n    let length = this.decodeLength();\n    if (this.buffer[this.offset] === 0) {\n      this.offset++;\n      length--;\n    }\n    const result = this.buffer.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return result;\n  }\n  end() {\n    if (this.offset !== this.buffer.length) {\n      throw new TypeError();\n    }\n  }\n}\nexports[\"default\"] = Asn1SequenceDecoder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xX3NlcXVlbmNlX2RlY29kZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVSxHQUFHLElBQUk7QUFDdkIsTUFBTUMsV0FBVyxHQUFHLElBQUk7QUFDeEIsTUFBTUMsbUJBQW1CLENBQUM7RUFDdEJDLFdBQVdBLENBQUNDLE1BQU0sRUFBRTtJQUNoQixJQUFJQSxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUtILFdBQVcsRUFBRTtNQUMzQixNQUFNLElBQUlJLFNBQVMsQ0FBQyxDQUFDO0lBQ3pCO0lBQ0EsSUFBSSxDQUFDRCxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSSxDQUFDRSxNQUFNLEdBQUcsQ0FBQztJQUNmLE1BQU1DLEdBQUcsR0FBRyxJQUFJLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQy9CLElBQUlELEdBQUcsS0FBS0gsTUFBTSxDQUFDSyxNQUFNLEdBQUcsSUFBSSxDQUFDSCxNQUFNLEVBQUU7TUFDckMsTUFBTSxJQUFJRCxTQUFTLENBQUMsQ0FBQztJQUN6QjtFQUNKO0VBQ0FHLFlBQVlBLENBQUEsRUFBRztJQUNYLElBQUlDLE1BQU0sR0FBRyxJQUFJLENBQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUNFLE1BQU0sRUFBRSxDQUFDO0lBQ3ZDLElBQUlHLE1BQU0sR0FBRyxJQUFJLEVBQUU7TUFDZixNQUFNQyxNQUFNLEdBQUdELE1BQU0sR0FBRyxDQUFDLElBQUk7TUFDN0JBLE1BQU0sR0FBRyxDQUFDO01BQ1YsS0FBSyxJQUFJRSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdELE1BQU0sRUFBRUMsQ0FBQyxFQUFFLEVBQzNCRixNQUFNLEdBQUlBLE1BQU0sSUFBSSxDQUFDLEdBQUksSUFBSSxDQUFDTCxNQUFNLENBQUMsSUFBSSxDQUFDRSxNQUFNLEdBQUdLLENBQUMsQ0FBQztNQUN6RCxJQUFJLENBQUNMLE1BQU0sSUFBSUksTUFBTTtJQUN6QjtJQUNBLE9BQU9ELE1BQU07RUFDakI7RUFDQUcsZUFBZUEsQ0FBQSxFQUFHO0lBQ2QsSUFBSSxJQUFJLENBQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUNFLE1BQU0sRUFBRSxDQUFDLEtBQUtOLFVBQVUsRUFBRTtNQUMzQyxNQUFNLElBQUlLLFNBQVMsQ0FBQyxDQUFDO0lBQ3pCO0lBQ0EsSUFBSUksTUFBTSxHQUFHLElBQUksQ0FBQ0QsWUFBWSxDQUFDLENBQUM7SUFDaEMsSUFBSSxJQUFJLENBQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUNFLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRTtNQUNoQyxJQUFJLENBQUNBLE1BQU0sRUFBRTtNQUNiRyxNQUFNLEVBQUU7SUFDWjtJQUNBLE1BQU1JLE1BQU0sR0FBRyxJQUFJLENBQUNULE1BQU0sQ0FBQ1UsS0FBSyxDQUFDLElBQUksQ0FBQ1IsTUFBTSxFQUFFLElBQUksQ0FBQ0EsTUFBTSxHQUFHRyxNQUFNLENBQUM7SUFDbkUsSUFBSSxDQUFDSCxNQUFNLElBQUlHLE1BQU07SUFDckIsT0FBT0ksTUFBTTtFQUNqQjtFQUNBRSxHQUFHQSxDQUFBLEVBQUc7SUFDRixJQUFJLElBQUksQ0FBQ1QsTUFBTSxLQUFLLElBQUksQ0FBQ0YsTUFBTSxDQUFDSyxNQUFNLEVBQUU7TUFDcEMsTUFBTSxJQUFJSixTQUFTLENBQUMsQ0FBQztJQUN6QjtFQUNKO0FBQ0o7QUFDQVAsa0JBQWUsR0FBR0ksbUJBQW1CIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2FzbjFfc2VxdWVuY2VfZGVjb2Rlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRhZ0ludGVnZXIgPSAweDAyO1xuY29uc3QgdGFnU2VxdWVuY2UgPSAweDMwO1xuY2xhc3MgQXNuMVNlcXVlbmNlRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoYnVmZmVyKSB7XG4gICAgICAgIGlmIChidWZmZXJbMF0gIT09IHRhZ1NlcXVlbmNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMTtcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5kZWNvZGVMZW5ndGgoKTtcbiAgICAgICAgaWYgKGxlbiAhPT0gYnVmZmVyLmxlbmd0aCAtIHRoaXMub2Zmc2V0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlTGVuZ3RoKCkge1xuICAgICAgICBsZXQgbGVuZ3RoID0gdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK107XG4gICAgICAgIGlmIChsZW5ndGggJiAweDgwKSB7XG4gICAgICAgICAgICBjb25zdCBuQnl0ZXMgPSBsZW5ndGggJiB+MHg4MDtcbiAgICAgICAgICAgIGxlbmd0aCA9IDA7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5CeXRlczsgaSsrKVxuICAgICAgICAgICAgICAgIGxlbmd0aCA9IChsZW5ndGggPDwgOCkgfCB0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCArIGldO1xuICAgICAgICAgICAgdGhpcy5vZmZzZXQgKz0gbkJ5dGVzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICAgIHVuc2lnbmVkSW50ZWdlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdICE9PSB0YWdJbnRlZ2VyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGxlbmd0aCA9IHRoaXMuZGVjb2RlTGVuZ3RoKCk7XG4gICAgICAgIGlmICh0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldF0gPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMub2Zmc2V0Kys7XG4gICAgICAgICAgICBsZW5ndGgtLTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmJ1ZmZlci5zbGljZSh0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKyBsZW5ndGgpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBsZW5ndGg7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgaWYgKHRoaXMub2Zmc2V0ICE9PSB0aGlzLmJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEFzbjFTZXF1ZW5jZURlY29kZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0YWdJbnRlZ2VyIiwidGFnU2VxdWVuY2UiLCJBc24xU2VxdWVuY2VEZWNvZGVyIiwiY29uc3RydWN0b3IiLCJidWZmZXIiLCJUeXBlRXJyb3IiLCJvZmZzZXQiLCJsZW4iLCJkZWNvZGVMZW5ndGgiLCJsZW5ndGgiLCJuQnl0ZXMiLCJpIiwidW5zaWduZWRJbnRlZ2VyIiwicmVzdWx0Iiwic2xpY2UiLCJlbmQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst tagInteger = 0x02;\nconst tagBitStr = 0x03;\nconst tagOctStr = 0x04;\nconst tagSequence = 0x30;\nconst bZero = buffer_1.Buffer.from([0x00]);\nconst bTagInteger = buffer_1.Buffer.from([tagInteger]);\nconst bTagBitStr = buffer_1.Buffer.from([tagBitStr]);\nconst bTagSequence = buffer_1.Buffer.from([tagSequence]);\nconst bTagOctStr = buffer_1.Buffer.from([tagOctStr]);\nconst encodeLength = len => {\n  if (len < 128) return buffer_1.Buffer.from([len]);\n  const buffer = buffer_1.Buffer.alloc(5);\n  buffer.writeUInt32BE(len, 1);\n  let offset = 1;\n  while (buffer[offset] === 0) offset++;\n  buffer[offset - 1] = 0x80 | 5 - offset;\n  return buffer.slice(offset - 1);\n};\nconst oids = new Map([['P-256', buffer_1.Buffer.from('06 08 2A 86 48 CE 3D 03 01 07'.replace(/ /g, ''), 'hex')], ['secp256k1', buffer_1.Buffer.from('06 05 2B 81 04 00 0A'.replace(/ /g, ''), 'hex')], ['P-384', buffer_1.Buffer.from('06 05 2B 81 04 00 22'.replace(/ /g, ''), 'hex')], ['P-521', buffer_1.Buffer.from('06 05 2B 81 04 00 23'.replace(/ /g, ''), 'hex')], ['ecPublicKey', buffer_1.Buffer.from('06 07 2A 86 48 CE 3D 02 01'.replace(/ /g, ''), 'hex')], ['X25519', buffer_1.Buffer.from('06 03 2B 65 6E'.replace(/ /g, ''), 'hex')], ['X448', buffer_1.Buffer.from('06 03 2B 65 6F'.replace(/ /g, ''), 'hex')], ['Ed25519', buffer_1.Buffer.from('06 03 2B 65 70'.replace(/ /g, ''), 'hex')], ['Ed448', buffer_1.Buffer.from('06 03 2B 65 71'.replace(/ /g, ''), 'hex')]]);\nclass DumbAsn1Encoder {\n  constructor() {\n    this.length = 0;\n    this.elements = [];\n  }\n  oidFor(oid) {\n    const bOid = oids.get(oid);\n    if (!bOid) {\n      throw new errors_js_1.JOSENotSupported('Invalid or unsupported OID');\n    }\n    this.elements.push(bOid);\n    this.length += bOid.length;\n  }\n  zero() {\n    this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), bZero);\n    this.length += 3;\n  }\n  one() {\n    this.elements.push(bTagInteger, buffer_1.Buffer.from([0x01]), buffer_1.Buffer.from([0x01]));\n    this.length += 3;\n  }\n  unsignedInteger(integer) {\n    if (integer[0] & 0x80) {\n      const len = encodeLength(integer.length + 1);\n      this.elements.push(bTagInteger, len, bZero, integer);\n      this.length += 2 + len.length + integer.length;\n    } else {\n      let i = 0;\n      while (integer[i] === 0 && (integer[i + 1] & 0x80) === 0) i++;\n      const len = encodeLength(integer.length - i);\n      this.elements.push(bTagInteger, encodeLength(integer.length - i), integer.slice(i));\n      this.length += 1 + len.length + integer.length - i;\n    }\n  }\n  octStr(octStr) {\n    const len = encodeLength(octStr.length);\n    this.elements.push(bTagOctStr, encodeLength(octStr.length), octStr);\n    this.length += 1 + len.length + octStr.length;\n  }\n  bitStr(bitS) {\n    const len = encodeLength(bitS.length + 1);\n    this.elements.push(bTagBitStr, encodeLength(bitS.length + 1), bZero, bitS);\n    this.length += 1 + len.length + bitS.length + 1;\n  }\n  add(seq) {\n    this.elements.push(seq);\n    this.length += seq.length;\n  }\n  end(tag = bTagSequence) {\n    const len = encodeLength(this.length);\n    return buffer_1.Buffer.concat([tag, len, ...this.elements], 1 + len.length + this.length);\n  }\n}\nexports[\"default\"] = DumbAsn1Encoder;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xX3NlcXVlbmNlX2VuY29kZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsUUFBUSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFRLENBQUM7QUFDbEMsTUFBTUMsV0FBVyxHQUFHRCxtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELE1BQU1FLFVBQVUsR0FBRyxJQUFJO0FBQ3ZCLE1BQU1DLFNBQVMsR0FBRyxJQUFJO0FBQ3RCLE1BQU1DLFNBQVMsR0FBRyxJQUFJO0FBQ3RCLE1BQU1DLFdBQVcsR0FBRyxJQUFJO0FBQ3hCLE1BQU1DLEtBQUssR0FBR1AsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzFDLE1BQU1DLFdBQVcsR0FBR1YsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDTixVQUFVLENBQUMsQ0FBQztBQUN0RCxNQUFNUSxVQUFVLEdBQUdYLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0wsU0FBUyxDQUFDLENBQUM7QUFDcEQsTUFBTVEsWUFBWSxHQUFHWixRQUFRLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNILFdBQVcsQ0FBQyxDQUFDO0FBQ3hELE1BQU1PLFVBQVUsR0FBR2IsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDSixTQUFTLENBQUMsQ0FBQztBQUNwRCxNQUFNUyxZQUFZLEdBQUlDLEdBQUcsSUFBSztFQUMxQixJQUFJQSxHQUFHLEdBQUcsR0FBRyxFQUNULE9BQU9mLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ00sR0FBRyxDQUFDLENBQUM7RUFDdEMsTUFBTUMsTUFBTSxHQUFHaEIsUUFBUSxDQUFDUSxNQUFNLENBQUNTLEtBQUssQ0FBQyxDQUFDLENBQUM7RUFDdkNELE1BQU0sQ0FBQ0UsYUFBYSxDQUFDSCxHQUFHLEVBQUUsQ0FBQyxDQUFDO0VBQzVCLElBQUlJLE1BQU0sR0FBRyxDQUFDO0VBQ2QsT0FBT0gsTUFBTSxDQUFDRyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQ3ZCQSxNQUFNLEVBQUU7RUFDWkgsTUFBTSxDQUFDRyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFJLENBQUMsR0FBR0EsTUFBTztFQUN4QyxPQUFPSCxNQUFNLENBQUNJLEtBQUssQ0FBQ0QsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBQ0QsTUFBTUUsSUFBSSxHQUFHLElBQUlDLEdBQUcsQ0FBQyxDQUNqQixDQUFDLE9BQU8sRUFBRXRCLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsK0JBQStCLENBQUNjLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFDekYsQ0FBQyxXQUFXLEVBQUV2QixRQUFRLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLHNCQUFzQixDQUFDYyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQ3BGLENBQUMsT0FBTyxFQUFFdkIsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQ2MsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUNoRixDQUFDLE9BQU8sRUFBRXZCLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsc0JBQXNCLENBQUNjLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFDaEYsQ0FBQyxhQUFhLEVBQUV2QixRQUFRLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLDRCQUE0QixDQUFDYyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQzVGLENBQUMsUUFBUSxFQUFFdkIsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQ2MsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUMzRSxDQUFDLE1BQU0sRUFBRXZCLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsZ0JBQWdCLENBQUNjLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsRUFDekUsQ0FBQyxTQUFTLEVBQUV2QixRQUFRLENBQUNRLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLGdCQUFnQixDQUFDYyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQzVFLENBQUMsT0FBTyxFQUFFdkIsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQ2MsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUM3RSxDQUFDO0FBQ0YsTUFBTUMsZUFBZSxDQUFDO0VBQ2xCQyxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLENBQUNDLE1BQU0sR0FBRyxDQUFDO0lBQ2YsSUFBSSxDQUFDQyxRQUFRLEdBQUcsRUFBRTtFQUN0QjtFQUNBQyxNQUFNQSxDQUFDQyxHQUFHLEVBQUU7SUFDUixNQUFNQyxJQUFJLEdBQUdULElBQUksQ0FBQ1UsR0FBRyxDQUFDRixHQUFHLENBQUM7SUFDMUIsSUFBSSxDQUFDQyxJQUFJLEVBQUU7TUFDUCxNQUFNLElBQUk1QixXQUFXLENBQUM4QixnQkFBZ0IsQ0FBQyw0QkFBNEIsQ0FBQztJQUN4RTtJQUNBLElBQUksQ0FBQ0wsUUFBUSxDQUFDTSxJQUFJLENBQUNILElBQUksQ0FBQztJQUN4QixJQUFJLENBQUNKLE1BQU0sSUFBSUksSUFBSSxDQUFDSixNQUFNO0VBQzlCO0VBQ0FRLElBQUlBLENBQUEsRUFBRztJQUNILElBQUksQ0FBQ1AsUUFBUSxDQUFDTSxJQUFJLENBQUN2QixXQUFXLEVBQUVWLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFRixLQUFLLENBQUM7SUFDcEUsSUFBSSxDQUFDbUIsTUFBTSxJQUFJLENBQUM7RUFDcEI7RUFDQVMsR0FBR0EsQ0FBQSxFQUFHO0lBQ0YsSUFBSSxDQUFDUixRQUFRLENBQUNNLElBQUksQ0FBQ3ZCLFdBQVcsRUFBRVYsUUFBUSxDQUFDUSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUVULFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzNGLElBQUksQ0FBQ2lCLE1BQU0sSUFBSSxDQUFDO0VBQ3BCO0VBQ0FVLGVBQWVBLENBQUNDLE9BQU8sRUFBRTtJQUNyQixJQUFJQSxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxFQUFFO01BQ25CLE1BQU10QixHQUFHLEdBQUdELFlBQVksQ0FBQ3VCLE9BQU8sQ0FBQ1gsTUFBTSxHQUFHLENBQUMsQ0FBQztNQUM1QyxJQUFJLENBQUNDLFFBQVEsQ0FBQ00sSUFBSSxDQUFDdkIsV0FBVyxFQUFFSyxHQUFHLEVBQUVSLEtBQUssRUFBRThCLE9BQU8sQ0FBQztNQUNwRCxJQUFJLENBQUNYLE1BQU0sSUFBSSxDQUFDLEdBQUdYLEdBQUcsQ0FBQ1csTUFBTSxHQUFHVyxPQUFPLENBQUNYLE1BQU07SUFDbEQsQ0FBQyxNQUNJO01BQ0QsSUFBSVksQ0FBQyxHQUFHLENBQUM7TUFDVCxPQUFPRCxPQUFPLENBQUNDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDRCxPQUFPLENBQUNDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLE1BQU0sQ0FBQyxFQUNwREEsQ0FBQyxFQUFFO01BQ1AsTUFBTXZCLEdBQUcsR0FBR0QsWUFBWSxDQUFDdUIsT0FBTyxDQUFDWCxNQUFNLEdBQUdZLENBQUMsQ0FBQztNQUM1QyxJQUFJLENBQUNYLFFBQVEsQ0FBQ00sSUFBSSxDQUFDdkIsV0FBVyxFQUFFSSxZQUFZLENBQUN1QixPQUFPLENBQUNYLE1BQU0sR0FBR1ksQ0FBQyxDQUFDLEVBQUVELE9BQU8sQ0FBQ2pCLEtBQUssQ0FBQ2tCLENBQUMsQ0FBQyxDQUFDO01BQ25GLElBQUksQ0FBQ1osTUFBTSxJQUFJLENBQUMsR0FBR1gsR0FBRyxDQUFDVyxNQUFNLEdBQUdXLE9BQU8sQ0FBQ1gsTUFBTSxHQUFHWSxDQUFDO0lBQ3REO0VBQ0o7RUFDQUMsTUFBTUEsQ0FBQ0EsTUFBTSxFQUFFO0lBQ1gsTUFBTXhCLEdBQUcsR0FBR0QsWUFBWSxDQUFDeUIsTUFBTSxDQUFDYixNQUFNLENBQUM7SUFDdkMsSUFBSSxDQUFDQyxRQUFRLENBQUNNLElBQUksQ0FBQ3BCLFVBQVUsRUFBRUMsWUFBWSxDQUFDeUIsTUFBTSxDQUFDYixNQUFNLENBQUMsRUFBRWEsTUFBTSxDQUFDO0lBQ25FLElBQUksQ0FBQ2IsTUFBTSxJQUFJLENBQUMsR0FBR1gsR0FBRyxDQUFDVyxNQUFNLEdBQUdhLE1BQU0sQ0FBQ2IsTUFBTTtFQUNqRDtFQUNBYyxNQUFNQSxDQUFDQyxJQUFJLEVBQUU7SUFDVCxNQUFNMUIsR0FBRyxHQUFHRCxZQUFZLENBQUMyQixJQUFJLENBQUNmLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBSSxDQUFDQyxRQUFRLENBQUNNLElBQUksQ0FBQ3RCLFVBQVUsRUFBRUcsWUFBWSxDQUFDMkIsSUFBSSxDQUFDZixNQUFNLEdBQUcsQ0FBQyxDQUFDLEVBQUVuQixLQUFLLEVBQUVrQyxJQUFJLENBQUM7SUFDMUUsSUFBSSxDQUFDZixNQUFNLElBQUksQ0FBQyxHQUFHWCxHQUFHLENBQUNXLE1BQU0sR0FBR2UsSUFBSSxDQUFDZixNQUFNLEdBQUcsQ0FBQztFQUNuRDtFQUNBZ0IsR0FBR0EsQ0FBQ0MsR0FBRyxFQUFFO0lBQ0wsSUFBSSxDQUFDaEIsUUFBUSxDQUFDTSxJQUFJLENBQUNVLEdBQUcsQ0FBQztJQUN2QixJQUFJLENBQUNqQixNQUFNLElBQUlpQixHQUFHLENBQUNqQixNQUFNO0VBQzdCO0VBQ0FrQixHQUFHQSxDQUFDQyxHQUFHLEdBQUdqQyxZQUFZLEVBQUU7SUFDcEIsTUFBTUcsR0FBRyxHQUFHRCxZQUFZLENBQUMsSUFBSSxDQUFDWSxNQUFNLENBQUM7SUFDckMsT0FBTzFCLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDc0MsTUFBTSxDQUFDLENBQUNELEdBQUcsRUFBRTlCLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQ1ksUUFBUSxDQUFDLEVBQUUsQ0FBQyxHQUFHWixHQUFHLENBQUNXLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU0sQ0FBQztFQUM3RjtBQUNKO0FBQ0E1QixrQkFBZSxHQUFHMEIsZUFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xX3NlcXVlbmNlX2VuY29kZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IHRhZ0ludGVnZXIgPSAweDAyO1xuY29uc3QgdGFnQml0U3RyID0gMHgwMztcbmNvbnN0IHRhZ09jdFN0ciA9IDB4MDQ7XG5jb25zdCB0YWdTZXF1ZW5jZSA9IDB4MzA7XG5jb25zdCBiWmVybyA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFsweDAwXSk7XG5jb25zdCBiVGFnSW50ZWdlciA9IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFt0YWdJbnRlZ2VyXSk7XG5jb25zdCBiVGFnQml0U3RyID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oW3RhZ0JpdFN0cl0pO1xuY29uc3QgYlRhZ1NlcXVlbmNlID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oW3RhZ1NlcXVlbmNlXSk7XG5jb25zdCBiVGFnT2N0U3RyID0gYnVmZmVyXzEuQnVmZmVyLmZyb20oW3RhZ09jdFN0cl0pO1xuY29uc3QgZW5jb2RlTGVuZ3RoID0gKGxlbikgPT4ge1xuICAgIGlmIChsZW4gPCAxMjgpXG4gICAgICAgIHJldHVybiBidWZmZXJfMS5CdWZmZXIuZnJvbShbbGVuXSk7XG4gICAgY29uc3QgYnVmZmVyID0gYnVmZmVyXzEuQnVmZmVyLmFsbG9jKDUpO1xuICAgIGJ1ZmZlci53cml0ZVVJbnQzMkJFKGxlbiwgMSk7XG4gICAgbGV0IG9mZnNldCA9IDE7XG4gICAgd2hpbGUgKGJ1ZmZlcltvZmZzZXRdID09PSAwKVxuICAgICAgICBvZmZzZXQrKztcbiAgICBidWZmZXJbb2Zmc2V0IC0gMV0gPSAweDgwIHwgKDUgLSBvZmZzZXQpO1xuICAgIHJldHVybiBidWZmZXIuc2xpY2Uob2Zmc2V0IC0gMSk7XG59O1xuY29uc3Qgb2lkcyA9IG5ldyBNYXAoW1xuICAgIFsnUC0yNTYnLCBidWZmZXJfMS5CdWZmZXIuZnJvbSgnMDYgMDggMkEgODYgNDggQ0UgM0QgMDMgMDEgMDcnLnJlcGxhY2UoLyAvZywgJycpLCAnaGV4JyldLFxuICAgIFsnc2VjcDI1NmsxJywgYnVmZmVyXzEuQnVmZmVyLmZyb20oJzA2IDA1IDJCIDgxIDA0IDAwIDBBJy5yZXBsYWNlKC8gL2csICcnKSwgJ2hleCcpXSxcbiAgICBbJ1AtMzg0JywgYnVmZmVyXzEuQnVmZmVyLmZyb20oJzA2IDA1IDJCIDgxIDA0IDAwIDIyJy5yZXBsYWNlKC8gL2csICcnKSwgJ2hleCcpXSxcbiAgICBbJ1AtNTIxJywgYnVmZmVyXzEuQnVmZmVyLmZyb20oJzA2IDA1IDJCIDgxIDA0IDAwIDIzJy5yZXBsYWNlKC8gL2csICcnKSwgJ2hleCcpXSxcbiAgICBbJ2VjUHVibGljS2V5JywgYnVmZmVyXzEuQnVmZmVyLmZyb20oJzA2IDA3IDJBIDg2IDQ4IENFIDNEIDAyIDAxJy5yZXBsYWNlKC8gL2csICcnKSwgJ2hleCcpXSxcbiAgICBbJ1gyNTUxOScsIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKCcwNiAwMyAyQiA2NSA2RScucmVwbGFjZSgvIC9nLCAnJyksICdoZXgnKV0sXG4gICAgWydYNDQ4JywgYnVmZmVyXzEuQnVmZmVyLmZyb20oJzA2IDAzIDJCIDY1IDZGJy5yZXBsYWNlKC8gL2csICcnKSwgJ2hleCcpXSxcbiAgICBbJ0VkMjU1MTknLCBidWZmZXJfMS5CdWZmZXIuZnJvbSgnMDYgMDMgMkIgNjUgNzAnLnJlcGxhY2UoLyAvZywgJycpLCAnaGV4JyldLFxuICAgIFsnRWQ0NDgnLCBidWZmZXJfMS5CdWZmZXIuZnJvbSgnMDYgMDMgMkIgNjUgNzEnLnJlcGxhY2UoLyAvZywgJycpLCAnaGV4JyldLFxuXSk7XG5jbGFzcyBEdW1iQXNuMUVuY29kZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcbiAgICB9XG4gICAgb2lkRm9yKG9pZCkge1xuICAgICAgICBjb25zdCBiT2lkID0gb2lkcy5nZXQob2lkKTtcbiAgICAgICAgaWYgKCFiT2lkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZCgnSW52YWxpZCBvciB1bnN1cHBvcnRlZCBPSUQnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYk9pZCk7XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGJPaWQubGVuZ3RoO1xuICAgIH1cbiAgICB6ZXJvKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYlRhZ0ludGVnZXIsIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFsweDAxXSksIGJaZXJvKTtcbiAgICAgICAgdGhpcy5sZW5ndGggKz0gMztcbiAgICB9XG4gICAgb25lKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYlRhZ0ludGVnZXIsIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFsweDAxXSksIGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKFsweDAxXSkpO1xuICAgICAgICB0aGlzLmxlbmd0aCArPSAzO1xuICAgIH1cbiAgICB1bnNpZ25lZEludGVnZXIoaW50ZWdlcikge1xuICAgICAgICBpZiAoaW50ZWdlclswXSAmIDB4ODApIHtcbiAgICAgICAgICAgIGNvbnN0IGxlbiA9IGVuY29kZUxlbmd0aChpbnRlZ2VyLmxlbmd0aCArIDEpO1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKGJUYWdJbnRlZ2VyLCBsZW4sIGJaZXJvLCBpbnRlZ2VyKTtcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoICs9IDIgKyBsZW4ubGVuZ3RoICsgaW50ZWdlci5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgICAgICB3aGlsZSAoaW50ZWdlcltpXSA9PT0gMCAmJiAoaW50ZWdlcltpICsgMV0gJiAweDgwKSA9PT0gMClcbiAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICBjb25zdCBsZW4gPSBlbmNvZGVMZW5ndGgoaW50ZWdlci5sZW5ndGggLSBpKTtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMucHVzaChiVGFnSW50ZWdlciwgZW5jb2RlTGVuZ3RoKGludGVnZXIubGVuZ3RoIC0gaSksIGludGVnZXIuc2xpY2UoaSkpO1xuICAgICAgICAgICAgdGhpcy5sZW5ndGggKz0gMSArIGxlbi5sZW5ndGggKyBpbnRlZ2VyLmxlbmd0aCAtIGk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb2N0U3RyKG9jdFN0cikge1xuICAgICAgICBjb25zdCBsZW4gPSBlbmNvZGVMZW5ndGgob2N0U3RyLmxlbmd0aCk7XG4gICAgICAgIHRoaXMuZWxlbWVudHMucHVzaChiVGFnT2N0U3RyLCBlbmNvZGVMZW5ndGgob2N0U3RyLmxlbmd0aCksIG9jdFN0cik7XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IDEgKyBsZW4ubGVuZ3RoICsgb2N0U3RyLmxlbmd0aDtcbiAgICB9XG4gICAgYml0U3RyKGJpdFMpIHtcbiAgICAgICAgY29uc3QgbGVuID0gZW5jb2RlTGVuZ3RoKGJpdFMubGVuZ3RoICsgMSk7XG4gICAgICAgIHRoaXMuZWxlbWVudHMucHVzaChiVGFnQml0U3RyLCBlbmNvZGVMZW5ndGgoYml0Uy5sZW5ndGggKyAxKSwgYlplcm8sIGJpdFMpO1xuICAgICAgICB0aGlzLmxlbmd0aCArPSAxICsgbGVuLmxlbmd0aCArIGJpdFMubGVuZ3RoICsgMTtcbiAgICB9XG4gICAgYWRkKHNlcSkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goc2VxKTtcbiAgICAgICAgdGhpcy5sZW5ndGggKz0gc2VxLmxlbmd0aDtcbiAgICB9XG4gICAgZW5kKHRhZyA9IGJUYWdTZXF1ZW5jZSkge1xuICAgICAgICBjb25zdCBsZW4gPSBlbmNvZGVMZW5ndGgodGhpcy5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gYnVmZmVyXzEuQnVmZmVyLmNvbmNhdChbdGFnLCBsZW4sIC4uLnRoaXMuZWxlbWVudHNdLCAxICsgbGVuLmxlbmd0aCArIHRoaXMubGVuZ3RoKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBEdW1iQXNuMUVuY29kZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJidWZmZXJfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsInRhZ0ludGVnZXIiLCJ0YWdCaXRTdHIiLCJ0YWdPY3RTdHIiLCJ0YWdTZXF1ZW5jZSIsImJaZXJvIiwiQnVmZmVyIiwiZnJvbSIsImJUYWdJbnRlZ2VyIiwiYlRhZ0JpdFN0ciIsImJUYWdTZXF1ZW5jZSIsImJUYWdPY3RTdHIiLCJlbmNvZGVMZW5ndGgiLCJsZW4iLCJidWZmZXIiLCJhbGxvYyIsIndyaXRlVUludDMyQkUiLCJvZmZzZXQiLCJzbGljZSIsIm9pZHMiLCJNYXAiLCJyZXBsYWNlIiwiRHVtYkFzbjFFbmNvZGVyIiwiY29uc3RydWN0b3IiLCJsZW5ndGgiLCJlbGVtZW50cyIsIm9pZEZvciIsIm9pZCIsImJPaWQiLCJnZXQiLCJKT1NFTm90U3VwcG9ydGVkIiwicHVzaCIsInplcm8iLCJvbmUiLCJ1bnNpZ25lZEludGVnZXIiLCJpbnRlZ2VyIiwiaSIsIm9jdFN0ciIsImJpdFN0ciIsImJpdFMiLCJhZGQiLCJzZXEiLCJlbmQiLCJ0YWciLCJjb25jYXQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decode = exports.encode = exports.encodeBase64 = exports.decodeBase64 = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nlet encode;\nfunction normalize(input) {\n  let encoded = input;\n  if (encoded instanceof Uint8Array) {\n    encoded = buffer_utils_js_1.decoder.decode(encoded);\n  }\n  return encoded;\n}\nif (buffer_1.Buffer.isEncoding('base64url')) {\n  exports.encode = encode = input => buffer_1.Buffer.from(input).toString('base64url');\n} else {\n  exports.encode = encode = input => buffer_1.Buffer.from(input).toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nconst decodeBase64 = input => buffer_1.Buffer.from(input, 'base64');\nexports.decodeBase64 = decodeBase64;\nconst encodeBase64 = input => buffer_1.Buffer.from(input).toString('base64');\nexports.encodeBase64 = encodeBase64;\nconst decode = input => buffer_1.Buffer.from(normalize(input), 'base64');\nexports.decode = decode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9iYXNlNjR1cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWMsR0FBR0EsY0FBYyxHQUFHQSxvQkFBb0IsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSyxDQUFDO0FBQ3RGLE1BQU1NLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1DLGlCQUFpQixHQUFHRCxtQkFBTyxDQUFDLGtIQUF3QixDQUFDO0FBQzNELElBQUlKLE1BQU07QUFDVixTQUFTTSxTQUFTQSxDQUFDQyxLQUFLLEVBQUU7RUFDdEIsSUFBSUMsT0FBTyxHQUFHRCxLQUFLO0VBQ25CLElBQUlDLE9BQU8sWUFBWUMsVUFBVSxFQUFFO0lBQy9CRCxPQUFPLEdBQUdILGlCQUFpQixDQUFDSyxPQUFPLENBQUNYLE1BQU0sQ0FBQ1MsT0FBTyxDQUFDO0VBQ3ZEO0VBQ0EsT0FBT0EsT0FBTztBQUNsQjtBQUNBLElBQUlMLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDQyxVQUFVLENBQUMsV0FBVyxDQUFDLEVBQUU7RUFDekNmLGNBQWMsR0FBR0csTUFBTSxHQUFJTyxLQUFLLElBQUtKLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDRSxJQUFJLENBQUNOLEtBQUssQ0FBQyxDQUFDTyxRQUFRLENBQUMsV0FBVyxDQUFDO0FBQzFGLENBQUMsTUFDSTtFQUNEakIsY0FBYyxHQUFHRyxNQUFNLEdBQUlPLEtBQUssSUFBS0osUUFBUSxDQUFDUSxNQUFNLENBQUNFLElBQUksQ0FBQ04sS0FBSyxDQUFDLENBQUNPLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQ0EsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQ0EsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUM7QUFDako7QUFDQSxNQUFNYixZQUFZLEdBQUlLLEtBQUssSUFBS0osUUFBUSxDQUFDUSxNQUFNLENBQUNFLElBQUksQ0FBQ04sS0FBSyxFQUFFLFFBQVEsQ0FBQztBQUNyRVYsb0JBQW9CLEdBQUdLLFlBQVk7QUFDbkMsTUFBTUQsWUFBWSxHQUFJTSxLQUFLLElBQUtKLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDRSxJQUFJLENBQUNOLEtBQUssQ0FBQyxDQUFDTyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQzlFakIsb0JBQW9CLEdBQUdJLFlBQVk7QUFDbkMsTUFBTUYsTUFBTSxHQUFJUSxLQUFLLElBQUtKLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDRSxJQUFJLENBQUNQLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDLEVBQUUsUUFBUSxDQUFDO0FBQzFFVixjQUFjLEdBQUdFLE1BQU0iLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYmFzZTY0dXJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IGV4cG9ydHMuZW5jb2RlQmFzZTY0ID0gZXhwb3J0cy5kZWNvZGVCYXNlNjQgPSB2b2lkIDA7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xubGV0IGVuY29kZTtcbmZ1bmN0aW9uIG5vcm1hbGl6ZShpbnB1dCkge1xuICAgIGxldCBlbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKGVuY29kZWQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGVuY29kZWQgPSBidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZShlbmNvZGVkKTtcbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWQ7XG59XG5pZiAoYnVmZmVyXzEuQnVmZmVyLmlzRW5jb2RpbmcoJ2Jhc2U2NHVybCcpKSB7XG4gICAgZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGUgPSAoaW5wdXQpID0+IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0KS50b1N0cmluZygnYmFzZTY0dXJsJyk7XG59XG5lbHNlIHtcbiAgICBleHBvcnRzLmVuY29kZSA9IGVuY29kZSA9IChpbnB1dCkgPT4gYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKCdiYXNlNjQnKS5yZXBsYWNlKC89L2csICcnKS5yZXBsYWNlKC9cXCsvZywgJy0nKS5yZXBsYWNlKC9cXC8vZywgJ18nKTtcbn1cbmNvbnN0IGRlY29kZUJhc2U2NCA9IChpbnB1dCkgPT4gYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQsICdiYXNlNjQnKTtcbmV4cG9ydHMuZGVjb2RlQmFzZTY0ID0gZGVjb2RlQmFzZTY0O1xuY29uc3QgZW5jb2RlQmFzZTY0ID0gKGlucHV0KSA9PiBidWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuZXhwb3J0cy5lbmNvZGVCYXNlNjQgPSBlbmNvZGVCYXNlNjQ7XG5jb25zdCBkZWNvZGUgPSAoaW5wdXQpID0+IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKG5vcm1hbGl6ZShpbnB1dCksICdiYXNlNjQnKTtcbmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlIiwiZW5jb2RlIiwiZW5jb2RlQmFzZTY0IiwiZGVjb2RlQmFzZTY0IiwiYnVmZmVyXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJub3JtYWxpemUiLCJpbnB1dCIsImVuY29kZWQiLCJVaW50OEFycmF5IiwiZGVjb2RlciIsIkJ1ZmZlciIsImlzRW5jb2RpbmciLCJmcm9tIiwidG9TdHJpbmciLCJyZXBsYWNlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nfunction cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n  const macData = (0, buffer_utils_js_1.concat)(aad, iv, ciphertext, (0, buffer_utils_js_1.uint64be)(aad.length << 3));\n  const hmac = (0, crypto_1.createHmac)(`sha${macSize}`, macKey);\n  hmac.update(macData);\n  return hmac.digest().slice(0, keySize >> 3);\n}\nexports[\"default\"] = cbcTag;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jYmNfdGFnLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1DLGlCQUFpQixHQUFHRCxtQkFBTyxDQUFDLGtIQUF3QixDQUFDO0FBQzNELFNBQVNFLE1BQU1BLENBQUNDLEdBQUcsRUFBRUMsRUFBRSxFQUFFQyxVQUFVLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7RUFDM0QsTUFBTUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFUixpQkFBaUIsQ0FBQ1MsTUFBTSxFQUFFUCxHQUFHLEVBQUVDLEVBQUUsRUFBRUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFSixpQkFBaUIsQ0FBQ1UsUUFBUSxFQUFFUixHQUFHLENBQUNTLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQztFQUNwSCxNQUFNQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEVBQUVkLFFBQVEsQ0FBQ2UsVUFBVSxFQUFHLE1BQUtSLE9BQVEsRUFBQyxFQUFFQyxNQUFNLENBQUM7RUFDOURNLElBQUksQ0FBQ0UsTUFBTSxDQUFDTixPQUFPLENBQUM7RUFDcEIsT0FBT0ksSUFBSSxDQUFDRyxNQUFNLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQyxFQUFFVCxPQUFPLElBQUksQ0FBQyxDQUFDO0FBQy9DO0FBQ0FYLGtCQUFlLEdBQUdLLE1BQU0iLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2JjX3RhZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5mdW5jdGlvbiBjYmNUYWcoYWFkLCBpdiwgY2lwaGVydGV4dCwgbWFjU2l6ZSwgbWFjS2V5LCBrZXlTaXplKSB7XG4gICAgY29uc3QgbWFjRGF0YSA9ICgwLCBidWZmZXJfdXRpbHNfanNfMS5jb25jYXQpKGFhZCwgaXYsIGNpcGhlcnRleHQsICgwLCBidWZmZXJfdXRpbHNfanNfMS51aW50NjRiZSkoYWFkLmxlbmd0aCA8PCAzKSk7XG4gICAgY29uc3QgaG1hYyA9ICgwLCBjcnlwdG9fMS5jcmVhdGVIbWFjKShgc2hhJHttYWNTaXplfWAsIG1hY0tleSk7XG4gICAgaG1hYy51cGRhdGUobWFjRGF0YSk7XG4gICAgcmV0dXJuIGhtYWMuZGlnZXN0KCkuc2xpY2UoMCwga2V5U2l6ZSA+PiAzKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGNiY1RhZztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsImJ1ZmZlcl91dGlsc19qc18xIiwiY2JjVGFnIiwiYWFkIiwiaXYiLCJjaXBoZXJ0ZXh0IiwibWFjU2l6ZSIsIm1hY0tleSIsImtleVNpemUiLCJtYWNEYXRhIiwiY29uY2F0IiwidWludDY0YmUiLCJsZW5ndGgiLCJobWFjIiwiY3JlYXRlSG1hYyIsInVwZGF0ZSIsImRpZ2VzdCIsInNsaWNlIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst checkCekLength = (enc, cek) => {\n  let expected;\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      expected = parseInt(enc.slice(-3), 10);\n      break;\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      expected = parseInt(enc.slice(1, 4), 10);\n      break;\n    default:\n      throw new errors_js_1.JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n  }\n  if (cek instanceof Uint8Array) {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n      throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n    return;\n  }\n  if ((0, is_key_object_js_1.default)(cek) && cek.type === 'secret') {\n    const actual = cek.symmetricKeySize << 3;\n    if (actual !== expected) {\n      throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n    return;\n  }\n  throw new TypeError('Invalid Content Encryption Key type');\n};\nexports[\"default\"] = checkCekLength;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaGVja19jZWtfbGVuZ3RoLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxNQUFNQyxrQkFBa0IsR0FBR0QsbUJBQU8sQ0FBQyxtSEFBb0IsQ0FBQztBQUN4RCxNQUFNRSxjQUFjLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ2pDLElBQUlDLFFBQVE7RUFDWixRQUFRRixHQUFHO0lBQ1AsS0FBSyxlQUFlO0lBQ3BCLEtBQUssZUFBZTtJQUNwQixLQUFLLGVBQWU7TUFDaEJFLFFBQVEsR0FBR0MsUUFBUSxDQUFDSCxHQUFHLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztNQUN0QztJQUNKLEtBQUssU0FBUztJQUNkLEtBQUssU0FBUztJQUNkLEtBQUssU0FBUztNQUNWRixRQUFRLEdBQUdDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztNQUN4QztJQUNKO01BQ0ksTUFBTSxJQUFJUixXQUFXLENBQUNTLGdCQUFnQixDQUFFLGdDQUErQkwsR0FBSSw2REFBNEQsQ0FBQztFQUNoSjtFQUNBLElBQUlDLEdBQUcsWUFBWUssVUFBVSxFQUFFO0lBQzNCLE1BQU1DLE1BQU0sR0FBR04sR0FBRyxDQUFDTyxVQUFVLElBQUksQ0FBQztJQUNsQyxJQUFJRCxNQUFNLEtBQUtMLFFBQVEsRUFBRTtNQUNyQixNQUFNLElBQUlOLFdBQVcsQ0FBQ2EsVUFBVSxDQUFFLG1EQUFrRFAsUUFBUyxjQUFhSyxNQUFPLE9BQU0sQ0FBQztJQUM1SDtJQUNBO0VBQ0o7RUFDQSxJQUFJLENBQUMsQ0FBQyxFQUFFVCxrQkFBa0IsQ0FBQ1ksT0FBTyxFQUFFVCxHQUFHLENBQUMsSUFBSUEsR0FBRyxDQUFDVSxJQUFJLEtBQUssUUFBUSxFQUFFO0lBQy9ELE1BQU1KLE1BQU0sR0FBR04sR0FBRyxDQUFDVyxnQkFBZ0IsSUFBSSxDQUFDO0lBQ3hDLElBQUlMLE1BQU0sS0FBS0wsUUFBUSxFQUFFO01BQ3JCLE1BQU0sSUFBSU4sV0FBVyxDQUFDYSxVQUFVLENBQUUsbURBQWtEUCxRQUFTLGNBQWFLLE1BQU8sT0FBTSxDQUFDO0lBQzVIO0lBQ0E7RUFDSjtFQUNBLE1BQU0sSUFBSU0sU0FBUyxDQUFDLHFDQUFxQyxDQUFDO0FBQzlELENBQUM7QUFDRG5CLGtCQUFlLEdBQUdLLGNBQWMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfY2VrX2xlbmd0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaXNfa2V5X29iamVjdF9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X29iamVjdC5qc1wiKTtcbmNvbnN0IGNoZWNrQ2VrTGVuZ3RoID0gKGVuYywgY2VrKSA9PiB7XG4gICAgbGV0IGV4cGVjdGVkO1xuICAgIHN3aXRjaCAoZW5jKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhDQkMtSFMyNTYnOlxuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICBleHBlY3RlZCA9IHBhcnNlSW50KGVuYy5zbGljZSgtMyksIDEwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdBMTI4R0NNJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTSc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ00nOlxuICAgICAgICAgICAgZXhwZWN0ZWQgPSBwYXJzZUludChlbmMuc2xpY2UoMSwgNCksIDEwKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYENvbnRlbnQgRW5jcnlwdGlvbiBBbGdvcml0aG0gJHtlbmN9IGlzIG5vdCBzdXBwb3J0ZWQgZWl0aGVyIGJ5IEpPU0Ugb3IgeW91ciBqYXZhc2NyaXB0IHJ1bnRpbWVgKTtcbiAgICB9XG4gICAgaWYgKGNlayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgY29uc3QgYWN0dWFsID0gY2VrLmJ5dGVMZW5ndGggPDwgMztcbiAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKGBJbnZhbGlkIENvbnRlbnQgRW5jcnlwdGlvbiBLZXkgbGVuZ3RoLiBFeHBlY3RlZCAke2V4cGVjdGVkfSBiaXRzLCBnb3QgJHthY3R1YWx9IGJpdHNgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGNlaykgJiYgY2VrLnR5cGUgPT09ICdzZWNyZXQnKSB7XG4gICAgICAgIGNvbnN0IGFjdHVhbCA9IGNlay5zeW1tZXRyaWNLZXlTaXplIDw8IDM7XG4gICAgICAgIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZChgSW52YWxpZCBDb250ZW50IEVuY3J5cHRpb24gS2V5IGxlbmd0aC4gRXhwZWN0ZWQgJHtleHBlY3RlZH0gYml0cywgZ290ICR7YWN0dWFsfSBiaXRzYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIENvbnRlbnQgRW5jcnlwdGlvbiBLZXkgdHlwZScpO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoZWNrQ2VrTGVuZ3RoO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JzX2pzXzEiLCJyZXF1aXJlIiwiaXNfa2V5X29iamVjdF9qc18xIiwiY2hlY2tDZWtMZW5ndGgiLCJlbmMiLCJjZWsiLCJleHBlY3RlZCIsInBhcnNlSW50Iiwic2xpY2UiLCJKT1NFTm90U3VwcG9ydGVkIiwiVWludDhBcnJheSIsImFjdHVhbCIsImJ5dGVMZW5ndGgiLCJKV0VJbnZhbGlkIiwiZGVmYXVsdCIsInR5cGUiLCJzeW1tZXRyaWNLZXlTaXplIiwiVHlwZUVycm9yIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.setModulusLength = exports.weakMap = void 0;\nexports.weakMap = new WeakMap();\nconst getLength = (buf, index) => {\n  let len = buf.readUInt8(1);\n  if ((len & 0x80) === 0) {\n    if (index === 0) {\n      return len;\n    }\n    return getLength(buf.subarray(2 + len), index - 1);\n  }\n  const num = len & 0x7f;\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(2 + i);\n    len |= j;\n  }\n  if (index === 0) {\n    return len;\n  }\n  return getLength(buf.subarray(2 + len), index - 1);\n};\nconst getLengthOfSeqIndex = (sequence, index) => {\n  const len = sequence.readUInt8(1);\n  if ((len & 0x80) === 0) {\n    return getLength(sequence.subarray(2), index);\n  }\n  const num = len & 0x7f;\n  return getLength(sequence.subarray(2 + num), index);\n};\nconst getModulusLength = key => {\n  var _a, _b;\n  if (exports.weakMap.has(key)) {\n    return exports.weakMap.get(key);\n  }\n  const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : getLengthOfSeqIndex(key.export({\n    format: 'der',\n    type: 'pkcs1'\n  }), key.type === 'private' ? 1 : 0) - 1 << 3;\n  exports.weakMap.set(key, modulusLength);\n  return modulusLength;\n};\nconst setModulusLength = (keyObject, modulusLength) => {\n  exports.weakMap.set(keyObject, modulusLength);\n};\nexports.setModulusLength = setModulusLength;\nexports[\"default\"] = (key, alg) => {\n  if (getModulusLength(key) < 2048) {\n    throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaGVja19tb2R1bHVzX2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUdBLGVBQWUsR0FBRyxLQUFLLENBQUM7QUFDbkRBLGVBQWUsR0FBRyxJQUFJSSxPQUFPLENBQUMsQ0FBQztBQUMvQixNQUFNQyxTQUFTLEdBQUdBLENBQUNDLEdBQUcsRUFBRUMsS0FBSyxLQUFLO0VBQzlCLElBQUlDLEdBQUcsR0FBR0YsR0FBRyxDQUFDRyxTQUFTLENBQUMsQ0FBQyxDQUFDO0VBQzFCLElBQUksQ0FBQ0QsR0FBRyxHQUFHLElBQUksTUFBTSxDQUFDLEVBQUU7SUFDcEIsSUFBSUQsS0FBSyxLQUFLLENBQUMsRUFBRTtNQUNiLE9BQU9DLEdBQUc7SUFDZDtJQUNBLE9BQU9ILFNBQVMsQ0FBQ0MsR0FBRyxDQUFDSSxRQUFRLENBQUMsQ0FBQyxHQUFHRixHQUFHLENBQUMsRUFBRUQsS0FBSyxHQUFHLENBQUMsQ0FBQztFQUN0RDtFQUNBLE1BQU1JLEdBQUcsR0FBR0gsR0FBRyxHQUFHLElBQUk7RUFDdEJBLEdBQUcsR0FBRyxDQUFDO0VBQ1AsS0FBSyxJQUFJSSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdELEdBQUcsRUFBRUMsQ0FBQyxFQUFFLEVBQUU7SUFDMUJKLEdBQUcsS0FBSyxDQUFDO0lBQ1QsTUFBTUssQ0FBQyxHQUFHUCxHQUFHLENBQUNHLFNBQVMsQ0FBQyxDQUFDLEdBQUdHLENBQUMsQ0FBQztJQUM5QkosR0FBRyxJQUFJSyxDQUFDO0VBQ1o7RUFDQSxJQUFJTixLQUFLLEtBQUssQ0FBQyxFQUFFO0lBQ2IsT0FBT0MsR0FBRztFQUNkO0VBQ0EsT0FBT0gsU0FBUyxDQUFDQyxHQUFHLENBQUNJLFFBQVEsQ0FBQyxDQUFDLEdBQUdGLEdBQUcsQ0FBQyxFQUFFRCxLQUFLLEdBQUcsQ0FBQyxDQUFDO0FBQ3RELENBQUM7QUFDRCxNQUFNTyxtQkFBbUIsR0FBR0EsQ0FBQ0MsUUFBUSxFQUFFUixLQUFLLEtBQUs7RUFDN0MsTUFBTUMsR0FBRyxHQUFHTyxRQUFRLENBQUNOLFNBQVMsQ0FBQyxDQUFDLENBQUM7RUFDakMsSUFBSSxDQUFDRCxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsRUFBRTtJQUNwQixPQUFPSCxTQUFTLENBQUNVLFFBQVEsQ0FBQ0wsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFSCxLQUFLLENBQUM7RUFDakQ7RUFDQSxNQUFNSSxHQUFHLEdBQUdILEdBQUcsR0FBRyxJQUFJO0VBQ3RCLE9BQU9ILFNBQVMsQ0FBQ1UsUUFBUSxDQUFDTCxRQUFRLENBQUMsQ0FBQyxHQUFHQyxHQUFHLENBQUMsRUFBRUosS0FBSyxDQUFDO0FBQ3ZELENBQUM7QUFDRCxNQUFNUyxnQkFBZ0IsR0FBSUMsR0FBRyxJQUFLO0VBQzlCLElBQUlDLEVBQUUsRUFBRUMsRUFBRTtFQUNWLElBQUluQixPQUFPLENBQUNHLE9BQU8sQ0FBQ2lCLEdBQUcsQ0FBQ0gsR0FBRyxDQUFDLEVBQUU7SUFDMUIsT0FBT2pCLE9BQU8sQ0FBQ0csT0FBTyxDQUFDa0IsR0FBRyxDQUFDSixHQUFHLENBQUM7RUFDbkM7RUFDQSxNQUFNSyxhQUFhLEdBQUcsQ0FBQ0gsRUFBRSxHQUFHLENBQUNELEVBQUUsR0FBR0QsR0FBRyxDQUFDTSxvQkFBb0IsTUFBTSxJQUFJLElBQUlMLEVBQUUsS0FBSyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBR0EsRUFBRSxDQUFDSSxhQUFhLE1BQU0sSUFBSSxJQUFJSCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUdBLEVBQUUsR0FBSUwsbUJBQW1CLENBQUNHLEdBQUcsQ0FBQ08sTUFBTSxDQUFDO0lBQUVDLE1BQU0sRUFBRSxLQUFLO0lBQUVDLElBQUksRUFBRTtFQUFRLENBQUMsQ0FBQyxFQUFFVCxHQUFHLENBQUNTLElBQUksS0FBSyxTQUFTLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUNsUCxDQUFDLElBQ0QsQ0FBQztFQUNMMUIsT0FBTyxDQUFDRyxPQUFPLENBQUN3QixHQUFHLENBQUNWLEdBQUcsRUFBRUssYUFBYSxDQUFDO0VBQ3ZDLE9BQU9BLGFBQWE7QUFDeEIsQ0FBQztBQUNELE1BQU1wQixnQkFBZ0IsR0FBR0EsQ0FBQzBCLFNBQVMsRUFBRU4sYUFBYSxLQUFLO0VBQ25EdEIsT0FBTyxDQUFDRyxPQUFPLENBQUN3QixHQUFHLENBQUNDLFNBQVMsRUFBRU4sYUFBYSxDQUFDO0FBQ2pELENBQUM7QUFDRHRCLHdCQUF3QixHQUFHRSxnQkFBZ0I7QUFDM0NGLGtCQUFlLEdBQUcsQ0FBQ2lCLEdBQUcsRUFBRWEsR0FBRyxLQUFLO0VBQzVCLElBQUlkLGdCQUFnQixDQUFDQyxHQUFHLENBQUMsR0FBRyxJQUFJLEVBQUU7SUFDOUIsTUFBTSxJQUFJYyxTQUFTLENBQUUsR0FBRUQsR0FBSSx1REFBc0QsQ0FBQztFQUN0RjtBQUNKLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfbW9kdWx1c19sZW5ndGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldE1vZHVsdXNMZW5ndGggPSBleHBvcnRzLndlYWtNYXAgPSB2b2lkIDA7XG5leHBvcnRzLndlYWtNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgZ2V0TGVuZ3RoID0gKGJ1ZiwgaW5kZXgpID0+IHtcbiAgICBsZXQgbGVuID0gYnVmLnJlYWRVSW50OCgxKTtcbiAgICBpZiAoKGxlbiAmIDB4ODApID09PSAwKSB7XG4gICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGxlbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0TGVuZ3RoKGJ1Zi5zdWJhcnJheSgyICsgbGVuKSwgaW5kZXggLSAxKTtcbiAgICB9XG4gICAgY29uc3QgbnVtID0gbGVuICYgMHg3ZjtcbiAgICBsZW4gPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtOyBpKyspIHtcbiAgICAgICAgbGVuIDw8PSA4O1xuICAgICAgICBjb25zdCBqID0gYnVmLnJlYWRVSW50OCgyICsgaSk7XG4gICAgICAgIGxlbiB8PSBqO1xuICAgIH1cbiAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGxlbjtcbiAgICB9XG4gICAgcmV0dXJuIGdldExlbmd0aChidWYuc3ViYXJyYXkoMiArIGxlbiksIGluZGV4IC0gMSk7XG59O1xuY29uc3QgZ2V0TGVuZ3RoT2ZTZXFJbmRleCA9IChzZXF1ZW5jZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBsZW4gPSBzZXF1ZW5jZS5yZWFkVUludDgoMSk7XG4gICAgaWYgKChsZW4gJiAweDgwKSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZ2V0TGVuZ3RoKHNlcXVlbmNlLnN1YmFycmF5KDIpLCBpbmRleCk7XG4gICAgfVxuICAgIGNvbnN0IG51bSA9IGxlbiAmIDB4N2Y7XG4gICAgcmV0dXJuIGdldExlbmd0aChzZXF1ZW5jZS5zdWJhcnJheSgyICsgbnVtKSwgaW5kZXgpO1xufTtcbmNvbnN0IGdldE1vZHVsdXNMZW5ndGggPSAoa2V5KSA9PiB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAoZXhwb3J0cy53ZWFrTWFwLmhhcyhrZXkpKSB7XG4gICAgICAgIHJldHVybiBleHBvcnRzLndlYWtNYXAuZ2V0KGtleSk7XG4gICAgfVxuICAgIGNvbnN0IG1vZHVsdXNMZW5ndGggPSAoX2IgPSAoX2EgPSBrZXkuYXN5bW1ldHJpY0tleURldGFpbHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5tb2R1bHVzTGVuZ3RoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAoZ2V0TGVuZ3RoT2ZTZXFJbmRleChrZXkuZXhwb3J0KHsgZm9ybWF0OiAnZGVyJywgdHlwZTogJ3BrY3MxJyB9KSwga2V5LnR5cGUgPT09ICdwcml2YXRlJyA/IDEgOiAwKSAtXG4gICAgICAgIDEpIDw8XG4gICAgICAgIDM7XG4gICAgZXhwb3J0cy53ZWFrTWFwLnNldChrZXksIG1vZHVsdXNMZW5ndGgpO1xuICAgIHJldHVybiBtb2R1bHVzTGVuZ3RoO1xufTtcbmNvbnN0IHNldE1vZHVsdXNMZW5ndGggPSAoa2V5T2JqZWN0LCBtb2R1bHVzTGVuZ3RoKSA9PiB7XG4gICAgZXhwb3J0cy53ZWFrTWFwLnNldChrZXlPYmplY3QsIG1vZHVsdXNMZW5ndGgpO1xufTtcbmV4cG9ydHMuc2V0TW9kdWx1c0xlbmd0aCA9IHNldE1vZHVsdXNMZW5ndGg7XG5leHBvcnRzLmRlZmF1bHQgPSAoa2V5LCBhbGcpID0+IHtcbiAgICBpZiAoZ2V0TW9kdWx1c0xlbmd0aChrZXkpIDwgMjA0OCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2FsZ30gcmVxdWlyZXMga2V5IG1vZHVsdXNMZW5ndGggdG8gYmUgMjA0OCBiaXRzIG9yIGxhcmdlcmApO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXRNb2R1bHVzTGVuZ3RoIiwid2Vha01hcCIsIldlYWtNYXAiLCJnZXRMZW5ndGgiLCJidWYiLCJpbmRleCIsImxlbiIsInJlYWRVSW50OCIsInN1YmFycmF5IiwibnVtIiwiaSIsImoiLCJnZXRMZW5ndGhPZlNlcUluZGV4Iiwic2VxdWVuY2UiLCJnZXRNb2R1bHVzTGVuZ3RoIiwia2V5IiwiX2EiLCJfYiIsImhhcyIsImdldCIsIm1vZHVsdXNMZW5ndGgiLCJhc3ltbWV0cmljS2V5RGV0YWlscyIsImV4cG9ydCIsImZvcm1hdCIsInR5cGUiLCJzZXQiLCJrZXlPYmplY3QiLCJkZWZhdWx0IiwiYWxnIiwiVHlwZUVycm9yIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nlet ciphers;\nexports[\"default\"] = algorithm => {\n  ciphers || (ciphers = new Set((0, crypto_1.getCiphers)()));\n  return ciphers.has(algorithm);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaXBoZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLElBQUlDLE9BQU87QUFDWEosa0JBQWUsR0FBSU0sU0FBUyxJQUFLO0VBQzdCRixPQUFPLEtBQUtBLE9BQU8sR0FBRyxJQUFJRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUVMLFFBQVEsQ0FBQ00sVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDO0VBQzFELE9BQU9KLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDSCxTQUFTLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaXBoZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xubGV0IGNpcGhlcnM7XG5leHBvcnRzLmRlZmF1bHQgPSAoYWxnb3JpdGhtKSA9PiB7XG4gICAgY2lwaGVycyB8fCAoY2lwaGVycyA9IG5ldyBTZXQoKDAsIGNyeXB0b18xLmdldENpcGhlcnMpKCkpKTtcbiAgICByZXR1cm4gY2lwaGVycy5oYXMoYWxnb3JpdGhtKTtcbn07XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJjaXBoZXJzIiwiZGVmYXVsdCIsImFsZ29yaXRobSIsIlNldCIsImdldENpcGhlcnMiLCJoYXMiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/decrypt.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/decrypt.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst timing_safe_equal_js_1 = __webpack_require__(/*! ./timing_safe_equal.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  if ((0, is_key_object_js_1.default)(cek)) {\n    cek = cek.export();\n  }\n  const encKey = cek.subarray(keySize >> 3);\n  const macKey = cek.subarray(0, keySize >> 3);\n  const macSize = parseInt(enc.slice(-3), 10);\n  const algorithm = `aes-${keySize}-cbc`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const expectedTag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n  let macCheckPassed;\n  try {\n    macCheckPassed = (0, timing_safe_equal_js_1.default)(tag, expectedTag);\n  } catch {}\n  if (!macCheckPassed) {\n    throw new errors_js_1.JWEDecryptionFailed();\n  }\n  let plaintext;\n  try {\n    const decipher = (0, crypto_1.createDecipheriv)(algorithm, encKey, iv);\n    plaintext = (0, buffer_utils_js_1.concat)(decipher.update(ciphertext), decipher.final());\n  } catch {}\n  if (!plaintext) {\n    throw new errors_js_1.JWEDecryptionFailed();\n  }\n  return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const algorithm = `aes-${keySize}-gcm`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  try {\n    const decipher = (0, crypto_1.createDecipheriv)(algorithm, cek, iv, {\n      authTagLength: 16\n    });\n    decipher.setAuthTag(tag);\n    if (aad.byteLength) {\n      decipher.setAAD(aad, {\n        plaintextLength: ciphertext.length\n      });\n    }\n    const plaintext = decipher.update(ciphertext);\n    decipher.final();\n    return plaintext;\n  } catch {\n    throw new errors_js_1.JWEDecryptionFailed();\n  }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad) => {\n  let key;\n  if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'decrypt');\n    key = crypto_1.KeyObject.from(cek);\n  } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n    key = cek;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n  }\n  (0, check_cek_length_js_1.default)(enc, key);\n  (0, check_iv_length_js_1.default)(enc, iv);\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexports[\"default\"] = decrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/decrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/digest.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/digest.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst digest = (algorithm, data) => (0, crypto_1.createHash)(algorithm).update(data).digest();\nexports[\"default\"] = digest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9kaWdlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsUUFBUSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFRLENBQUM7QUFDbEMsTUFBTUMsTUFBTSxHQUFHQSxDQUFDQyxTQUFTLEVBQUVDLElBQUksS0FBSyxDQUFDLENBQUMsRUFBRUosUUFBUSxDQUFDSyxVQUFVLEVBQUVGLFNBQVMsQ0FBQyxDQUFDRyxNQUFNLENBQUNGLElBQUksQ0FBQyxDQUFDRixNQUFNLENBQUMsQ0FBQztBQUM3Rkosa0JBQWUsR0FBR0ksTUFBTSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9kaWdlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBkaWdlc3QgPSAoYWxnb3JpdGhtLCBkYXRhKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlSGFzaCkoYWxnb3JpdGhtKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG5leHBvcnRzLmRlZmF1bHQgPSBkaWdlc3Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJkaWdlc3QiLCJhbGdvcml0aG0iLCJkYXRhIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction dsaDigest(alg) {\n  switch (alg) {\n    case 'PS256':\n    case 'RS256':\n    case 'ES256':\n    case 'ES256K':\n      return 'sha256';\n    case 'PS384':\n    case 'RS384':\n    case 'ES384':\n      return 'sha384';\n    case 'PS512':\n    case 'RS512':\n    case 'ES512':\n      return 'sha512';\n    case 'EdDSA':\n      return undefined;\n    default:\n      throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}\nexports[\"default\"] = dsaDigest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9kc2FfZGlnZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVcsR0FBR0MsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxTQUFTQyxTQUFTQSxDQUFDQyxHQUFHLEVBQUU7RUFDcEIsUUFBUUEsR0FBRztJQUNQLEtBQUssT0FBTztJQUNaLEtBQUssT0FBTztJQUNaLEtBQUssT0FBTztJQUNaLEtBQUssUUFBUTtNQUNULE9BQU8sUUFBUTtJQUNuQixLQUFLLE9BQU87SUFDWixLQUFLLE9BQU87SUFDWixLQUFLLE9BQU87TUFDUixPQUFPLFFBQVE7SUFDbkIsS0FBSyxPQUFPO0lBQ1osS0FBSyxPQUFPO0lBQ1osS0FBSyxPQUFPO01BQ1IsT0FBTyxRQUFRO0lBQ25CLEtBQUssT0FBTztNQUNSLE9BQU9DLFNBQVM7SUFDcEI7TUFDSSxNQUFNLElBQUlKLFdBQVcsQ0FBQ0ssZ0JBQWdCLENBQUUsT0FBTUYsR0FBSSw2REFBNEQsQ0FBQztFQUN2SDtBQUNKO0FBQ0FMLGtCQUFlLEdBQUdJLFNBQVMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZHNhX2RpZ2VzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gZHNhRGlnZXN0KGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ1BTMjU2JzpcbiAgICAgICAgY2FzZSAnUlMyNTYnOlxuICAgICAgICBjYXNlICdFUzI1Nic6XG4gICAgICAgIGNhc2UgJ0VTMjU2Syc6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTI1Nic7XG4gICAgICAgIGNhc2UgJ1BTMzg0JzpcbiAgICAgICAgY2FzZSAnUlMzODQnOlxuICAgICAgICBjYXNlICdFUzM4NCc6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTM4NCc7XG4gICAgICAgIGNhc2UgJ1BTNTEyJzpcbiAgICAgICAgY2FzZSAnUlM1MTInOlxuICAgICAgICBjYXNlICdFUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTUxMic7XG4gICAgICAgIGNhc2UgJ0VkRFNBJzpcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgYWxnICR7YWxnfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gZHNhRGlnZXN0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JzX2pzXzEiLCJyZXF1aXJlIiwiZHNhRGlnZXN0IiwiYWxnIiwidW5kZWZpbmVkIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ecdhes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ecdhes.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ecdhAllowed = exports.generateEpk = exports.deriveKey = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst generateKeyPair = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n  let publicKey;\n  if ((0, webcrypto_js_1.isCryptoKey)(publicKee)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(publicKee, 'ECDH');\n    publicKey = crypto_1.KeyObject.from(publicKee);\n  } else if ((0, is_key_object_js_1.default)(publicKee)) {\n    publicKey = publicKee;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(publicKee, ...is_key_like_js_1.types));\n  }\n  let privateKey;\n  if ((0, webcrypto_js_1.isCryptoKey)(privateKee)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(privateKee, 'ECDH', 'deriveBits');\n    privateKey = crypto_1.KeyObject.from(privateKee);\n  } else if ((0, is_key_object_js_1.default)(privateKee)) {\n    privateKey = privateKee;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(privateKee, ...is_key_like_js_1.types));\n  }\n  const value = (0, buffer_utils_js_1.concat)((0, buffer_utils_js_1.lengthAndInput)(buffer_utils_js_1.encoder.encode(algorithm)), (0, buffer_utils_js_1.lengthAndInput)(apu), (0, buffer_utils_js_1.lengthAndInput)(apv), (0, buffer_utils_js_1.uint32be)(keyLength));\n  const sharedSecret = (0, crypto_1.diffieHellman)({\n    privateKey,\n    publicKey\n  });\n  return (0, buffer_utils_js_1.concatKdf)(sharedSecret, keyLength, value);\n}\nexports.deriveKey = deriveKey;\nasync function generateEpk(kee) {\n  let key;\n  if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n    key = crypto_1.KeyObject.from(kee);\n  } else if ((0, is_key_object_js_1.default)(kee)) {\n    key = kee;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n  }\n  switch (key.asymmetricKeyType) {\n    case 'x25519':\n      return generateKeyPair('x25519');\n    case 'x448':\n      {\n        return generateKeyPair('x448');\n      }\n    case 'ec':\n      {\n        const namedCurve = (0, get_named_curve_js_1.default)(key);\n        return generateKeyPair('ec', {\n          namedCurve\n        });\n      }\n    default:\n      throw new errors_js_1.JOSENotSupported('Invalid or unsupported EPK');\n  }\n}\nexports.generateEpk = generateEpk;\nconst ecdhAllowed = key => ['P-256', 'P-384', 'P-521', 'X25519', 'X448'].includes((0, get_named_curve_js_1.default)(key));\nexports.ecdhAllowed = ecdhAllowed;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ecdhes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/encrypt.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/encrypt.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  if ((0, is_key_object_js_1.default)(cek)) {\n    cek = cek.export();\n  }\n  const encKey = cek.subarray(keySize >> 3);\n  const macKey = cek.subarray(0, keySize >> 3);\n  const algorithm = `aes-${keySize}-cbc`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const cipher = (0, crypto_1.createCipheriv)(algorithm, encKey, iv);\n  const ciphertext = (0, buffer_utils_js_1.concat)(cipher.update(plaintext), cipher.final());\n  const macSize = parseInt(enc.slice(-3), 10);\n  const tag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n  return {\n    ciphertext,\n    tag\n  };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const algorithm = `aes-${keySize}-gcm`;\n  if (!(0, ciphers_js_1.default)(algorithm)) {\n    throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n  }\n  const cipher = (0, crypto_1.createCipheriv)(algorithm, cek, iv, {\n    authTagLength: 16\n  });\n  if (aad.byteLength) {\n    cipher.setAAD(aad, {\n      plaintextLength: plaintext.length\n    });\n  }\n  const ciphertext = cipher.update(plaintext);\n  cipher.final();\n  const tag = cipher.getAuthTag();\n  return {\n    ciphertext,\n    tag\n  };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad) => {\n  let key;\n  if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, 'encrypt');\n    key = crypto_1.KeyObject.from(cek);\n  } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n    key = cek;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, 'Uint8Array'));\n  }\n  (0, check_cek_length_js_1.default)(enc, key);\n  (0, check_iv_length_js_1.default)(enc, iv);\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      return cbcEncrypt(enc, plaintext, key, iv, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      return gcmEncrypt(enc, plaintext, key, iv, aad);\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexports[\"default\"] = encrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/encrypt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst fetchJwks = async (url, timeout, options) => {\n  let get;\n  switch (url.protocol) {\n    case 'https:':\n      get = https.get;\n      break;\n    case 'http:':\n      get = http.get;\n      break;\n    default:\n      throw new TypeError('Unsupported URL protocol.');\n  }\n  const {\n    agent,\n    headers\n  } = options;\n  const req = get(url.href, {\n    agent,\n    timeout,\n    headers\n  });\n  const [response] = await Promise.race([(0, events_1.once)(req, 'response'), (0, events_1.once)(req, 'timeout')]);\n  if (!response) {\n    req.destroy();\n    throw new errors_js_1.JWKSTimeout();\n  }\n  if (response.statusCode !== 200) {\n    throw new errors_js_1.JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n  }\n  const parts = [];\n  for await (const part of response) {\n    parts.push(part);\n  }\n  try {\n    return JSON.parse(buffer_utils_js_1.decoder.decode((0, buffer_utils_js_1.concat)(...parts)));\n  } catch {\n    throw new errors_js_1.JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n  }\n};\nexports[\"default\"] = fetchJwks;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9mZXRjaF9qd2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLElBQUksR0FBR0MsbUJBQU8sQ0FBQyxrQkFBTSxDQUFDO0FBQzVCLE1BQU1DLEtBQUssR0FBR0QsbUJBQU8sQ0FBQyxvQkFBTyxDQUFDO0FBQzlCLE1BQU1FLFFBQVEsR0FBR0YsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1HLFdBQVcsR0FBR0gsbUJBQU8sQ0FBQyx3R0FBbUIsQ0FBQztBQUNoRCxNQUFNSSxpQkFBaUIsR0FBR0osbUJBQU8sQ0FBQyxrSEFBd0IsQ0FBQztBQUMzRCxNQUFNSyxTQUFTLEdBQUcsTUFBQUEsQ0FBT0MsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sS0FBSztFQUMvQyxJQUFJQyxHQUFHO0VBQ1AsUUFBUUgsR0FBRyxDQUFDSSxRQUFRO0lBQ2hCLEtBQUssUUFBUTtNQUNURCxHQUFHLEdBQUdSLEtBQUssQ0FBQ1EsR0FBRztNQUNmO0lBQ0osS0FBSyxPQUFPO01BQ1JBLEdBQUcsR0FBR1YsSUFBSSxDQUFDVSxHQUFHO01BQ2Q7SUFDSjtNQUNJLE1BQU0sSUFBSUUsU0FBUyxDQUFDLDJCQUEyQixDQUFDO0VBQ3hEO0VBQ0EsTUFBTTtJQUFFQyxLQUFLO0lBQUVDO0VBQVEsQ0FBQyxHQUFHTCxPQUFPO0VBQ2xDLE1BQU1NLEdBQUcsR0FBR0wsR0FBRyxDQUFDSCxHQUFHLENBQUNTLElBQUksRUFBRTtJQUN0QkgsS0FBSztJQUNMTCxPQUFPO0lBQ1BNO0VBQ0osQ0FBQyxDQUFDO0VBQ0YsTUFBTSxDQUFDRyxRQUFRLENBQUMsR0FBSSxNQUFNQyxPQUFPLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFaEIsUUFBUSxDQUFDaUIsSUFBSSxFQUFFTCxHQUFHLEVBQUUsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUVaLFFBQVEsQ0FBQ2lCLElBQUksRUFBRUwsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUU7RUFDbEgsSUFBSSxDQUFDRSxRQUFRLEVBQUU7SUFDWEYsR0FBRyxDQUFDTSxPQUFPLENBQUMsQ0FBQztJQUNiLE1BQU0sSUFBSWpCLFdBQVcsQ0FBQ2tCLFdBQVcsQ0FBQyxDQUFDO0VBQ3ZDO0VBQ0EsSUFBSUwsUUFBUSxDQUFDTSxVQUFVLEtBQUssR0FBRyxFQUFFO0lBQzdCLE1BQU0sSUFBSW5CLFdBQVcsQ0FBQ29CLFNBQVMsQ0FBQyx5REFBeUQsQ0FBQztFQUM5RjtFQUNBLE1BQU1DLEtBQUssR0FBRyxFQUFFO0VBQ2hCLFdBQVcsTUFBTUMsSUFBSSxJQUFJVCxRQUFRLEVBQUU7SUFDL0JRLEtBQUssQ0FBQ0UsSUFBSSxDQUFDRCxJQUFJLENBQUM7RUFDcEI7RUFDQSxJQUFJO0lBQ0EsT0FBT0UsSUFBSSxDQUFDQyxLQUFLLENBQUN4QixpQkFBaUIsQ0FBQ3lCLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFMUIsaUJBQWlCLENBQUMyQixNQUFNLEVBQUUsR0FBR1AsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUNoRyxDQUFDLENBQ0QsTUFBTTtJQUNGLE1BQU0sSUFBSXJCLFdBQVcsQ0FBQ29CLFNBQVMsQ0FBQyw0REFBNEQsQ0FBQztFQUNqRztBQUNKLENBQUM7QUFDRDFCLGtCQUFlLEdBQUdRLFNBQVMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmV0Y2hfandrcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGh0dHAgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IGh0dHBzID0gcmVxdWlyZShcImh0dHBzXCIpO1xuY29uc3QgZXZlbnRzXzEgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgZmV0Y2hKd2tzID0gYXN5bmMgKHVybCwgdGltZW91dCwgb3B0aW9ucykgPT4ge1xuICAgIGxldCBnZXQ7XG4gICAgc3dpdGNoICh1cmwucHJvdG9jb2wpIHtcbiAgICAgICAgY2FzZSAnaHR0cHM6JzpcbiAgICAgICAgICAgIGdldCA9IGh0dHBzLmdldDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdodHRwOic6XG4gICAgICAgICAgICBnZXQgPSBodHRwLmdldDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5zdXBwb3J0ZWQgVVJMIHByb3RvY29sLicpO1xuICAgIH1cbiAgICBjb25zdCB7IGFnZW50LCBoZWFkZXJzIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHJlcSA9IGdldCh1cmwuaHJlZiwge1xuICAgICAgICBhZ2VudCxcbiAgICAgICAgdGltZW91dCxcbiAgICAgICAgaGVhZGVycyxcbiAgICB9KTtcbiAgICBjb25zdCBbcmVzcG9uc2VdID0gKGF3YWl0IFByb21pc2UucmFjZShbKDAsIGV2ZW50c18xLm9uY2UpKHJlcSwgJ3Jlc3BvbnNlJyksICgwLCBldmVudHNfMS5vbmNlKShyZXEsICd0aW1lb3V0JyldKSk7XG4gICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICByZXEuZGVzdHJveSgpO1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldLU1RpbWVvdXQoKTtcbiAgICB9XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgIT09IDIwMCkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRUVycm9yKCdFeHBlY3RlZCAyMDAgT0sgZnJvbSB0aGUgSlNPTiBXZWIgS2V5IFNldCBIVFRQIHJlc3BvbnNlJyk7XG4gICAgfVxuICAgIGNvbnN0IHBhcnRzID0gW107XG4gICAgZm9yIGF3YWl0IChjb25zdCBwYXJ0IG9mIHJlc3BvbnNlKSB7XG4gICAgICAgIHBhcnRzLnB1c2gocGFydCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKCgwLCBidWZmZXJfdXRpbHNfanNfMS5jb25jYXQpKC4uLnBhcnRzKSkpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFRXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSB0aGUgSlNPTiBXZWIgS2V5IFNldCBIVFRQIHJlc3BvbnNlIGFzIEpTT04nKTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gZmV0Y2hKd2tzO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cCIsInJlcXVpcmUiLCJodHRwcyIsImV2ZW50c18xIiwiZXJyb3JzX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsImZldGNoSndrcyIsInVybCIsInRpbWVvdXQiLCJvcHRpb25zIiwiZ2V0IiwicHJvdG9jb2wiLCJUeXBlRXJyb3IiLCJhZ2VudCIsImhlYWRlcnMiLCJyZXEiLCJocmVmIiwicmVzcG9uc2UiLCJQcm9taXNlIiwicmFjZSIsIm9uY2UiLCJkZXN0cm95IiwiSldLU1RpbWVvdXQiLCJzdGF0dXNDb2RlIiwiSk9TRUVycm9yIiwicGFydHMiLCJwYXJ0IiwicHVzaCIsIkpTT04iLCJwYXJzZSIsImRlY29kZXIiLCJkZWNvZGUiLCJjb25jYXQiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.jwkImport = exports.jwkExport = exports.rsaPssParams = exports.oneShotCallback = void 0;\nconst [major, minor] = process.versions.node.split('.').map(str => parseInt(str, 10));\nexports.oneShotCallback = major >= 16 || major === 15 && minor >= 13;\nexports.rsaPssParams = !('electron' in process.versions) && (major >= 17 || major === 16 && minor >= 9);\nexports.jwkExport = major >= 16 || major === 15 && minor >= 9;\nexports.jwkImport = major >= 16 || major === 15 && minor >= 12;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9mbGFncy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLGlCQUFpQixHQUFHQSxvQkFBb0IsR0FBR0EsdUJBQXVCLEdBQUcsS0FBSyxDQUFDO0FBQy9GLE1BQU0sQ0FBQ00sS0FBSyxFQUFFQyxLQUFLLENBQUMsR0FBR0MsT0FBTyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxHQUFHLENBQUVDLEdBQUcsSUFBS0MsUUFBUSxDQUFDRCxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDdkZiLHVCQUF1QixHQUFHTSxLQUFLLElBQUksRUFBRSxJQUFLQSxLQUFLLEtBQUssRUFBRSxJQUFJQyxLQUFLLElBQUksRUFBRztBQUN0RVAsb0JBQW9CLEdBQUcsRUFBRSxVQUFVLElBQUlRLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLEtBQUtILEtBQUssSUFBSSxFQUFFLElBQUtBLEtBQUssS0FBSyxFQUFFLElBQUlDLEtBQUssSUFBSSxDQUFFLENBQUM7QUFDekdQLGlCQUFpQixHQUFHTSxLQUFLLElBQUksRUFBRSxJQUFLQSxLQUFLLEtBQUssRUFBRSxJQUFJQyxLQUFLLElBQUksQ0FBRTtBQUMvRFAsaUJBQWlCLEdBQUdNLEtBQUssSUFBSSxFQUFFLElBQUtBLEtBQUssS0FBSyxFQUFFLElBQUlDLEtBQUssSUFBSSxFQUFHIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2ZsYWdzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qd2tJbXBvcnQgPSBleHBvcnRzLmp3a0V4cG9ydCA9IGV4cG9ydHMucnNhUHNzUGFyYW1zID0gZXhwb3J0cy5vbmVTaG90Q2FsbGJhY2sgPSB2b2lkIDA7XG5jb25zdCBbbWFqb3IsIG1pbm9yXSA9IHByb2Nlc3MudmVyc2lvbnMubm9kZS5zcGxpdCgnLicpLm1hcCgoc3RyKSA9PiBwYXJzZUludChzdHIsIDEwKSk7XG5leHBvcnRzLm9uZVNob3RDYWxsYmFjayA9IG1ham9yID49IDE2IHx8IChtYWpvciA9PT0gMTUgJiYgbWlub3IgPj0gMTMpO1xuZXhwb3J0cy5yc2FQc3NQYXJhbXMgPSAhKCdlbGVjdHJvbicgaW4gcHJvY2Vzcy52ZXJzaW9ucykgJiYgKG1ham9yID49IDE3IHx8IChtYWpvciA9PT0gMTYgJiYgbWlub3IgPj0gOSkpO1xuZXhwb3J0cy5qd2tFeHBvcnQgPSBtYWpvciA+PSAxNiB8fCAobWFqb3IgPT09IDE1ICYmIG1pbm9yID49IDkpO1xuZXhwb3J0cy5qd2tJbXBvcnQgPSBtYWpvciA+PSAxNiB8fCAobWFqb3IgPT09IDE1ICYmIG1pbm9yID49IDEyKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImp3a0ltcG9ydCIsImp3a0V4cG9ydCIsInJzYVBzc1BhcmFtcyIsIm9uZVNob3RDYWxsYmFjayIsIm1ham9yIiwibWlub3IiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJub2RlIiwic3BsaXQiLCJtYXAiLCJzdHIiLCJwYXJzZUludCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/generate.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/generate.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateKeyPair = exports.generateSecret = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst generate = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function generateSecret(alg, options) {\n  let length;\n  switch (alg) {\n    case 'HS256':\n    case 'HS384':\n    case 'HS512':\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      length = parseInt(alg.slice(-3), 10);\n      break;\n    case 'A128KW':\n    case 'A192KW':\n    case 'A256KW':\n    case 'A128GCMKW':\n    case 'A192GCMKW':\n    case 'A256GCMKW':\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      length = parseInt(alg.slice(1, 4), 10);\n      break;\n    default:\n      throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n  }\n  return (0, crypto_1.createSecretKey)((0, random_js_1.default)(new Uint8Array(length >> 3)));\n}\nexports.generateSecret = generateSecret;\nasync function generateKeyPair(alg, options) {\n  var _a, _b;\n  switch (alg) {\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n    case 'PS256':\n    case 'PS384':\n    case 'PS512':\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n    case 'RSA1_5':\n      {\n        const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n          throw new errors_js_1.JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n        }\n        const keypair = await generate('rsa', {\n          modulusLength,\n          publicExponent: 0x10001\n        });\n        (0, check_modulus_length_js_1.setModulusLength)(keypair.privateKey, modulusLength);\n        (0, check_modulus_length_js_1.setModulusLength)(keypair.publicKey, modulusLength);\n        return keypair;\n      }\n    case 'ES256':\n      return generate('ec', {\n        namedCurve: 'P-256'\n      });\n    case 'ES256K':\n      return generate('ec', {\n        namedCurve: 'secp256k1'\n      });\n    case 'ES384':\n      return generate('ec', {\n        namedCurve: 'P-384'\n      });\n    case 'ES512':\n      return generate('ec', {\n        namedCurve: 'P-521'\n      });\n    case 'EdDSA':\n      {\n        switch (options === null || options === void 0 ? void 0 : options.crv) {\n          case undefined:\n          case 'Ed25519':\n            return generate('ed25519');\n          case 'Ed448':\n            return generate('ed448');\n          default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n        }\n      }\n    case 'ECDH-ES':\n    case 'ECDH-ES+A128KW':\n    case 'ECDH-ES+A192KW':\n    case 'ECDH-ES+A256KW':\n      const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n      switch (crv) {\n        case undefined:\n        case 'P-256':\n        case 'P-384':\n        case 'P-521':\n          return generate('ec', {\n            namedCurve: crv\n          });\n        case 'X25519':\n          return generate('x25519');\n        case 'X448':\n          return generate('x448');\n        default:\n          throw new errors_js_1.JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n      }\n    default:\n      throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n  }\n}\nexports.generateKeyPair = generateKeyPair;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/generate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.setCurve = exports.weakMap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst p256 = buffer_1.Buffer.from([42, 134, 72, 206, 61, 3, 1, 7]);\nconst p384 = buffer_1.Buffer.from([43, 129, 4, 0, 34]);\nconst p521 = buffer_1.Buffer.from([43, 129, 4, 0, 35]);\nconst secp256k1 = buffer_1.Buffer.from([43, 129, 4, 0, 10]);\nexports.weakMap = new WeakMap();\nconst namedCurveToJOSE = namedCurve => {\n  switch (namedCurve) {\n    case 'prime256v1':\n      return 'P-256';\n    case 'secp384r1':\n      return 'P-384';\n    case 'secp521r1':\n      return 'P-521';\n    case 'secp256k1':\n      return 'secp256k1';\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n  }\n};\nconst getNamedCurve = (kee, raw) => {\n  var _a;\n  let key;\n  if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n    key = crypto_1.KeyObject.from(kee);\n  } else if ((0, is_key_object_js_1.default)(kee)) {\n    key = kee;\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n  }\n  if (key.type === 'secret') {\n    throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n  }\n  switch (key.asymmetricKeyType) {\n    case 'ed25519':\n    case 'ed448':\n      return `Ed${key.asymmetricKeyType.slice(2)}`;\n    case 'x25519':\n    case 'x448':\n      return `X${key.asymmetricKeyType.slice(1)}`;\n    case 'ec':\n      {\n        if (exports.weakMap.has(key)) {\n          return exports.weakMap.get(key);\n        }\n        let namedCurve = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.namedCurve;\n        if (!namedCurve && key.type === 'private') {\n          namedCurve = getNamedCurve((0, crypto_1.createPublicKey)(key), true);\n        } else if (!namedCurve) {\n          const buf = key.export({\n            format: 'der',\n            type: 'spki'\n          });\n          const i = buf[1] < 128 ? 14 : 15;\n          const len = buf[i];\n          const curveOid = buf.slice(i + 1, i + 1 + len);\n          if (curveOid.equals(p256)) {\n            namedCurve = 'prime256v1';\n          } else if (curveOid.equals(p384)) {\n            namedCurve = 'secp384r1';\n          } else if (curveOid.equals(p521)) {\n            namedCurve = 'secp521r1';\n          } else if (curveOid.equals(secp256k1)) {\n            namedCurve = 'secp256k1';\n          } else {\n            throw new errors_js_1.JOSENotSupported('Unsupported key curve for this operation');\n          }\n        }\n        if (raw) return namedCurve;\n        const curve = namedCurveToJOSE(namedCurve);\n        exports.weakMap.set(key, curve);\n        return curve;\n      }\n    default:\n      throw new TypeError('Invalid asymmetric key type for this operation');\n  }\n};\nfunction setCurve(keyObject, curve) {\n  exports.weakMap.set(keyObject, curve);\n}\nexports.setCurve = setCurve;\nexports[\"default\"] = getNamedCurve;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction getSignVerifyKey(alg, key, usage) {\n  if (key instanceof Uint8Array) {\n    if (!alg.startsWith('HS')) {\n      throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n    }\n    return (0, crypto_1.createSecretKey)(key);\n  }\n  if (key instanceof crypto_1.KeyObject) {\n    return key;\n  }\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    (0, crypto_key_js_1.checkSigCryptoKey)(key, alg, usage);\n    return crypto_1.KeyObject.from(key);\n  }\n  throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nexports[\"default\"] = getSignVerifyKey;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9nZXRfc2lnbl92ZXJpZnlfa2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1DLGNBQWMsR0FBR0QsbUJBQU8sQ0FBQywyR0FBZ0IsQ0FBQztBQUNoRCxNQUFNRSxlQUFlLEdBQUdGLG1CQUFPLENBQUMsOEdBQXNCLENBQUM7QUFDdkQsTUFBTUcsc0JBQXNCLEdBQUdILG1CQUFPLENBQUMsNEhBQTZCLENBQUM7QUFDckUsTUFBTUksZ0JBQWdCLEdBQUdKLG1CQUFPLENBQUMsK0dBQWtCLENBQUM7QUFDcEQsU0FBU0ssZ0JBQWdCQSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSyxFQUFFO0VBQ3ZDLElBQUlELEdBQUcsWUFBWUUsVUFBVSxFQUFFO0lBQzNCLElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7TUFDdkIsTUFBTSxJQUFJQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUVSLHNCQUFzQixDQUFDUyxPQUFPLEVBQUVMLEdBQUcsRUFBRSxHQUFHSCxnQkFBZ0IsQ0FBQ1MsS0FBSyxDQUFDLENBQUM7SUFDNUY7SUFDQSxPQUFPLENBQUMsQ0FBQyxFQUFFZCxRQUFRLENBQUNlLGVBQWUsRUFBRVAsR0FBRyxDQUFDO0VBQzdDO0VBQ0EsSUFBSUEsR0FBRyxZQUFZUixRQUFRLENBQUNnQixTQUFTLEVBQUU7SUFDbkMsT0FBT1IsR0FBRztFQUNkO0VBQ0EsSUFBSSxDQUFDLENBQUMsRUFBRU4sY0FBYyxDQUFDZSxXQUFXLEVBQUVULEdBQUcsQ0FBQyxFQUFFO0lBQ3RDLENBQUMsQ0FBQyxFQUFFTCxlQUFlLENBQUNlLGlCQUFpQixFQUFFVixHQUFHLEVBQUVELEdBQUcsRUFBRUUsS0FBSyxDQUFDO0lBQ3ZELE9BQU9ULFFBQVEsQ0FBQ2dCLFNBQVMsQ0FBQ0csSUFBSSxDQUFDWCxHQUFHLENBQUM7RUFDdkM7RUFDQSxNQUFNLElBQUlJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRVIsc0JBQXNCLENBQUNTLE9BQU8sRUFBRUwsR0FBRyxFQUFFLEdBQUdILGdCQUFnQixDQUFDUyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFDMUc7QUFDQWhCLGtCQUFlLEdBQUdRLGdCQUFnQiIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9nZXRfc2lnbl92ZXJpZnlfa2V5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmZ1bmN0aW9uIGdldFNpZ25WZXJpZnlLZXkoYWxnLCBrZXksIHVzYWdlKSB7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgaWYgKCFhbGcuc3RhcnRzV2l0aCgnSFMnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIGNyeXB0b18xLmNyZWF0ZVNlY3JldEtleSkoa2V5KTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIGNyeXB0b18xLktleU9iamVjdCkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgICgwLCBjcnlwdG9fa2V5X2pzXzEuY2hlY2tTaWdDcnlwdG9LZXkpKGtleSwgYWxnLCB1c2FnZSk7XG4gICAgICAgIHJldHVybiBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLmRlZmF1bHQpKGtleSwgLi4uaXNfa2V5X2xpa2VfanNfMS50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRTaWduVmVyaWZ5S2V5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImdldFNpZ25WZXJpZnlLZXkiLCJhbGciLCJrZXkiLCJ1c2FnZSIsIlVpbnQ4QXJyYXkiLCJzdGFydHNXaXRoIiwiVHlwZUVycm9yIiwiZGVmYXVsdCIsInR5cGVzIiwiY3JlYXRlU2VjcmV0S2V5IiwiS2V5T2JqZWN0IiwiaXNDcnlwdG9LZXkiLCJjaGVja1NpZ0NyeXB0b0tleSIsImZyb20iXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/hmac_digest.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/hmac_digest.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction hmacDigest(alg) {\n  switch (alg) {\n    case 'HS256':\n      return 'sha256';\n    case 'HS384':\n      return 'sha384';\n    case 'HS512':\n      return 'sha512';\n    default:\n      throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}\nexports[\"default\"] = hmacDigest;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9obWFjX2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXLEdBQUdDLG1CQUFPLENBQUMsd0dBQW1CLENBQUM7QUFDaEQsU0FBU0MsVUFBVUEsQ0FBQ0MsR0FBRyxFQUFFO0VBQ3JCLFFBQVFBLEdBQUc7SUFDUCxLQUFLLE9BQU87TUFDUixPQUFPLFFBQVE7SUFDbkIsS0FBSyxPQUFPO01BQ1IsT0FBTyxRQUFRO0lBQ25CLEtBQUssT0FBTztNQUNSLE9BQU8sUUFBUTtJQUNuQjtNQUNJLE1BQU0sSUFBSUgsV0FBVyxDQUFDSSxnQkFBZ0IsQ0FBRSxPQUFNRCxHQUFJLDZEQUE0RCxDQUFDO0VBQ3ZIO0FBQ0o7QUFDQUwsa0JBQWUsR0FBR0ksVUFBVSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9obWFjX2RpZ2VzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gaG1hY0RpZ2VzdChhbGcpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdIUzI1Nic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTI1Nic7XG4gICAgICAgIGNhc2UgJ0hTMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMzg0JztcbiAgICAgICAgY2FzZSAnSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuICdzaGE1MTInO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYGFsZyAke2FsZ30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGhtYWNEaWdlc3Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJobWFjRGlnZXN0IiwiYWxnIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.types = void 0;\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nexports[\"default\"] = key => (0, is_key_object_js_1.default)(key) || (0, webcrypto_js_1.isCryptoKey)(key);\nconst types = ['KeyObject'];\nexports.types = types;\nif (globalThis.CryptoKey || (webcrypto_js_1.default === null || webcrypto_js_1.default === void 0 ? void 0 : webcrypto_js_1.default.CryptoKey)) {\n  types.push('CryptoKey');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9pc19rZXlfbGlrZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUssQ0FBQztBQUN0QixNQUFNRyxjQUFjLEdBQUdDLG1CQUFPLENBQUMsMkdBQWdCLENBQUM7QUFDaEQsTUFBTUMsa0JBQWtCLEdBQUdELG1CQUFPLENBQUMsbUhBQW9CLENBQUM7QUFDeERKLGtCQUFlLEdBQUlPLEdBQUcsSUFBSyxDQUFDLENBQUMsRUFBRUYsa0JBQWtCLENBQUNDLE9BQU8sRUFBRUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUVKLGNBQWMsQ0FBQ0ssV0FBVyxFQUFFRCxHQUFHLENBQUM7QUFDdkcsTUFBTUwsS0FBSyxHQUFHLENBQUMsV0FBVyxDQUFDO0FBQzNCRixhQUFhLEdBQUdFLEtBQUs7QUFDckIsSUFBSU8sVUFBVSxDQUFDQyxTQUFTLEtBQUtQLGNBQWMsQ0FBQ0csT0FBTyxLQUFLLElBQUksSUFBSUgsY0FBYyxDQUFDRyxPQUFPLEtBQUssS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUdILGNBQWMsQ0FBQ0csT0FBTyxDQUFDSSxTQUFTLENBQUMsRUFBRTtFQUM1SVIsS0FBSyxDQUFDUyxJQUFJLENBQUMsV0FBVyxDQUFDO0FBQzNCIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2lzX2tleV9saWtlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50eXBlcyA9IHZvaWQgMDtcbmNvbnN0IHdlYmNyeXB0b19qc18xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvLmpzXCIpO1xuY29uc3QgaXNfa2V5X29iamVjdF9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X29iamVjdC5qc1wiKTtcbmV4cG9ydHMuZGVmYXVsdCA9IChrZXkpID0+ICgwLCBpc19rZXlfb2JqZWN0X2pzXzEuZGVmYXVsdCkoa2V5KSB8fCAoMCwgd2ViY3J5cHRvX2pzXzEuaXNDcnlwdG9LZXkpKGtleSk7XG5jb25zdCB0eXBlcyA9IFsnS2V5T2JqZWN0J107XG5leHBvcnRzLnR5cGVzID0gdHlwZXM7XG5pZiAoZ2xvYmFsVGhpcy5DcnlwdG9LZXkgfHwgKHdlYmNyeXB0b19qc18xLmRlZmF1bHQgPT09IG51bGwgfHwgd2ViY3J5cHRvX2pzXzEuZGVmYXVsdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2ViY3J5cHRvX2pzXzEuZGVmYXVsdC5DcnlwdG9LZXkpKSB7XG4gICAgdHlwZXMucHVzaCgnQ3J5cHRvS2V5Jyk7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0eXBlcyIsIndlYmNyeXB0b19qc18xIiwicmVxdWlyZSIsImlzX2tleV9vYmplY3RfanNfMSIsImRlZmF1bHQiLCJrZXkiLCJpc0NyeXB0b0tleSIsImdsb2JhbFRoaXMiLCJDcnlwdG9LZXkiLCJwdXNoIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nexports[\"default\"] = util.types.isKeyObject ? obj => util.types.isKeyObject(obj) : obj => obj != null && obj instanceof crypto_1.KeyObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9pc19rZXlfb2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1DLElBQUksR0FBR0QsbUJBQU8sQ0FBQyxrQkFBTSxDQUFDO0FBQzVCSCxrQkFBZSxHQUFHSSxJQUFJLENBQUNFLEtBQUssQ0FBQ0MsV0FBVyxHQUNqQ0MsR0FBRyxJQUFLSixJQUFJLENBQUNFLEtBQUssQ0FBQ0MsV0FBVyxDQUFDQyxHQUFHLENBQUMsR0FDbkNBLEdBQUcsSUFBS0EsR0FBRyxJQUFJLElBQUksSUFBSUEsR0FBRyxZQUFZTixRQUFRLENBQUNPLFNBQVMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X29iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHV0aWwudHlwZXMuaXNLZXlPYmplY3RcbiAgICA/IChvYmopID0+IHV0aWwudHlwZXMuaXNLZXlPYmplY3Qob2JqKVxuICAgIDogKG9iaikgPT4gb2JqICE9IG51bGwgJiYgb2JqIGluc3RhbmNlb2YgY3J5cHRvXzEuS2V5T2JqZWN0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwidXRpbCIsImRlZmF1bHQiLCJ0eXBlcyIsImlzS2V5T2JqZWN0Iiwib2JqIiwiS2V5T2JqZWN0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst asn1_sequence_encoder_js_1 = __webpack_require__(/*! ./asn1_sequence_encoder.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst parse = jwk => {\n  if (flags_js_1.jwkImport && jwk.kty !== 'oct') {\n    return jwk.d ? (0, crypto_1.createPrivateKey)({\n      format: 'jwk',\n      key: jwk\n    }) : (0, crypto_1.createPublicKey)({\n      format: 'jwk',\n      key: jwk\n    });\n  }\n  switch (jwk.kty) {\n    case 'oct':\n      {\n        return (0, crypto_1.createSecretKey)((0, base64url_js_1.decode)(jwk.k));\n      }\n    case 'RSA':\n      {\n        const enc = new asn1_sequence_encoder_js_1.default();\n        const isPrivate = jwk.d !== undefined;\n        const modulus = buffer_1.Buffer.from(jwk.n, 'base64');\n        const exponent = buffer_1.Buffer.from(jwk.e, 'base64');\n        if (isPrivate) {\n          enc.zero();\n          enc.unsignedInteger(modulus);\n          enc.unsignedInteger(exponent);\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.d, 'base64'));\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.p, 'base64'));\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.q, 'base64'));\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.dp, 'base64'));\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.dq, 'base64'));\n          enc.unsignedInteger(buffer_1.Buffer.from(jwk.qi, 'base64'));\n        } else {\n          enc.unsignedInteger(modulus);\n          enc.unsignedInteger(exponent);\n        }\n        const der = enc.end();\n        const createInput = {\n          key: der,\n          format: 'der',\n          type: 'pkcs1'\n        };\n        const keyObject = isPrivate ? (0, crypto_1.createPrivateKey)(createInput) : (0, crypto_1.createPublicKey)(createInput);\n        (0, check_modulus_length_js_1.setModulusLength)(keyObject, modulus.length << 3);\n        return keyObject;\n      }\n    case 'EC':\n      {\n        const enc = new asn1_sequence_encoder_js_1.default();\n        const isPrivate = jwk.d !== undefined;\n        const pub = buffer_1.Buffer.concat([buffer_1.Buffer.alloc(1, 4), buffer_1.Buffer.from(jwk.x, 'base64'), buffer_1.Buffer.from(jwk.y, 'base64')]);\n        if (isPrivate) {\n          enc.zero();\n          const enc$1 = new asn1_sequence_encoder_js_1.default();\n          enc$1.oidFor('ecPublicKey');\n          enc$1.oidFor(jwk.crv);\n          enc.add(enc$1.end());\n          const enc$2 = new asn1_sequence_encoder_js_1.default();\n          enc$2.one();\n          enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n          const enc$3 = new asn1_sequence_encoder_js_1.default();\n          enc$3.bitStr(pub);\n          const f2 = enc$3.end(buffer_1.Buffer.from([0xa1]));\n          enc$2.add(f2);\n          const f = enc$2.end();\n          const enc$4 = new asn1_sequence_encoder_js_1.default();\n          enc$4.add(f);\n          const f3 = enc$4.end(buffer_1.Buffer.from([0x04]));\n          enc.add(f3);\n          const der = enc.end();\n          const keyObject = (0, crypto_1.createPrivateKey)({\n            key: der,\n            format: 'der',\n            type: 'pkcs8'\n          });\n          (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n          return keyObject;\n        }\n        const enc$1 = new asn1_sequence_encoder_js_1.default();\n        enc$1.oidFor('ecPublicKey');\n        enc$1.oidFor(jwk.crv);\n        enc.add(enc$1.end());\n        enc.bitStr(pub);\n        const der = enc.end();\n        const keyObject = (0, crypto_1.createPublicKey)({\n          key: der,\n          format: 'der',\n          type: 'spki'\n        });\n        (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n        return keyObject;\n      }\n    case 'OKP':\n      {\n        const enc = new asn1_sequence_encoder_js_1.default();\n        const isPrivate = jwk.d !== undefined;\n        if (isPrivate) {\n          enc.zero();\n          const enc$1 = new asn1_sequence_encoder_js_1.default();\n          enc$1.oidFor(jwk.crv);\n          enc.add(enc$1.end());\n          const enc$2 = new asn1_sequence_encoder_js_1.default();\n          enc$2.octStr(buffer_1.Buffer.from(jwk.d, 'base64'));\n          const f = enc$2.end(buffer_1.Buffer.from([0x04]));\n          enc.add(f);\n          const der = enc.end();\n          return (0, crypto_1.createPrivateKey)({\n            key: der,\n            format: 'der',\n            type: 'pkcs8'\n          });\n        }\n        const enc$1 = new asn1_sequence_encoder_js_1.default();\n        enc$1.oidFor(jwk.crv);\n        enc.add(enc$1.end());\n        enc.bitStr(buffer_1.Buffer.from(jwk.x, 'base64'));\n        const der = enc.end();\n        return (0, crypto_1.createPublicKey)({\n          key: der,\n          format: 'der',\n          type: 'spki'\n        });\n      }\n    default:\n      throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n  }\n};\nexports[\"default\"] = parse;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_sequence_decoder_js_1 = __webpack_require__(/*! ./asn1_sequence_decoder.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst keyToJWK = key => {\n  let keyObject;\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    if (!key.extractable) {\n      throw new TypeError('CryptoKey is not extractable');\n    }\n    keyObject = crypto_1.KeyObject.from(key);\n  } else if ((0, is_key_object_js_1.default)(key)) {\n    keyObject = key;\n  } else if (key instanceof Uint8Array) {\n    return {\n      kty: 'oct',\n      k: (0, base64url_js_1.encode)(key)\n    };\n  } else {\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n  }\n  if (flags_js_1.jwkExport) {\n    if (keyObject.type !== 'secret' && !['rsa', 'ec', 'ed25519', 'x25519', 'ed448', 'x448'].includes(keyObject.asymmetricKeyType)) {\n      throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n    }\n    return keyObject.export({\n      format: 'jwk'\n    });\n  }\n  switch (keyObject.type) {\n    case 'secret':\n      return {\n        kty: 'oct',\n        k: (0, base64url_js_1.encode)(keyObject.export())\n      };\n    case 'private':\n    case 'public':\n      {\n        switch (keyObject.asymmetricKeyType) {\n          case 'rsa':\n            {\n              const der = keyObject.export({\n                format: 'der',\n                type: 'pkcs1'\n              });\n              const dec = new asn1_sequence_decoder_js_1.default(der);\n              if (keyObject.type === 'private') {\n                dec.unsignedInteger();\n              }\n              const n = (0, base64url_js_1.encode)(dec.unsignedInteger());\n              const e = (0, base64url_js_1.encode)(dec.unsignedInteger());\n              let jwk;\n              if (keyObject.type === 'private') {\n                jwk = {\n                  d: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                  p: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                  q: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                  dp: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                  dq: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                  qi: (0, base64url_js_1.encode)(dec.unsignedInteger())\n                };\n              }\n              dec.end();\n              return _objectSpread({\n                kty: 'RSA',\n                n,\n                e\n              }, jwk);\n            }\n          case 'ec':\n            {\n              const crv = (0, get_named_curve_js_1.default)(keyObject);\n              let len;\n              let offset;\n              let correction;\n              switch (crv) {\n                case 'secp256k1':\n                  len = 64;\n                  offset = 31 + 2;\n                  correction = -1;\n                  break;\n                case 'P-256':\n                  len = 64;\n                  offset = 34 + 2;\n                  correction = -1;\n                  break;\n                case 'P-384':\n                  len = 96;\n                  offset = 33 + 2;\n                  correction = -3;\n                  break;\n                case 'P-521':\n                  len = 132;\n                  offset = 33 + 2;\n                  correction = -3;\n                  break;\n                default:\n                  throw new errors_js_1.JOSENotSupported('Unsupported curve');\n              }\n              if (keyObject.type === 'public') {\n                const der = keyObject.export({\n                  type: 'spki',\n                  format: 'der'\n                });\n                return {\n                  kty: 'EC',\n                  crv,\n                  x: (0, base64url_js_1.encode)(der.subarray(-len, -len / 2)),\n                  y: (0, base64url_js_1.encode)(der.subarray(-len / 2))\n                };\n              }\n              const der = keyObject.export({\n                type: 'pkcs8',\n                format: 'der'\n              });\n              if (der.length < 100) {\n                offset += correction;\n              }\n              return _objectSpread(_objectSpread({}, keyToJWK((0, crypto_1.createPublicKey)(keyObject))), {}, {\n                d: (0, base64url_js_1.encode)(der.subarray(offset, offset + len / 2))\n              });\n            }\n          case 'ed25519':\n          case 'x25519':\n            {\n              const crv = (0, get_named_curve_js_1.default)(keyObject);\n              if (keyObject.type === 'public') {\n                const der = keyObject.export({\n                  type: 'spki',\n                  format: 'der'\n                });\n                return {\n                  kty: 'OKP',\n                  crv,\n                  x: (0, base64url_js_1.encode)(der.subarray(-32))\n                };\n              }\n              const der = keyObject.export({\n                type: 'pkcs8',\n                format: 'der'\n              });\n              return _objectSpread(_objectSpread({}, keyToJWK((0, crypto_1.createPublicKey)(keyObject))), {}, {\n                d: (0, base64url_js_1.encode)(der.subarray(-32))\n              });\n            }\n          case 'ed448':\n          case 'x448':\n            {\n              const crv = (0, get_named_curve_js_1.default)(keyObject);\n              if (keyObject.type === 'public') {\n                const der = keyObject.export({\n                  type: 'spki',\n                  format: 'der'\n                });\n                return {\n                  kty: 'OKP',\n                  crv,\n                  x: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56))\n                };\n              }\n              const der = keyObject.export({\n                type: 'pkcs8',\n                format: 'der'\n              });\n              return _objectSpread(_objectSpread({}, keyToJWK((0, crypto_1.createPublicKey)(keyObject))), {}, {\n                d: (0, base64url_js_1.encode)(der.subarray(crv === 'Ed448' ? -57 : -56))\n              });\n            }\n          default:\n            throw new errors_js_1.JOSENotSupported('Unsupported key asymmetricKeyType');\n        }\n      }\n    default:\n      throw new errors_js_1.JOSENotSupported('Unsupported key type');\n  }\n};\nexports[\"default\"] = keyToJWK;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/node_key.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/node_key.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst PSS = {\n  padding: crypto_1.constants.RSA_PKCS1_PSS_PADDING,\n  saltLength: crypto_1.constants.RSA_PSS_SALTLEN_DIGEST\n};\nconst ecCurveAlgMap = new Map([['ES256', 'P-256'], ['ES256K', 'secp256k1'], ['ES384', 'P-384'], ['ES512', 'P-521']]);\nfunction keyForCrypto(alg, key) {\n  switch (alg) {\n    case 'EdDSA':\n      if (!['ed25519', 'ed448'].includes(key.asymmetricKeyType)) {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n      }\n      return key;\n    case 'RS256':\n    case 'RS384':\n    case 'RS512':\n      if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n      }\n      (0, check_modulus_length_js_1.default)(key, alg);\n      return key;\n    case flags_js_1.rsaPssParams && 'PS256':\n    case flags_js_1.rsaPssParams && 'PS384':\n    case flags_js_1.rsaPssParams && 'PS512':\n      if (key.asymmetricKeyType === 'rsa-pss') {\n        const {\n          hashAlgorithm,\n          mgf1HashAlgorithm,\n          saltLength\n        } = key.asymmetricKeyDetails;\n        const length = parseInt(alg.slice(-3), 10);\n        if (hashAlgorithm !== undefined && (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n          throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n        }\n        if (saltLength !== undefined && saltLength > length >> 3) {\n          throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n        }\n      } else if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n      }\n      (0, check_modulus_length_js_1.default)(key, alg);\n      return _objectSpread({\n        key\n      }, PSS);\n    case !flags_js_1.rsaPssParams && 'PS256':\n    case !flags_js_1.rsaPssParams && 'PS384':\n    case !flags_js_1.rsaPssParams && 'PS512':\n      if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n      }\n      (0, check_modulus_length_js_1.default)(key, alg);\n      return _objectSpread({\n        key\n      }, PSS);\n    case 'ES256':\n    case 'ES256K':\n    case 'ES384':\n    case 'ES512':\n      {\n        if (key.asymmetricKeyType !== 'ec') {\n          throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n        }\n        const actual = (0, get_named_curve_js_1.default)(key);\n        const expected = ecCurveAlgMap.get(alg);\n        if (actual !== expected) {\n          throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n        }\n        return {\n          dsaEncoding: 'ieee-p1363',\n          key\n        };\n      }\n    default:\n      throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n  }\n}\nexports[\"default\"] = keyForCrypto;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/node_key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst aeskw_js_1 = __webpack_require__(/*! ./aeskw.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst check_p2s_js_1 = __webpack_require__(/*! ../lib/check_p2s.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/check_p2s.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst pbkdf2 = (0, util_1.promisify)(crypto_1.pbkdf2);\nfunction getPassword(key, alg) {\n  if ((0, is_key_object_js_1.default)(key)) {\n    return key.export();\n  }\n  if (key instanceof Uint8Array) {\n    return key;\n  }\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, 'deriveBits', 'deriveKey');\n    return crypto_1.KeyObject.from(key).export();\n  }\n  throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, 'Uint8Array'));\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0, random_js_1.default)(new Uint8Array(16))) => {\n  (0, check_p2s_js_1.default)(p2s);\n  const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n  const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n  const password = getPassword(key, alg);\n  const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n  const encryptedKey = await (0, aeskw_js_1.wrap)(alg.slice(-6), derivedKey, cek);\n  return {\n    encryptedKey,\n    p2c,\n    p2s: (0, base64url_js_1.encode)(p2s)\n  };\n};\nexports.encrypt = encrypt;\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n  (0, check_p2s_js_1.default)(p2s);\n  const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n  const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n  const password = getPassword(key, alg);\n  const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n  return (0, aeskw_js_1.unwrap)(alg.slice(-6), derivedKey, encryptedKey);\n};\nexports.decrypt = decrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nObject.defineProperty(exports, \"default\", ({\n  enumerable: true,\n  get: function () {\n    return crypto_1.randomFillSync;\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9yYW5kb20uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFlLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLElBQUlHLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2hDTiwyQ0FBMEM7RUFBRU8sVUFBVSxFQUFFLElBQUk7RUFBRUMsR0FBRyxFQUFFLFNBQUFBLENBQUEsRUFBWTtJQUFFLE9BQU9ILFFBQVEsQ0FBQ0ksY0FBYztFQUFFO0FBQUUsQ0FBQyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3JhbmRvbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcnlwdG9fMS5yYW5kb21GaWxsU3luYzsgfSB9KTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicmFuZG9tRmlsbFN5bmMiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/rsaes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/rsaes.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst checkKey = (key, alg) => {\n  if (key.asymmetricKeyType !== 'rsa') {\n    throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n  }\n  (0, check_modulus_length_js_1.default)(key, alg);\n};\nconst resolvePadding = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      return crypto_1.constants.RSA_PKCS1_OAEP_PADDING;\n    case 'RSA1_5':\n      return crypto_1.constants.RSA_PKCS1_PADDING;\n    default:\n      return undefined;\n  }\n};\nconst resolveOaepHash = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n      return 'sha1';\n    case 'RSA-OAEP-256':\n      return 'sha256';\n    case 'RSA-OAEP-384':\n      return 'sha384';\n    case 'RSA-OAEP-512':\n      return 'sha512';\n    default:\n      return undefined;\n  }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n  if ((0, is_key_object_js_1.default)(key)) {\n    return key;\n  }\n  if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n    (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, ...usages);\n    return crypto_1.KeyObject.from(key);\n  }\n  throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n}\nconst encrypt = (alg, key, cek) => {\n  const padding = resolvePadding(alg);\n  const oaepHash = resolveOaepHash(alg);\n  const keyObject = ensureKeyObject(key, alg, 'wrapKey', 'encrypt');\n  checkKey(keyObject, alg);\n  return (0, crypto_1.publicEncrypt)({\n    key: keyObject,\n    oaepHash,\n    padding\n  }, cek);\n};\nexports.encrypt = encrypt;\nconst decrypt = (alg, key, encryptedKey) => {\n  const padding = resolvePadding(alg);\n  const oaepHash = resolveOaepHash(alg);\n  const keyObject = ensureKeyObject(key, alg, 'unwrapKey', 'decrypt');\n  checkKey(keyObject, alg);\n  return (0, crypto_1.privateDecrypt)({\n    key: keyObject,\n    oaepHash,\n    padding\n  }, encryptedKey);\n};\nexports.decrypt = decrypt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9yc2Flcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHQSxlQUFlLEdBQUcsS0FBSyxDQUFDO0FBQzFDLE1BQU1JLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2xDLE1BQU1DLHlCQUF5QixHQUFHRCxtQkFBTyxDQUFDLGlJQUEyQixDQUFDO0FBQ3RFLE1BQU1FLGNBQWMsR0FBR0YsbUJBQU8sQ0FBQywyR0FBZ0IsQ0FBQztBQUNoRCxNQUFNRyxlQUFlLEdBQUdILG1CQUFPLENBQUMsOEdBQXNCLENBQUM7QUFDdkQsTUFBTUksa0JBQWtCLEdBQUdKLG1CQUFPLENBQUMsbUhBQW9CLENBQUM7QUFDeEQsTUFBTUssc0JBQXNCLEdBQUdMLG1CQUFPLENBQUMsNEhBQTZCLENBQUM7QUFDckUsTUFBTU0sZ0JBQWdCLEdBQUdOLG1CQUFPLENBQUMsK0dBQWtCLENBQUM7QUFDcEQsTUFBTU8sUUFBUSxHQUFHQSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUMzQixJQUFJRCxHQUFHLENBQUNFLGlCQUFpQixLQUFLLEtBQUssRUFBRTtJQUNqQyxNQUFNLElBQUlDLFNBQVMsQ0FBQyxtRUFBbUUsQ0FBQztFQUM1RjtFQUNBLENBQUMsQ0FBQyxFQUFFVix5QkFBeUIsQ0FBQ1csT0FBTyxFQUFFSixHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUNwRCxDQUFDO0FBQ0QsTUFBTUksY0FBYyxHQUFJSixHQUFHLElBQUs7RUFDNUIsUUFBUUEsR0FBRztJQUNQLEtBQUssVUFBVTtJQUNmLEtBQUssY0FBYztJQUNuQixLQUFLLGNBQWM7SUFDbkIsS0FBSyxjQUFjO01BQ2YsT0FBT1YsUUFBUSxDQUFDZSxTQUFTLENBQUNDLHNCQUFzQjtJQUNwRCxLQUFLLFFBQVE7TUFDVCxPQUFPaEIsUUFBUSxDQUFDZSxTQUFTLENBQUNFLGlCQUFpQjtJQUMvQztNQUNJLE9BQU9DLFNBQVM7RUFDeEI7QUFDSixDQUFDO0FBQ0QsTUFBTUMsZUFBZSxHQUFJVCxHQUFHLElBQUs7RUFDN0IsUUFBUUEsR0FBRztJQUNQLEtBQUssVUFBVTtNQUNYLE9BQU8sTUFBTTtJQUNqQixLQUFLLGNBQWM7TUFDZixPQUFPLFFBQVE7SUFDbkIsS0FBSyxjQUFjO01BQ2YsT0FBTyxRQUFRO0lBQ25CLEtBQUssY0FBYztNQUNmLE9BQU8sUUFBUTtJQUNuQjtNQUNJLE9BQU9RLFNBQVM7RUFDeEI7QUFDSixDQUFDO0FBQ0QsU0FBU0UsZUFBZUEsQ0FBQ1gsR0FBRyxFQUFFQyxHQUFHLEVBQUUsR0FBR1csTUFBTSxFQUFFO0VBQzFDLElBQUksQ0FBQyxDQUFDLEVBQUVoQixrQkFBa0IsQ0FBQ1EsT0FBTyxFQUFFSixHQUFHLENBQUMsRUFBRTtJQUN0QyxPQUFPQSxHQUFHO0VBQ2Q7RUFDQSxJQUFJLENBQUMsQ0FBQyxFQUFFTixjQUFjLENBQUNtQixXQUFXLEVBQUViLEdBQUcsQ0FBQyxFQUFFO0lBQ3RDLENBQUMsQ0FBQyxFQUFFTCxlQUFlLENBQUNtQixpQkFBaUIsRUFBRWQsR0FBRyxFQUFFQyxHQUFHLEVBQUUsR0FBR1csTUFBTSxDQUFDO0lBQzNELE9BQU9yQixRQUFRLENBQUN3QixTQUFTLENBQUNDLElBQUksQ0FBQ2hCLEdBQUcsQ0FBQztFQUN2QztFQUNBLE1BQU0sSUFBSUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFTixzQkFBc0IsQ0FBQ08sT0FBTyxFQUFFSixHQUFHLEVBQUUsR0FBR0YsZ0JBQWdCLENBQUNtQixLQUFLLENBQUMsQ0FBQztBQUM1RjtBQUNBLE1BQU0zQixPQUFPLEdBQUdBLENBQUNXLEdBQUcsRUFBRUQsR0FBRyxFQUFFa0IsR0FBRyxLQUFLO0VBQy9CLE1BQU1DLE9BQU8sR0FBR2QsY0FBYyxDQUFDSixHQUFHLENBQUM7RUFDbkMsTUFBTW1CLFFBQVEsR0FBR1YsZUFBZSxDQUFDVCxHQUFHLENBQUM7RUFDckMsTUFBTW9CLFNBQVMsR0FBR1YsZUFBZSxDQUFDWCxHQUFHLEVBQUVDLEdBQUcsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2pFRixRQUFRLENBQUNzQixTQUFTLEVBQUVwQixHQUFHLENBQUM7RUFDeEIsT0FBTyxDQUFDLENBQUMsRUFBRVYsUUFBUSxDQUFDK0IsYUFBYSxFQUFFO0lBQUV0QixHQUFHLEVBQUVxQixTQUFTO0lBQUVELFFBQVE7SUFBRUQ7RUFBUSxDQUFDLEVBQUVELEdBQUcsQ0FBQztBQUNsRixDQUFDO0FBQ0QvQixlQUFlLEdBQUdHLE9BQU87QUFDekIsTUFBTUQsT0FBTyxHQUFHQSxDQUFDWSxHQUFHLEVBQUVELEdBQUcsRUFBRXVCLFlBQVksS0FBSztFQUN4QyxNQUFNSixPQUFPLEdBQUdkLGNBQWMsQ0FBQ0osR0FBRyxDQUFDO0VBQ25DLE1BQU1tQixRQUFRLEdBQUdWLGVBQWUsQ0FBQ1QsR0FBRyxDQUFDO0VBQ3JDLE1BQU1vQixTQUFTLEdBQUdWLGVBQWUsQ0FBQ1gsR0FBRyxFQUFFQyxHQUFHLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQztFQUNuRUYsUUFBUSxDQUFDc0IsU0FBUyxFQUFFcEIsR0FBRyxDQUFDO0VBQ3hCLE9BQU8sQ0FBQyxDQUFDLEVBQUVWLFFBQVEsQ0FBQ2lDLGNBQWMsRUFBRTtJQUFFeEIsR0FBRyxFQUFFcUIsU0FBUztJQUFFRCxRQUFRO0lBQUVEO0VBQVEsQ0FBQyxFQUFFSSxZQUFZLENBQUM7QUFDNUYsQ0FBQztBQUNEcEMsZUFBZSxHQUFHRSxPQUFPIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3JzYWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNyeXB0ID0gZXhwb3J0cy5lbmNyeXB0ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgY2hlY2tfbW9kdWx1c19sZW5ndGhfanNfMSA9IHJlcXVpcmUoXCIuL2NoZWNrX21vZHVsdXNfbGVuZ3RoLmpzXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBjaGVja0tleSA9IChrZXksIGFsZykgPT4ge1xuICAgIGlmIChrZXkuYXN5bW1ldHJpY0tleVR5cGUgIT09ICdyc2EnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQga2V5IGZvciB0aGlzIG9wZXJhdGlvbiwgaXRzIGFzeW1tZXRyaWNLZXlUeXBlIG11c3QgYmUgcnNhJyk7XG4gICAgfVxuICAgICgwLCBjaGVja19tb2R1bHVzX2xlbmd0aF9qc18xLmRlZmF1bHQpKGtleSwgYWxnKTtcbn07XG5jb25zdCByZXNvbHZlUGFkZGluZyA9IChhbGcpID0+IHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdSU0EtT0FFUCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTI1Nic6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTM4NCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTUxMic6XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuY29uc3RhbnRzLlJTQV9QS0NTMV9PQUVQX1BBRERJTkc7XG4gICAgICAgIGNhc2UgJ1JTQTFfNSc6XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuY29uc3RhbnRzLlJTQV9QS0NTMV9QQURESU5HO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59O1xuY29uc3QgcmVzb2x2ZU9hZXBIYXNoID0gKGFsZykgPT4ge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQJzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMSc7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTI1Nic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTI1Nic7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTM4NCc6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTM4NCc7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTUxMic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTUxMic7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG5mdW5jdGlvbiBlbnN1cmVLZXlPYmplY3Qoa2V5LCBhbGcsIC4uLnVzYWdlcykge1xuICAgIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKCgwLCB3ZWJjcnlwdG9fanNfMS5pc0NyeXB0b0tleSkoa2V5KSkge1xuICAgICAgICAoMCwgY3J5cHRvX2tleV9qc18xLmNoZWNrRW5jQ3J5cHRvS2V5KShrZXksIGFsZywgLi4udXNhZ2VzKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0b18xLktleU9iamVjdC5mcm9tKGtleSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzKSk7XG59XG5jb25zdCBlbmNyeXB0ID0gKGFsZywga2V5LCBjZWspID0+IHtcbiAgICBjb25zdCBwYWRkaW5nID0gcmVzb2x2ZVBhZGRpbmcoYWxnKTtcbiAgICBjb25zdCBvYWVwSGFzaCA9IHJlc29sdmVPYWVwSGFzaChhbGcpO1xuICAgIGNvbnN0IGtleU9iamVjdCA9IGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgJ3dyYXBLZXknLCAnZW5jcnlwdCcpO1xuICAgIGNoZWNrS2V5KGtleU9iamVjdCwgYWxnKTtcbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLnB1YmxpY0VuY3J5cHQpKHsga2V5OiBrZXlPYmplY3QsIG9hZXBIYXNoLCBwYWRkaW5nIH0sIGNlayk7XG59O1xuZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDtcbmNvbnN0IGRlY3J5cHQgPSAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSkgPT4ge1xuICAgIGNvbnN0IHBhZGRpbmcgPSByZXNvbHZlUGFkZGluZyhhbGcpO1xuICAgIGNvbnN0IG9hZXBIYXNoID0gcmVzb2x2ZU9hZXBIYXNoKGFsZyk7XG4gICAgY29uc3Qga2V5T2JqZWN0ID0gZW5zdXJlS2V5T2JqZWN0KGtleSwgYWxnLCAndW53cmFwS2V5JywgJ2RlY3J5cHQnKTtcbiAgICBjaGVja0tleShrZXlPYmplY3QsIGFsZyk7XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5wcml2YXRlRGVjcnlwdCkoeyBrZXk6IGtleU9iamVjdCwgb2FlcEhhc2gsIHBhZGRpbmcgfSwgZW5jcnlwdGVkS2V5KTtcbn07XG5leHBvcnRzLmRlY3J5cHQgPSBkZWNyeXB0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjcnlwdCIsImVuY3J5cHQiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJjaGVja19tb2R1bHVzX2xlbmd0aF9qc18xIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImNoZWNrS2V5Iiwia2V5IiwiYWxnIiwiYXN5bW1ldHJpY0tleVR5cGUiLCJUeXBlRXJyb3IiLCJkZWZhdWx0IiwicmVzb2x2ZVBhZGRpbmciLCJjb25zdGFudHMiLCJSU0FfUEtDUzFfT0FFUF9QQURESU5HIiwiUlNBX1BLQ1MxX1BBRERJTkciLCJ1bmRlZmluZWQiLCJyZXNvbHZlT2FlcEhhc2giLCJlbnN1cmVLZXlPYmplY3QiLCJ1c2FnZXMiLCJpc0NyeXB0b0tleSIsImNoZWNrRW5jQ3J5cHRvS2V5IiwiS2V5T2JqZWN0IiwiZnJvbSIsInR5cGVzIiwiY2VrIiwicGFkZGluZyIsIm9hZXBIYXNoIiwia2V5T2JqZWN0IiwicHVibGljRW5jcnlwdCIsImVuY3J5cHRlZEtleSIsInByaXZhdGVEZWNyeXB0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/rsaes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/runtime.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/runtime.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = 'node:crypto';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBZSxHQUFHLGFBQWEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9ICdub2RlOmNyeXB0byc7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/runtime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/sign.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/sign.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst hmac_digest_js_1 = __webpack_require__(/*! ./hmac_digest.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nlet oneShotSign;\nif (crypto.sign.length > 3) {\n  oneShotSign = (0, util_1.promisify)(crypto.sign);\n} else {\n  oneShotSign = crypto.sign;\n}\nconst sign = async (alg, key, data) => {\n  const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'sign');\n  if (alg.startsWith('HS')) {\n    const hmac = crypto.createHmac((0, hmac_digest_js_1.default)(alg), keyObject);\n    hmac.update(data);\n    return hmac.digest();\n  }\n  return oneShotSign((0, dsa_digest_js_1.default)(alg), data, (0, node_key_js_1.default)(alg, keyObject));\n};\nexports[\"default\"] = sign;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9zaWduLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyxzQkFBUSxDQUFDO0FBQ2hDLE1BQU1DLE1BQU0sR0FBR0QsbUJBQU8sQ0FBQyxrQkFBTSxDQUFDO0FBQzlCLE1BQU1FLGVBQWUsR0FBR0YsbUJBQU8sQ0FBQyw2R0FBaUIsQ0FBQztBQUNsRCxNQUFNRyxnQkFBZ0IsR0FBR0gsbUJBQU8sQ0FBQywrR0FBa0IsQ0FBQztBQUNwRCxNQUFNSSxhQUFhLEdBQUdKLG1CQUFPLENBQUMseUdBQWUsQ0FBQztBQUM5QyxNQUFNSyx3QkFBd0IsR0FBR0wsbUJBQU8sQ0FBQywrSEFBMEIsQ0FBQztBQUNwRSxJQUFJTSxXQUFXO0FBQ2YsSUFBSVAsTUFBTSxDQUFDUSxJQUFJLENBQUNDLE1BQU0sR0FBRyxDQUFDLEVBQUU7RUFDeEJGLFdBQVcsR0FBRyxDQUFDLENBQUMsRUFBRUwsTUFBTSxDQUFDUSxTQUFTLEVBQUVWLE1BQU0sQ0FBQ1EsSUFBSSxDQUFDO0FBQ3BELENBQUMsTUFDSTtFQUNERCxXQUFXLEdBQUdQLE1BQU0sQ0FBQ1EsSUFBSTtBQUM3QjtBQUNBLE1BQU1BLElBQUksR0FBRyxNQUFBQSxDQUFPRyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO0VBQ25DLE1BQU1DLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRVIsd0JBQXdCLENBQUNTLE9BQU8sRUFBRUosR0FBRyxFQUFFQyxHQUFHLEVBQUUsTUFBTSxDQUFDO0VBQ3pFLElBQUlELEdBQUcsQ0FBQ0ssVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3RCLE1BQU1DLElBQUksR0FBR2pCLE1BQU0sQ0FBQ2tCLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRWQsZ0JBQWdCLENBQUNXLE9BQU8sRUFBRUosR0FBRyxDQUFDLEVBQUVHLFNBQVMsQ0FBQztJQUM3RUcsSUFBSSxDQUFDRSxNQUFNLENBQUNOLElBQUksQ0FBQztJQUNqQixPQUFPSSxJQUFJLENBQUNHLE1BQU0sQ0FBQyxDQUFDO0VBQ3hCO0VBQ0EsT0FBT2IsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFSixlQUFlLENBQUNZLE9BQU8sRUFBRUosR0FBRyxDQUFDLEVBQUVFLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRVIsYUFBYSxDQUFDVSxPQUFPLEVBQUVKLEdBQUcsRUFBRUcsU0FBUyxDQUFDLENBQUM7QUFDM0csQ0FBQztBQUNEaEIsa0JBQWUsR0FBR1UsSUFBSSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9zaWduLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xuY29uc3QgZHNhX2RpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4vZHNhX2RpZ2VzdC5qc1wiKTtcbmNvbnN0IGhtYWNfZGlnZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9obWFjX2RpZ2VzdC5qc1wiKTtcbmNvbnN0IG5vZGVfa2V5X2pzXzEgPSByZXF1aXJlKFwiLi9ub2RlX2tleS5qc1wiKTtcbmNvbnN0IGdldF9zaWduX3ZlcmlmeV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL2dldF9zaWduX3ZlcmlmeV9rZXkuanNcIik7XG5sZXQgb25lU2hvdFNpZ247XG5pZiAoY3J5cHRvLnNpZ24ubGVuZ3RoID4gMykge1xuICAgIG9uZVNob3RTaWduID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKGNyeXB0by5zaWduKTtcbn1cbmVsc2Uge1xuICAgIG9uZVNob3RTaWduID0gY3J5cHRvLnNpZ247XG59XG5jb25zdCBzaWduID0gYXN5bmMgKGFsZywga2V5LCBkYXRhKSA9PiB7XG4gICAgY29uc3Qga2V5T2JqZWN0ID0gKDAsIGdldF9zaWduX3ZlcmlmeV9rZXlfanNfMS5kZWZhdWx0KShhbGcsIGtleSwgJ3NpZ24nKTtcbiAgICBpZiAoYWxnLnN0YXJ0c1dpdGgoJ0hTJykpIHtcbiAgICAgICAgY29uc3QgaG1hYyA9IGNyeXB0by5jcmVhdGVIbWFjKCgwLCBobWFjX2RpZ2VzdF9qc18xLmRlZmF1bHQpKGFsZyksIGtleU9iamVjdCk7XG4gICAgICAgIGhtYWMudXBkYXRlKGRhdGEpO1xuICAgICAgICByZXR1cm4gaG1hYy5kaWdlc3QoKTtcbiAgICB9XG4gICAgcmV0dXJuIG9uZVNob3RTaWduKCgwLCBkc2FfZGlnZXN0X2pzXzEuZGVmYXVsdCkoYWxnKSwgZGF0YSwgKDAsIG5vZGVfa2V5X2pzXzEuZGVmYXVsdCkoYWxnLCBrZXlPYmplY3QpKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBzaWduO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvIiwicmVxdWlyZSIsInV0aWxfMSIsImRzYV9kaWdlc3RfanNfMSIsImhtYWNfZGlnZXN0X2pzXzEiLCJub2RlX2tleV9qc18xIiwiZ2V0X3NpZ25fdmVyaWZ5X2tleV9qc18xIiwib25lU2hvdFNpZ24iLCJzaWduIiwibGVuZ3RoIiwicHJvbWlzaWZ5IiwiYWxnIiwia2V5IiwiZGF0YSIsImtleU9iamVjdCIsImRlZmF1bHQiLCJzdGFydHNXaXRoIiwiaG1hYyIsImNyZWF0ZUhtYWMiLCJ1cGRhdGUiLCJkaWdlc3QiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/sign.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst timingSafeEqual = crypto_1.timingSafeEqual;\nexports[\"default\"] = timingSafeEqual;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS90aW1pbmdfc2FmZV9lcXVhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxRQUFRLEdBQUdDLG1CQUFPLENBQUMsc0JBQVEsQ0FBQztBQUNsQyxNQUFNQyxlQUFlLEdBQUdGLFFBQVEsQ0FBQ0UsZUFBZTtBQUNoREosa0JBQWUsR0FBR0ksZUFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS90aW1pbmdfc2FmZV9lcXVhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHRpbWluZ1NhZmVFcXVhbCA9IGNyeXB0b18xLnRpbWluZ1NhZmVFcXVhbDtcbmV4cG9ydHMuZGVmYXVsdCA9IHRpbWluZ1NhZmVFcXVhbDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsInRpbWluZ1NhZmVFcXVhbCIsImRlZmF1bHQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/verify.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/verify.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst sign_js_1 = __webpack_require__(/*! ./sign.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/flags.js\");\nlet oneShotVerify;\nif (crypto.verify.length > 4 && flags_js_1.oneShotCallback) {\n  oneShotVerify = (0, util_1.promisify)(crypto.verify);\n} else {\n  oneShotVerify = crypto.verify;\n}\nconst verify = async (alg, key, signature, data) => {\n  const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, 'verify');\n  if (alg.startsWith('HS')) {\n    const expected = await (0, sign_js_1.default)(alg, keyObject, data);\n    const actual = signature;\n    try {\n      return crypto.timingSafeEqual(actual, expected);\n    } catch {\n      return false;\n    }\n  }\n  const algorithm = (0, dsa_digest_js_1.default)(alg);\n  const keyInput = (0, node_key_js_1.default)(alg, keyObject);\n  try {\n    return await oneShotVerify(algorithm, data, keyInput, signature);\n  } catch {\n    return false;\n  }\n};\nexports[\"default\"] = verify;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS92ZXJpZnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsTUFBTSxHQUFHQyxtQkFBTyxDQUFDLHNCQUFRLENBQUM7QUFDaEMsTUFBTUMsTUFBTSxHQUFHRCxtQkFBTyxDQUFDLGtCQUFNLENBQUM7QUFDOUIsTUFBTUUsZUFBZSxHQUFHRixtQkFBTyxDQUFDLDZHQUFpQixDQUFDO0FBQ2xELE1BQU1HLGFBQWEsR0FBR0gsbUJBQU8sQ0FBQyx5R0FBZSxDQUFDO0FBQzlDLE1BQU1JLFNBQVMsR0FBR0osbUJBQU8sQ0FBQyxpR0FBVyxDQUFDO0FBQ3RDLE1BQU1LLHdCQUF3QixHQUFHTCxtQkFBTyxDQUFDLCtIQUEwQixDQUFDO0FBQ3BFLE1BQU1NLFVBQVUsR0FBR04sbUJBQU8sQ0FBQyxtR0FBWSxDQUFDO0FBQ3hDLElBQUlPLGFBQWE7QUFDakIsSUFBSVIsTUFBTSxDQUFDUyxNQUFNLENBQUNDLE1BQU0sR0FBRyxDQUFDLElBQUlILFVBQVUsQ0FBQ0ksZUFBZSxFQUFFO0VBQ3hESCxhQUFhLEdBQUcsQ0FBQyxDQUFDLEVBQUVOLE1BQU0sQ0FBQ1UsU0FBUyxFQUFFWixNQUFNLENBQUNTLE1BQU0sQ0FBQztBQUN4RCxDQUFDLE1BQ0k7RUFDREQsYUFBYSxHQUFHUixNQUFNLENBQUNTLE1BQU07QUFDakM7QUFDQSxNQUFNQSxNQUFNLEdBQUcsTUFBQUEsQ0FBT0ksR0FBRyxFQUFFQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsSUFBSSxLQUFLO0VBQ2hELE1BQU1DLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRVgsd0JBQXdCLENBQUNZLE9BQU8sRUFBRUwsR0FBRyxFQUFFQyxHQUFHLEVBQUUsUUFBUSxDQUFDO0VBQzNFLElBQUlELEdBQUcsQ0FBQ00sVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3RCLE1BQU1DLFFBQVEsR0FBRyxNQUFNLENBQUMsQ0FBQyxFQUFFZixTQUFTLENBQUNhLE9BQU8sRUFBRUwsR0FBRyxFQUFFSSxTQUFTLEVBQUVELElBQUksQ0FBQztJQUNuRSxNQUFNSyxNQUFNLEdBQUdOLFNBQVM7SUFDeEIsSUFBSTtNQUNBLE9BQU9mLE1BQU0sQ0FBQ3NCLGVBQWUsQ0FBQ0QsTUFBTSxFQUFFRCxRQUFRLENBQUM7SUFDbkQsQ0FBQyxDQUNELE1BQU07TUFDRixPQUFPLEtBQUs7SUFDaEI7RUFDSjtFQUNBLE1BQU1HLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRXBCLGVBQWUsQ0FBQ2UsT0FBTyxFQUFFTCxHQUFHLENBQUM7RUFDbkQsTUFBTVcsUUFBUSxHQUFHLENBQUMsQ0FBQyxFQUFFcEIsYUFBYSxDQUFDYyxPQUFPLEVBQUVMLEdBQUcsRUFBRUksU0FBUyxDQUFDO0VBQzNELElBQUk7SUFDQSxPQUFPLE1BQU1ULGFBQWEsQ0FBQ2UsU0FBUyxFQUFFUCxJQUFJLEVBQUVRLFFBQVEsRUFBRVQsU0FBUyxDQUFDO0VBQ3BFLENBQUMsQ0FDRCxNQUFNO0lBQ0YsT0FBTyxLQUFLO0VBQ2hCO0FBQ0osQ0FBQztBQUNEakIsa0JBQWUsR0FBR1csTUFBTSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS92ZXJpZnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCBkc2FfZGlnZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9kc2FfZGlnZXN0LmpzXCIpO1xuY29uc3Qgbm9kZV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL25vZGVfa2V5LmpzXCIpO1xuY29uc3Qgc2lnbl9qc18xID0gcmVxdWlyZShcIi4vc2lnbi5qc1wiKTtcbmNvbnN0IGdldF9zaWduX3ZlcmlmeV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL2dldF9zaWduX3ZlcmlmeV9rZXkuanNcIik7XG5jb25zdCBmbGFnc19qc18xID0gcmVxdWlyZShcIi4vZmxhZ3MuanNcIik7XG5sZXQgb25lU2hvdFZlcmlmeTtcbmlmIChjcnlwdG8udmVyaWZ5Lmxlbmd0aCA+IDQgJiYgZmxhZ3NfanNfMS5vbmVTaG90Q2FsbGJhY2spIHtcbiAgICBvbmVTaG90VmVyaWZ5ID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKGNyeXB0by52ZXJpZnkpO1xufVxuZWxzZSB7XG4gICAgb25lU2hvdFZlcmlmeSA9IGNyeXB0by52ZXJpZnk7XG59XG5jb25zdCB2ZXJpZnkgPSBhc3luYyAoYWxnLCBrZXksIHNpZ25hdHVyZSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IGtleU9iamVjdCA9ICgwLCBnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEuZGVmYXVsdCkoYWxnLCBrZXksICd2ZXJpZnknKTtcbiAgICBpZiAoYWxnLnN0YXJ0c1dpdGgoJ0hTJykpIHtcbiAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBhd2FpdCAoMCwgc2lnbl9qc18xLmRlZmF1bHQpKGFsZywga2V5T2JqZWN0LCBkYXRhKTtcbiAgICAgICAgY29uc3QgYWN0dWFsID0gc2lnbmF0dXJlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0by50aW1pbmdTYWZlRXF1YWwoYWN0dWFsLCBleHBlY3RlZCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGFsZ29yaXRobSA9ICgwLCBkc2FfZGlnZXN0X2pzXzEuZGVmYXVsdCkoYWxnKTtcbiAgICBjb25zdCBrZXlJbnB1dCA9ICgwLCBub2RlX2tleV9qc18xLmRlZmF1bHQpKGFsZywga2V5T2JqZWN0KTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgb25lU2hvdFZlcmlmeShhbGdvcml0aG0sIGRhdGEsIGtleUlucHV0LCBzaWduYXR1cmUpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gdmVyaWZ5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvIiwicmVxdWlyZSIsInV0aWxfMSIsImRzYV9kaWdlc3RfanNfMSIsIm5vZGVfa2V5X2pzXzEiLCJzaWduX2pzXzEiLCJnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEiLCJmbGFnc19qc18xIiwib25lU2hvdFZlcmlmeSIsInZlcmlmeSIsImxlbmd0aCIsIm9uZVNob3RDYWxsYmFjayIsInByb21pc2lmeSIsImFsZyIsImtleSIsInNpZ25hdHVyZSIsImRhdGEiLCJrZXlPYmplY3QiLCJkZWZhdWx0Iiwic3RhcnRzV2l0aCIsImV4cGVjdGVkIiwiYWN0dWFsIiwidGltaW5nU2FmZUVxdWFsIiwiYWxnb3JpdGhtIiwia2V5SW5wdXQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isCryptoKey = void 0;\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nconst webcrypto = crypto.webcrypto;\nexports[\"default\"] = webcrypto;\nexports.isCryptoKey = util.types.isCryptoKey ? key => util.types.isCryptoKey(key) : key => false;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS93ZWJjcnlwdG8uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUssQ0FBQztBQUM1QixNQUFNRyxNQUFNLEdBQUdDLG1CQUFPLENBQUMsc0JBQVEsQ0FBQztBQUNoQyxNQUFNQyxJQUFJLEdBQUdELG1CQUFPLENBQUMsa0JBQU0sQ0FBQztBQUM1QixNQUFNRSxTQUFTLEdBQUdILE1BQU0sQ0FBQ0csU0FBUztBQUNsQ04sa0JBQWUsR0FBR00sU0FBUztBQUMzQk4sbUJBQW1CLEdBQUdLLElBQUksQ0FBQ0csS0FBSyxDQUFDTixXQUFXLEdBQ3JDTyxHQUFHLElBQUtKLElBQUksQ0FBQ0csS0FBSyxDQUFDTixXQUFXLENBQUNPLEdBQUcsQ0FBQyxHQUVqQ0EsR0FBRyxJQUFLLEtBQUsiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvd2ViY3J5cHRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NyeXB0b0tleSA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCB3ZWJjcnlwdG8gPSBjcnlwdG8ud2ViY3J5cHRvO1xuZXhwb3J0cy5kZWZhdWx0ID0gd2ViY3J5cHRvO1xuZXhwb3J0cy5pc0NyeXB0b0tleSA9IHV0aWwudHlwZXMuaXNDcnlwdG9LZXlcbiAgICA/IChrZXkpID0+IHV0aWwudHlwZXMuaXNDcnlwdG9LZXkoa2V5KVxuICAgIDpcbiAgICAgICAgKGtleSkgPT4gZmFsc2U7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0NyeXB0b0tleSIsImNyeXB0byIsInJlcXVpcmUiLCJ1dGlsIiwid2ViY3J5cHRvIiwiZGVmYXVsdCIsInR5cGVzIiwia2V5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/webcrypto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/zlib.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/zlib.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.deflate = exports.inflate = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nconst inflateRaw = (0, util_1.promisify)(zlib_1.inflateRaw);\nconst deflateRaw = (0, util_1.promisify)(zlib_1.deflateRaw);\nconst inflate = input => inflateRaw(input, {\n  maxOutputLength: 250000\n}).catch(() => {\n  throw new errors_js_1.JWEDecompressionFailed();\n});\nexports.inflate = inflate;\nconst deflate = input => deflateRaw(input);\nexports.deflate = deflate;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS96bGliLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxlQUFlLEdBQUdBLGVBQWUsR0FBRyxLQUFLLENBQUM7QUFDMUMsTUFBTUksTUFBTSxHQUFHQyxtQkFBTyxDQUFDLGtCQUFNLENBQUM7QUFDOUIsTUFBTUMsTUFBTSxHQUFHRCxtQkFBTyxDQUFDLGtCQUFNLENBQUM7QUFDOUIsTUFBTUUsV0FBVyxHQUFHRixtQkFBTyxDQUFDLHdHQUFtQixDQUFDO0FBQ2hELE1BQU1HLFVBQVUsR0FBRyxDQUFDLENBQUMsRUFBRUosTUFBTSxDQUFDSyxTQUFTLEVBQUVILE1BQU0sQ0FBQ0UsVUFBVSxDQUFDO0FBQzNELE1BQU1FLFVBQVUsR0FBRyxDQUFDLENBQUMsRUFBRU4sTUFBTSxDQUFDSyxTQUFTLEVBQUVILE1BQU0sQ0FBQ0ksVUFBVSxDQUFDO0FBQzNELE1BQU1QLE9BQU8sR0FBSVEsS0FBSyxJQUFLSCxVQUFVLENBQUNHLEtBQUssRUFBRTtFQUFFQyxlQUFlLEVBQUU7QUFBTyxDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLE1BQU07RUFDbEYsTUFBTSxJQUFJTixXQUFXLENBQUNPLHNCQUFzQixDQUFDLENBQUM7QUFDbEQsQ0FBQyxDQUFDO0FBQ0ZkLGVBQWUsR0FBR0csT0FBTztBQUN6QixNQUFNRCxPQUFPLEdBQUlTLEtBQUssSUFBS0QsVUFBVSxDQUFDQyxLQUFLLENBQUM7QUFDNUNYLGVBQWUsR0FBR0UsT0FBTyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS96bGliLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZsYXRlID0gZXhwb3J0cy5pbmZsYXRlID0gdm9pZCAwO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCB6bGliXzEgPSByZXF1aXJlKFwiemxpYlwiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaW5mbGF0ZVJhdyA9ICgwLCB1dGlsXzEucHJvbWlzaWZ5KSh6bGliXzEuaW5mbGF0ZVJhdyk7XG5jb25zdCBkZWZsYXRlUmF3ID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKHpsaWJfMS5kZWZsYXRlUmF3KTtcbmNvbnN0IGluZmxhdGUgPSAoaW5wdXQpID0+IGluZmxhdGVSYXcoaW5wdXQsIHsgbWF4T3V0cHV0TGVuZ3RoOiAyNTAwMDAgfSkuY2F0Y2goKCkgPT4ge1xuICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VEZWNvbXByZXNzaW9uRmFpbGVkKCk7XG59KTtcbmV4cG9ydHMuaW5mbGF0ZSA9IGluZmxhdGU7XG5jb25zdCBkZWZsYXRlID0gKGlucHV0KSA9PiBkZWZsYXRlUmF3KGlucHV0KTtcbmV4cG9ydHMuZGVmbGF0ZSA9IGRlZmxhdGU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZsYXRlIiwiaW5mbGF0ZSIsInV0aWxfMSIsInJlcXVpcmUiLCJ6bGliXzEiLCJlcnJvcnNfanNfMSIsImluZmxhdGVSYXciLCJwcm9taXNpZnkiLCJkZWZsYXRlUmF3IiwiaW5wdXQiLCJtYXhPdXRwdXRMZW5ndGgiLCJjYXRjaCIsIkpXRURlY29tcHJlc3Npb25GYWlsZWQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/zlib.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decode = exports.encode = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nexports.encode = base64url.encode;\nexports.decode = base64url.decode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9iYXNlNjR1cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztFQUFFRyxLQUFLLEVBQUU7QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWMsR0FBR0EsY0FBYyxHQUFHLEtBQUssQ0FBQztBQUN4QyxNQUFNSSxTQUFTLEdBQUdDLG1CQUFPLENBQUMsb0hBQXlCLENBQUM7QUFDcERMLGNBQWMsR0FBR0ksU0FBUyxDQUFDRCxNQUFNO0FBQ2pDSCxjQUFjLEdBQUdJLFNBQVMsQ0FBQ0YsTUFBTSIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9iYXNlNjR1cmwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMuZW5jb2RlID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuZXhwb3J0cy5lbmNvZGUgPSBiYXNlNjR1cmwuZW5jb2RlO1xuZXhwb3J0cy5kZWNvZGUgPSBiYXNlNjR1cmwuZGVjb2RlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlIiwiZW5jb2RlIiwiYmFzZTY0dXJsIiwicmVxdWlyZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_jwt.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_jwt.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decodeJwt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction decodeJwt(jwt) {\n  if (typeof jwt !== 'string') throw new errors_js_1.JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n  const {\n    1: payload,\n    length\n  } = jwt.split('.');\n  if (length === 5) throw new errors_js_1.JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n  if (length !== 3) throw new errors_js_1.JWTInvalid('Invalid JWT');\n  if (!payload) throw new errors_js_1.JWTInvalid('JWTs must contain a payload');\n  let decoded;\n  try {\n    decoded = (0, base64url_js_1.decode)(payload);\n  } catch {\n    throw new errors_js_1.JWTInvalid('Failed to base64url decode the payload');\n  }\n  let result;\n  try {\n    result = JSON.parse(buffer_utils_js_1.decoder.decode(decoded));\n  } catch {\n    throw new errors_js_1.JWTInvalid('Failed to parse the decoded payload as JSON');\n  }\n  if (!(0, is_object_js_1.default)(result)) throw new errors_js_1.JWTInvalid('Invalid JWT Claims Set');\n  return result;\n}\nexports.decodeJwt = decodeJwt;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9kZWNvZGVfand0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBRyxLQUFLLENBQUM7QUFDMUIsTUFBTUcsY0FBYyxHQUFHQyxtQkFBTyxDQUFDLHdHQUFnQixDQUFDO0FBQ2hELE1BQU1DLGlCQUFpQixHQUFHRCxtQkFBTyxDQUFDLGtIQUF3QixDQUFDO0FBQzNELE1BQU1FLGNBQWMsR0FBR0YsbUJBQU8sQ0FBQyw0R0FBcUIsQ0FBQztBQUNyRCxNQUFNRyxXQUFXLEdBQUdILG1CQUFPLENBQUMsa0dBQWEsQ0FBQztBQUMxQyxTQUFTRixTQUFTQSxDQUFDTSxHQUFHLEVBQUU7RUFDcEIsSUFBSSxPQUFPQSxHQUFHLEtBQUssUUFBUSxFQUN2QixNQUFNLElBQUlELFdBQVcsQ0FBQ0UsVUFBVSxDQUFDLCtEQUErRCxDQUFDO0VBQ3JHLE1BQU07SUFBRSxDQUFDLEVBQUVDLE9BQU87SUFBRUM7RUFBTyxDQUFDLEdBQUdILEdBQUcsQ0FBQ0ksS0FBSyxDQUFDLEdBQUcsQ0FBQztFQUM3QyxJQUFJRCxNQUFNLEtBQUssQ0FBQyxFQUNaLE1BQU0sSUFBSUosV0FBVyxDQUFDRSxVQUFVLENBQUMsMERBQTBELENBQUM7RUFDaEcsSUFBSUUsTUFBTSxLQUFLLENBQUMsRUFDWixNQUFNLElBQUlKLFdBQVcsQ0FBQ0UsVUFBVSxDQUFDLGFBQWEsQ0FBQztFQUNuRCxJQUFJLENBQUNDLE9BQU8sRUFDUixNQUFNLElBQUlILFdBQVcsQ0FBQ0UsVUFBVSxDQUFDLDZCQUE2QixDQUFDO0VBQ25FLElBQUlJLE9BQU87RUFDWCxJQUFJO0lBQ0FBLE9BQU8sR0FBRyxDQUFDLENBQUMsRUFBRVYsY0FBYyxDQUFDVyxNQUFNLEVBQUVKLE9BQU8sQ0FBQztFQUNqRCxDQUFDLENBQ0QsTUFBTTtJQUNGLE1BQU0sSUFBSUgsV0FBVyxDQUFDRSxVQUFVLENBQUMsd0NBQXdDLENBQUM7RUFDOUU7RUFDQSxJQUFJTSxNQUFNO0VBQ1YsSUFBSTtJQUNBQSxNQUFNLEdBQUdDLElBQUksQ0FBQ0MsS0FBSyxDQUFDWixpQkFBaUIsQ0FBQ2EsT0FBTyxDQUFDSixNQUFNLENBQUNELE9BQU8sQ0FBQyxDQUFDO0VBQ2xFLENBQUMsQ0FDRCxNQUFNO0lBQ0YsTUFBTSxJQUFJTixXQUFXLENBQUNFLFVBQVUsQ0FBQyw2Q0FBNkMsQ0FBQztFQUNuRjtFQUNBLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRUgsY0FBYyxDQUFDYSxPQUFPLEVBQUVKLE1BQU0sQ0FBQyxFQUNwQyxNQUFNLElBQUlSLFdBQVcsQ0FBQ0UsVUFBVSxDQUFDLHdCQUF3QixDQUFDO0VBQzlELE9BQU9NLE1BQU07QUFDakI7QUFDQWYsaUJBQWlCLEdBQUdFLFNBQVMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX2p3dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlSnd0ID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4vZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gZGVjb2RlSnd0KGp3dCkge1xuICAgIGlmICh0eXBlb2Ygand0ICE9PSAnc3RyaW5nJylcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0pXVHMgbXVzdCB1c2UgQ29tcGFjdCBKV1Mgc2VyaWFsaXphdGlvbiwgSldUIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICBjb25zdCB7IDE6IHBheWxvYWQsIGxlbmd0aCB9ID0gand0LnNwbGl0KCcuJyk7XG4gICAgaWYgKGxlbmd0aCA9PT0gNSlcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ09ubHkgSldUcyB1c2luZyBDb21wYWN0IEpXUyBzZXJpYWxpemF0aW9uIGNhbiBiZSBkZWNvZGVkJyk7XG4gICAgaWYgKGxlbmd0aCAhPT0gMylcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0ludmFsaWQgSldUJyk7XG4gICAgaWYgKCFwYXlsb2FkKVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBtdXN0IGNvbnRhaW4gYSBwYXlsb2FkJyk7XG4gICAgbGV0IGRlY29kZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgZGVjb2RlZCA9ICgwLCBiYXNlNjR1cmxfanNfMS5kZWNvZGUpKHBheWxvYWQpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdGYWlsZWQgdG8gYmFzZTY0dXJsIGRlY29kZSB0aGUgcGF5bG9hZCcpO1xuICAgIH1cbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoZGVjb2RlZCkpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGRlY29kZWQgcGF5bG9hZCBhcyBKU09OJyk7XG4gICAgfVxuICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKHJlc3VsdCkpXG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdJbnZhbGlkIEpXVCBDbGFpbXMgU2V0Jyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuZGVjb2RlSnd0ID0gZGVjb2RlSnd0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlSnd0IiwiYmFzZTY0dXJsX2pzXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJpc19vYmplY3RfanNfMSIsImVycm9yc19qc18xIiwiand0IiwiSldUSW52YWxpZCIsInBheWxvYWQiLCJsZW5ndGgiLCJzcGxpdCIsImRlY29kZWQiLCJkZWNvZGUiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJkZWNvZGVyIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_jwt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_protected_header.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_protected_header.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.decodeProtectedHeader = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction decodeProtectedHeader(token) {\n  let protectedB64u;\n  if (typeof token === 'string') {\n    const parts = token.split('.');\n    if (parts.length === 3 || parts.length === 5) {\n      ;\n      [protectedB64u] = parts;\n    }\n  } else if (typeof token === 'object' && token) {\n    if ('protected' in token) {\n      protectedB64u = token.protected;\n    } else {\n      throw new TypeError('Token does not contain a Protected Header');\n    }\n  }\n  try {\n    if (typeof protectedB64u !== 'string' || !protectedB64u) {\n      throw new Error();\n    }\n    const result = JSON.parse(buffer_utils_js_1.decoder.decode((0, base64url_js_1.decode)(protectedB64u)));\n    if (!(0, is_object_js_1.default)(result)) {\n      throw new Error();\n    }\n    return result;\n  } catch {\n    throw new TypeError('Invalid Token or Protected Header formatting');\n  }\n}\nexports.decodeProtectedHeader = decodeProtectedHeader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9kZWNvZGVfcHJvdGVjdGVkX2hlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0VBQUVHLEtBQUssRUFBRTtBQUFLLENBQUMsRUFBQztBQUM3REQsNkJBQTZCLEdBQUcsS0FBSyxDQUFDO0FBQ3RDLE1BQU1HLGNBQWMsR0FBR0MsbUJBQU8sQ0FBQyx3R0FBZ0IsQ0FBQztBQUNoRCxNQUFNQyxpQkFBaUIsR0FBR0QsbUJBQU8sQ0FBQyxrSEFBd0IsQ0FBQztBQUMzRCxNQUFNRSxjQUFjLEdBQUdGLG1CQUFPLENBQUMsNEdBQXFCLENBQUM7QUFDckQsU0FBU0YscUJBQXFCQSxDQUFDSyxLQUFLLEVBQUU7RUFDbEMsSUFBSUMsYUFBYTtFQUNqQixJQUFJLE9BQU9ELEtBQUssS0FBSyxRQUFRLEVBQUU7SUFDM0IsTUFBTUUsS0FBSyxHQUFHRixLQUFLLENBQUNHLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDOUIsSUFBSUQsS0FBSyxDQUFDRSxNQUFNLEtBQUssQ0FBQyxJQUFJRixLQUFLLENBQUNFLE1BQU0sS0FBSyxDQUFDLEVBQUU7TUFDMUM7TUFDQSxDQUFDSCxhQUFhLENBQUMsR0FBR0MsS0FBSztJQUMzQjtFQUNKLENBQUMsTUFDSSxJQUFJLE9BQU9GLEtBQUssS0FBSyxRQUFRLElBQUlBLEtBQUssRUFBRTtJQUN6QyxJQUFJLFdBQVcsSUFBSUEsS0FBSyxFQUFFO01BQ3RCQyxhQUFhLEdBQUdELEtBQUssQ0FBQ0ssU0FBUztJQUNuQyxDQUFDLE1BQ0k7TUFDRCxNQUFNLElBQUlDLFNBQVMsQ0FBQywyQ0FBMkMsQ0FBQztJQUNwRTtFQUNKO0VBQ0EsSUFBSTtJQUNBLElBQUksT0FBT0wsYUFBYSxLQUFLLFFBQVEsSUFBSSxDQUFDQSxhQUFhLEVBQUU7TUFDckQsTUFBTSxJQUFJTSxLQUFLLENBQUMsQ0FBQztJQUNyQjtJQUNBLE1BQU1DLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNaLGlCQUFpQixDQUFDYSxPQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRWhCLGNBQWMsQ0FBQ2dCLE1BQU0sRUFBRVgsYUFBYSxDQUFDLENBQUMsQ0FBQztJQUN0RyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUVGLGNBQWMsQ0FBQ2MsT0FBTyxFQUFFTCxNQUFNLENBQUMsRUFBRTtNQUN0QyxNQUFNLElBQUlELEtBQUssQ0FBQyxDQUFDO0lBQ3JCO0lBQ0EsT0FBT0MsTUFBTTtFQUNqQixDQUFDLENBQ0QsTUFBTTtJQUNGLE1BQU0sSUFBSUYsU0FBUyxDQUFDLDhDQUE4QyxDQUFDO0VBQ3ZFO0FBQ0o7QUFDQWIsNkJBQTZCLEdBQUdFLHFCQUFxQiIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9kZWNvZGVfcHJvdGVjdGVkX2hlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlUHJvdGVjdGVkSGVhZGVyID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmZ1bmN0aW9uIGRlY29kZVByb3RlY3RlZEhlYWRlcih0b2tlbikge1xuICAgIGxldCBwcm90ZWN0ZWRCNjR1O1xuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMyB8fCBwYXJ0cy5sZW5ndGggPT09IDUpIHtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIFtwcm90ZWN0ZWRCNjR1XSA9IHBhcnRzO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcgJiYgdG9rZW4pIHtcbiAgICAgICAgaWYgKCdwcm90ZWN0ZWQnIGluIHRva2VuKSB7XG4gICAgICAgICAgICBwcm90ZWN0ZWRCNjR1ID0gdG9rZW4ucHJvdGVjdGVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVG9rZW4gZG9lcyBub3QgY29udGFpbiBhIFByb3RlY3RlZCBIZWFkZXInKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHByb3RlY3RlZEI2NHUgIT09ICdzdHJpbmcnIHx8ICFwcm90ZWN0ZWRCNjR1KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKCgwLCBiYXNlNjR1cmxfanNfMS5kZWNvZGUpKHByb3RlY3RlZEI2NHUpKSk7XG4gICAgICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKHJlc3VsdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBUb2tlbiBvciBQcm90ZWN0ZWQgSGVhZGVyIGZvcm1hdHRpbmcnKTtcbiAgICB9XG59XG5leHBvcnRzLmRlY29kZVByb3RlY3RlZEhlYWRlciA9IGRlY29kZVByb3RlY3RlZEhlYWRlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY29kZVByb3RlY3RlZEhlYWRlciIsImJhc2U2NHVybF9qc18xIiwicmVxdWlyZSIsImJ1ZmZlcl91dGlsc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJ0b2tlbiIsInByb3RlY3RlZEI2NHUiLCJwYXJ0cyIsInNwbGl0IiwibGVuZ3RoIiwicHJvdGVjdGVkIiwiVHlwZUVycm9yIiwiRXJyb3IiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJkZWNvZGVyIiwiZGVjb2RlIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/decode_protected_header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.JWSSignatureVerificationFailed = exports.JWKSTimeout = exports.JWKSMultipleMatchingKeys = exports.JWKSNoMatchingKey = exports.JWKSInvalid = exports.JWKInvalid = exports.JWTInvalid = exports.JWSInvalid = exports.JWEInvalid = exports.JWEDecompressionFailed = exports.JWEDecryptionFailed = exports.JOSENotSupported = exports.JOSEAlgNotAllowed = exports.JWTExpired = exports.JWTClaimValidationFailed = exports.JOSEError = void 0;\nclass JOSEError extends Error {\n  static get code() {\n    return 'ERR_JOSE_GENERIC';\n  }\n  constructor(message) {\n    var _a;\n    super(message);\n    this.code = 'ERR_JOSE_GENERIC';\n    this.name = this.constructor.name;\n    (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n  }\n}\nexports.JOSEError = JOSEError;\nclass JWTClaimValidationFailed extends JOSEError {\n  static get code() {\n    return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n  }\n  constructor(message, claim = 'unspecified', reason = 'unspecified') {\n    super(message);\n    this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    this.claim = claim;\n    this.reason = reason;\n  }\n}\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nclass JWTExpired extends JOSEError {\n  static get code() {\n    return 'ERR_JWT_EXPIRED';\n  }\n  constructor(message, claim = 'unspecified', reason = 'unspecified') {\n    super(message);\n    this.code = 'ERR_JWT_EXPIRED';\n    this.claim = claim;\n    this.reason = reason;\n  }\n}\nexports.JWTExpired = JWTExpired;\nclass JOSEAlgNotAllowed extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n  }\n  static get code() {\n    return 'ERR_JOSE_ALG_NOT_ALLOWED';\n  }\n}\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nclass JOSENotSupported extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JOSE_NOT_SUPPORTED';\n  }\n  static get code() {\n    return 'ERR_JOSE_NOT_SUPPORTED';\n  }\n}\nexports.JOSENotSupported = JOSENotSupported;\nclass JWEDecryptionFailed extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    this.message = 'decryption operation failed';\n  }\n  static get code() {\n    return 'ERR_JWE_DECRYPTION_FAILED';\n  }\n}\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nclass JWEDecompressionFailed extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWE_DECOMPRESSION_FAILED';\n    this.message = 'decompression operation failed';\n  }\n  static get code() {\n    return 'ERR_JWE_DECOMPRESSION_FAILED';\n  }\n}\nexports.JWEDecompressionFailed = JWEDecompressionFailed;\nclass JWEInvalid extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWE_INVALID';\n  }\n  static get code() {\n    return 'ERR_JWE_INVALID';\n  }\n}\nexports.JWEInvalid = JWEInvalid;\nclass JWSInvalid extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWS_INVALID';\n  }\n  static get code() {\n    return 'ERR_JWS_INVALID';\n  }\n}\nexports.JWSInvalid = JWSInvalid;\nclass JWTInvalid extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWT_INVALID';\n  }\n  static get code() {\n    return 'ERR_JWT_INVALID';\n  }\n}\nexports.JWTInvalid = JWTInvalid;\nclass JWKInvalid extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWK_INVALID';\n  }\n  static get code() {\n    return 'ERR_JWK_INVALID';\n  }\n}\nexports.JWKInvalid = JWKInvalid;\nclass JWKSInvalid extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWKS_INVALID';\n  }\n  static get code() {\n    return 'ERR_JWKS_INVALID';\n  }\n}\nexports.JWKSInvalid = JWKSInvalid;\nclass JWKSNoMatchingKey extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    this.message = 'no applicable key found in the JSON Web Key Set';\n  }\n  static get code() {\n    return 'ERR_JWKS_NO_MATCHING_KEY';\n  }\n}\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nclass JWKSMultipleMatchingKeys extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    this.message = 'multiple matching keys found in the JSON Web Key Set';\n  }\n  static get code() {\n    return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n  }\n}\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nSymbol.asyncIterator;\nclass JWKSTimeout extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWKS_TIMEOUT';\n    this.message = 'request timed out';\n  }\n  static get code() {\n    return 'ERR_JWKS_TIMEOUT';\n  }\n}\nexports.JWKSTimeout = JWKSTimeout;\nclass JWSSignatureVerificationFailed extends JOSEError {\n  constructor() {\n    super(...arguments);\n    this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    this.message = 'signature verification failed';\n  }\n  static get code() {\n    return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n  }\n}\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/runtime.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/runtime.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nconst runtime_js_1 = __webpack_require__(/*! ../runtime/runtime.js */ \"(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/runtime/runtime.js\");\nexports[\"default\"] = runtime_js_1.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFBRUcsS0FBSyxFQUFFO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFlBQVksR0FBR0MsbUJBQU8sQ0FBQyxnSEFBdUIsQ0FBQztBQUNyREgsa0JBQWUsR0FBR0UsWUFBWSxDQUFDRSxPQUFPIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy91dGlsL3J1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9ydW50aW1lLmpzXCIpO1xuZXhwb3J0cy5kZWZhdWx0ID0gcnVudGltZV9qc18xLmRlZmF1bHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiZGVmYXVsdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/jose/dist/node/cjs/util/runtime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = Credentials;\nfunction Credentials(options) {\n  return {\n    id: \"credentials\",\n    name: \"Credentials\",\n    type: \"credentials\",\n    credentials: {},\n    authorize: () => null,\n    options\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csV0FBVztBQUM3QixTQUFTQSxXQUFXQSxDQUFDQyxPQUFPLEVBQUU7RUFDNUIsT0FBTztJQUNMQyxFQUFFLEVBQUUsYUFBYTtJQUNqQkMsSUFBSSxFQUFFLGFBQWE7SUFDbkJDLElBQUksRUFBRSxhQUFhO0lBQ25CQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQ2ZDLFNBQVMsRUFBRUEsQ0FBQSxLQUFNLElBQUk7SUFDckJMO0VBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ3JlZGVudGlhbHM7XG5mdW5jdGlvbiBDcmVkZW50aWFscyhvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IFwiY3JlZGVudGlhbHNcIixcbiAgICBuYW1lOiBcIkNyZWRlbnRpYWxzXCIsXG4gICAgdHlwZTogXCJjcmVkZW50aWFsc1wiLFxuICAgIGNyZWRlbnRpYWxzOiB7fSxcbiAgICBhdXRob3JpemU6ICgpID0+IG51bGwsXG4gICAgb3B0aW9uc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJDcmVkZW50aWFscyIsIm9wdGlvbnMiLCJpZCIsIm5hbWUiLCJ0eXBlIiwiY3JlZGVudGlhbHMiLCJhdXRob3JpemUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/credentials.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/google.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/providers/google.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = Google;\nfunction Google(options) {\n  return {\n    id: \"google\",\n    name: \"Google\",\n    type: \"oauth\",\n    wellKnown: \"https://accounts.google.com/.well-known/openid-configuration\",\n    authorization: {\n      params: {\n        scope: \"openid email profile\"\n      }\n    },\n    idToken: true,\n    checks: [\"pkce\", \"state\"],\n    profile(profile) {\n      return {\n        id: profile.sub,\n        name: profile.name,\n        email: profile.email,\n        image: profile.picture\n      };\n    },\n    style: {\n      logo: \"/google.svg\",\n      bg: \"#fff\",\n      text: \"#000\"\n    },\n    options\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUdHLE1BQU07QUFDeEIsU0FBU0EsTUFBTUEsQ0FBQ0MsT0FBTyxFQUFFO0VBQ3ZCLE9BQU87SUFDTEMsRUFBRSxFQUFFLFFBQVE7SUFDWkMsSUFBSSxFQUFFLFFBQVE7SUFDZEMsSUFBSSxFQUFFLE9BQU87SUFDYkMsU0FBUyxFQUFFLDhEQUE4RDtJQUN6RUMsYUFBYSxFQUFFO01BQ2JDLE1BQU0sRUFBRTtRQUNOQyxLQUFLLEVBQUU7TUFDVDtJQUNGLENBQUM7SUFDREMsT0FBTyxFQUFFLElBQUk7SUFDYkMsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztJQUN6QkMsT0FBT0EsQ0FBQ0EsT0FBTyxFQUFFO01BQ2YsT0FBTztRQUNMVCxFQUFFLEVBQUVTLE9BQU8sQ0FBQ0MsR0FBRztRQUNmVCxJQUFJLEVBQUVRLE9BQU8sQ0FBQ1IsSUFBSTtRQUNsQlUsS0FBSyxFQUFFRixPQUFPLENBQUNFLEtBQUs7UUFDcEJDLEtBQUssRUFBRUgsT0FBTyxDQUFDSTtNQUNqQixDQUFDO0lBQ0gsQ0FBQztJQUNEQyxLQUFLLEVBQUU7TUFDTEMsSUFBSSxFQUFFLGFBQWE7TUFDbkJDLEVBQUUsRUFBRSxNQUFNO01BQ1ZDLElBQUksRUFBRTtJQUNSLENBQUM7SUFDRGxCO0VBQ0YsQ0FBQztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2dvb2dsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IEdvb2dsZTtcbmZ1bmN0aW9uIEdvb2dsZShvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IFwiZ29vZ2xlXCIsXG4gICAgbmFtZTogXCJHb29nbGVcIixcbiAgICB0eXBlOiBcIm9hdXRoXCIsXG4gICAgd2VsbEtub3duOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS8ud2VsbC1rbm93bi9vcGVuaWQtY29uZmlndXJhdGlvblwiLFxuICAgIGF1dGhvcml6YXRpb246IHtcbiAgICAgIHBhcmFtczoge1xuICAgICAgICBzY29wZTogXCJvcGVuaWQgZW1haWwgcHJvZmlsZVwiXG4gICAgICB9XG4gICAgfSxcbiAgICBpZFRva2VuOiB0cnVlLFxuICAgIGNoZWNrczogW1wicGtjZVwiLCBcInN0YXRlXCJdLFxuICAgIHByb2ZpbGUocHJvZmlsZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IHByb2ZpbGUuc3ViLFxuICAgICAgICBuYW1lOiBwcm9maWxlLm5hbWUsXG4gICAgICAgIGVtYWlsOiBwcm9maWxlLmVtYWlsLFxuICAgICAgICBpbWFnZTogcHJvZmlsZS5waWN0dXJlXG4gICAgICB9O1xuICAgIH0sXG4gICAgc3R5bGU6IHtcbiAgICAgIGxvZ286IFwiL2dvb2dsZS5zdmdcIixcbiAgICAgIGJnOiBcIiNmZmZcIixcbiAgICAgIHRleHQ6IFwiIzAwMFwiXG4gICAgfSxcbiAgICBvcHRpb25zXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIkdvb2dsZSIsIm9wdGlvbnMiLCJpZCIsIm5hbWUiLCJ0eXBlIiwid2VsbEtub3duIiwiYXV0aG9yaXphdGlvbiIsInBhcmFtcyIsInNjb3BlIiwiaWRUb2tlbiIsImNoZWNrcyIsInByb2ZpbGUiLCJzdWIiLCJlbWFpbCIsImltYWdlIiwicGljdHVyZSIsInN0eWxlIiwibG9nbyIsImJnIiwidGV4dCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/google.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/detect-origin.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/utils/detect-origin.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.detectOrigin = detectOrigin;\nfunction detectOrigin(forwardedHost, protocol) {\n  var _process$env$VERCEL;\n  if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return `${protocol === \"http\" ? \"http\" : \"https\"}://${forwardedHost}`;\n  return process.env.NEXTAUTH_URL;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQixHQUFHRSxZQUFZO0FBQ25DLFNBQVNBLFlBQVlBLENBQUNDLGFBQWEsRUFBRUMsUUFBUSxFQUFFO0VBQzdDLElBQUlDLG1CQUFtQjtFQUN2QixJQUFJLENBQUNBLG1CQUFtQixHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsTUFBTSxNQUFNLElBQUksSUFBSUgsbUJBQW1CLEtBQUssS0FBSyxDQUFDLEdBQUdBLG1CQUFtQixHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0UsZUFBZSxFQUFFLE9BQVEsR0FBRUwsUUFBUSxLQUFLLE1BQU0sR0FBRyxNQUFNLEdBQUcsT0FBUSxNQUFLRCxhQUFjLEVBQUM7RUFDcE4sT0FBT0csT0FBTyxDQUFDQyxHQUFHLENBQUNHLFlBQVk7QUFDakMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWlhaC9Eb2N1bWVudHMvR2l0SHViL0NoTVMvbm9kZV9tb2R1bGVzL25leHQtYXV0aC91dGlscy9kZXRlY3Qtb3JpZ2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZXRlY3RPcmlnaW4gPSBkZXRlY3RPcmlnaW47XG5mdW5jdGlvbiBkZXRlY3RPcmlnaW4oZm9yd2FyZGVkSG9zdCwgcHJvdG9jb2wpIHtcbiAgdmFyIF9wcm9jZXNzJGVudiRWRVJDRUw7XG4gIGlmICgoX3Byb2Nlc3MkZW52JFZFUkNFTCA9IHByb2Nlc3MuZW52LlZFUkNFTCkgIT09IG51bGwgJiYgX3Byb2Nlc3MkZW52JFZFUkNFTCAhPT0gdm9pZCAwID8gX3Byb2Nlc3MkZW52JFZFUkNFTCA6IHByb2Nlc3MuZW52LkFVVEhfVFJVU1RfSE9TVCkgcmV0dXJuIGAke3Byb3RvY29sID09PSBcImh0dHBcIiA/IFwiaHR0cFwiIDogXCJodHRwc1wifTovLyR7Zm9yd2FyZGVkSG9zdH1gO1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRldGVjdE9yaWdpbiIsImZvcndhcmRlZEhvc3QiLCJwcm90b2NvbCIsIl9wcm9jZXNzJGVudiRWRVJDRUwiLCJwcm9jZXNzIiwiZW52IiwiVkVSQ0VMIiwiQVVUSF9UUlVTVF9IT1NUIiwiTkVYVEFVVEhfVVJMIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/detect-origin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(rsc)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(rsc)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(rsc)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(rsc)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(rsc)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2.default)(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction formatError(o) {\n  if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n    return {\n      message: o.message,\n      stack: o.stack,\n      name: o.name\n    };\n  }\n  if (hasErrorProperty(o)) {\n    var _o$message;\n    o.error = formatError(o.error);\n    o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n  }\n  return o;\n}\nfunction hasErrorProperty(x) {\n  return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n  error: function error(code, metadata) {\n    metadata = formatError(metadata);\n    console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n  },\n  warn: function warn(code) {\n    console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n  },\n  debug: function debug(code, metadata) {\n    console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n  }\n};\nfunction setLogger() {\n  var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var debug = arguments.length > 1 ? arguments[1] : undefined;\n  if (!debug) _logger.debug = function () {};\n  if (newLogger.error) _logger.error = newLogger.error;\n  if (newLogger.warn) _logger.warn = newLogger.warn;\n  if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = exports[\"default\"] = _logger;\nfunction proxyLogger() {\n  var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n  var basePath = arguments.length > 1 ? arguments[1] : undefined;\n  try {\n    if (true) {\n      return logger;\n    }\n    var clientLogger = {};\n    var _loop = function _loop(level) {\n      clientLogger[level] = function () {\n        var _ref = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(code, metadata) {\n          var url, body;\n          return _regenerator.default.wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                  metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                url = \"\".concat(basePath, \"/_log\");\n                body = new URLSearchParams(_objectSpread({\n                  level: level,\n                  code: code\n                }, metadata));\n                if (!navigator.sendBeacon) {\n                  _context.next = 8;\n                  break;\n                }\n                return _context.abrupt(\"return\", navigator.sendBeacon(url, body));\n              case 8:\n                _context.next = 10;\n                return fetch(url, {\n                  method: \"POST\",\n                  body: body,\n                  keepalive: true\n                });\n              case 10:\n                return _context.abrupt(\"return\", _context.sent);\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    };\n    for (var level in logger) {\n      _loop(level);\n    }\n    return clientLogger;\n  } catch (_unused) {\n    return _logger;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/merge.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/utils/merge.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.merge = merge;\nfunction isObject(item) {\n  return item && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction merge(target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {\n          [key]: {}\n        });\n        merge(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    }\n  }\n  return merge(target, ...sources);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL21lcmdlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGRCxhQUFhLEdBQUdFLEtBQUs7QUFDckIsU0FBU0MsUUFBUUEsQ0FBQ0MsSUFBSSxFQUFFO0VBQ3RCLE9BQU9BLElBQUksSUFBSSxPQUFPQSxJQUFJLEtBQUssUUFBUSxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDRixJQUFJLENBQUM7QUFDakU7QUFDQSxTQUFTRixLQUFLQSxDQUFDSyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxFQUFFO0VBQ2pDLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLEVBQUUsT0FBT0YsTUFBTTtFQUNsQyxNQUFNRyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDOUIsSUFBSVIsUUFBUSxDQUFDSSxNQUFNLENBQUMsSUFBSUosUUFBUSxDQUFDTyxNQUFNLENBQUMsRUFBRTtJQUN4QyxLQUFLLE1BQU1FLEdBQUcsSUFBSUYsTUFBTSxFQUFFO01BQ3hCLElBQUlQLFFBQVEsQ0FBQ08sTUFBTSxDQUFDRSxHQUFHLENBQUMsQ0FBQyxFQUFFO1FBQ3pCLElBQUksQ0FBQ0wsTUFBTSxDQUFDSyxHQUFHLENBQUMsRUFBRWQsTUFBTSxDQUFDZSxNQUFNLENBQUNOLE1BQU0sRUFBRTtVQUN0QyxDQUFDSyxHQUFHLEdBQUcsQ0FBQztRQUNWLENBQUMsQ0FBQztRQUNGVixLQUFLLENBQUNLLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLEVBQUVGLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLENBQUM7TUFDakMsQ0FBQyxNQUFNO1FBQ0xkLE1BQU0sQ0FBQ2UsTUFBTSxDQUFDTixNQUFNLEVBQUU7VUFDcEIsQ0FBQ0ssR0FBRyxHQUFHRixNQUFNLENBQUNFLEdBQUc7UUFDbkIsQ0FBQyxDQUFDO01BQ0o7SUFDRjtFQUNGO0VBQ0EsT0FBT1YsS0FBSyxDQUFDSyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxDQUFDO0FBQ2xDIiwic291cmNlcyI6WyIvVXNlcnMvamVyZW1pYWgvRG9jdW1lbnRzL0dpdEh1Yi9DaE1TL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvdXRpbHMvbWVyZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm1lcmdlID0gbWVyZ2U7XG5mdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGlmICghc291cmNlcy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcbiAgaWYgKGlzT2JqZWN0KHRhcmdldCkgJiYgaXNPYmplY3Qoc291cmNlKSkge1xuICAgIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICBpZiAoIXRhcmdldFtrZXldKSBPYmplY3QuYXNzaWduKHRhcmdldCwge1xuICAgICAgICAgIFtrZXldOiB7fVxuICAgICAgICB9KTtcbiAgICAgICAgbWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7XG4gICAgICAgICAgW2tleV06IHNvdXJjZVtrZXldXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtZXJnZSIsImlzT2JqZWN0IiwiaXRlbSIsIkFycmF5IiwiaXNBcnJheSIsInRhcmdldCIsInNvdXJjZXMiLCJsZW5ndGgiLCJzb3VyY2UiLCJzaGlmdCIsImtleSIsImFzc2lnbiJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/merge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n  var _url2;\n  const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n  if (url && !url.startsWith(\"http\")) {\n    url = `https://${url}`;\n  }\n  const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n  const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n  const base = `${_url.origin}${path}`;\n  return {\n    origin: _url.origin,\n    host: _url.host,\n    path,\n    base,\n    toString: () => base\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csUUFBUTtBQUMxQixTQUFTQSxRQUFRQSxDQUFDQyxHQUFHLEVBQUU7RUFDckIsSUFBSUMsS0FBSztFQUNULE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxHQUFHLENBQUMsZ0NBQWdDLENBQUM7RUFDNUQsSUFBSUgsR0FBRyxJQUFJLENBQUNBLEdBQUcsQ0FBQ0ksVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFO0lBQ2xDSixHQUFHLEdBQUksV0FBVUEsR0FBSSxFQUFDO0VBQ3hCO0VBQ0EsTUFBTUssSUFBSSxHQUFHLElBQUlGLEdBQUcsQ0FBQyxDQUFDRixLQUFLLEdBQUdELEdBQUcsTUFBTSxJQUFJLElBQUlDLEtBQUssS0FBSyxLQUFLLENBQUMsR0FBR0EsS0FBSyxHQUFHQyxVQUFVLENBQUM7RUFDckYsTUFBTUksSUFBSSxHQUFHLENBQUNELElBQUksQ0FBQ0UsUUFBUSxLQUFLLEdBQUcsR0FBR0wsVUFBVSxDQUFDSyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBUSxFQUFFQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztFQUM3RixNQUFNQyxJQUFJLEdBQUksR0FBRUosSUFBSSxDQUFDSyxNQUFPLEdBQUVKLElBQUssRUFBQztFQUNwQyxPQUFPO0lBQ0xJLE1BQU0sRUFBRUwsSUFBSSxDQUFDSyxNQUFNO0lBQ25CQyxJQUFJLEVBQUVOLElBQUksQ0FBQ00sSUFBSTtJQUNmTCxJQUFJO0lBQ0pHLElBQUk7SUFDSkcsUUFBUSxFQUFFQSxDQUFBLEtBQU1IO0VBQ2xCLENBQUM7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBhcnNlVXJsO1xuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIHZhciBfdXJsMjtcbiAgY29uc3QgZGVmYXVsdFVybCA9IG5ldyBVUkwoXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2F1dGhcIik7XG4gIGlmICh1cmwgJiYgIXVybC5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgIHVybCA9IGBodHRwczovLyR7dXJsfWA7XG4gIH1cbiAgY29uc3QgX3VybCA9IG5ldyBVUkwoKF91cmwyID0gdXJsKSAhPT0gbnVsbCAmJiBfdXJsMiAhPT0gdm9pZCAwID8gX3VybDIgOiBkZWZhdWx0VXJsKTtcbiAgY29uc3QgcGF0aCA9IChfdXJsLnBhdGhuYW1lID09PSBcIi9cIiA/IGRlZmF1bHRVcmwucGF0aG5hbWUgOiBfdXJsLnBhdGhuYW1lKS5yZXBsYWNlKC9cXC8kLywgXCJcIik7XG4gIGNvbnN0IGJhc2UgPSBgJHtfdXJsLm9yaWdpbn0ke3BhdGh9YDtcbiAgcmV0dXJuIHtcbiAgICBvcmlnaW46IF91cmwub3JpZ2luLFxuICAgIGhvc3Q6IF91cmwuaG9zdCxcbiAgICBwYXRoLFxuICAgIGJhc2UsXG4gICAgdG9TdHJpbmc6ICgpID0+IGJhc2VcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwicGFyc2VVcmwiLCJ1cmwiLCJfdXJsMiIsImRlZmF1bHRVcmwiLCJVUkwiLCJzdGFydHNXaXRoIiwiX3VybCIsInBhdGgiLCJwYXRobmFtZSIsInJlcGxhY2UiLCJiYXNlIiwib3JpZ2luIiwiaG9zdCIsInRvU3RyaW5nIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/client/_utils.js":
/*!*************************************************!*\
  !*** ./node_modules/next-auth/client/_utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BroadcastChannel = BroadcastChannel;\nexports.apiBaseUrl = apiBaseUrl;\nexports.fetchData = fetchData;\nexports.now = now;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2.default)(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction fetchData(_x, _x2, _x3) {\n  return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n  _fetchData = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(path, __NEXTAUTH, logger) {\n    var _ref,\n      ctx,\n      _ref$req,\n      req,\n      url,\n      _req$headers,\n      options,\n      res,\n      data,\n      _args = arguments;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, ctx = _ref.ctx, _ref$req = _ref.req, req = _ref$req === void 0 ? ctx === null || ctx === void 0 ? void 0 : ctx.req : _ref$req;\n          url = \"\".concat(apiBaseUrl(__NEXTAUTH), \"/\").concat(path);\n          _context.prev = 2;\n          options = {\n            headers: _objectSpread({\n              \"Content-Type\": \"application/json\"\n            }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {\n              cookie: req.headers.cookie\n            } : {})\n          };\n          if (req !== null && req !== void 0 && req.body) {\n            options.body = JSON.stringify(req.body);\n            options.method = \"POST\";\n          }\n          _context.next = 7;\n          return fetch(url, options);\n        case 7:\n          res = _context.sent;\n          _context.next = 10;\n          return res.json();\n        case 10:\n          data = _context.sent;\n          if (res.ok) {\n            _context.next = 13;\n            break;\n          }\n          throw data;\n        case 13:\n          return _context.abrupt(\"return\", Object.keys(data).length > 0 ? data : null);\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](2);\n          logger.error(\"CLIENT_FETCH_ERROR\", {\n            error: _context.t0,\n            url: url\n          });\n          return _context.abrupt(\"return\", null);\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 16]]);\n  }));\n  return _fetchData.apply(this, arguments);\n}\nfunction apiBaseUrl(__NEXTAUTH) {\n  if (true) {\n    return \"\".concat(__NEXTAUTH.baseUrlServer).concat(__NEXTAUTH.basePathServer);\n  }\n  return __NEXTAUTH.basePath;\n}\nfunction now() {\n  return Math.floor(Date.now() / 1000);\n}\nfunction BroadcastChannel() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"nextauth.message\";\n  return {\n    receive: function receive(onReceive) {\n      var handler = function handler(event) {\n        var _event$newValue;\n        if (event.key !== name) return;\n        var message = JSON.parse((_event$newValue = event.newValue) !== null && _event$newValue !== void 0 ? _event$newValue : \"{}\");\n        if ((message === null || message === void 0 ? void 0 : message.event) !== \"session\" || !(message !== null && message !== void 0 && message.data)) return;\n        onReceive(message);\n      };\n      window.addEventListener(\"storage\", handler);\n      return function () {\n        return window.removeEventListener(\"storage\", handler);\n      };\n    },\n    post: function post(message) {\n      if (true) return;\n      try {\n        localStorage.setItem(name, JSON.stringify(_objectSpread(_objectSpread({}, message), {}, {\n          timestamp: now()\n        })));\n      } catch (_unused) {}\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/client/_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(ssr)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _callSuper(t, o, e) {\n  return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e));\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nvar UnknownError = exports.UnknownError = function (_Error) {\n  function UnknownError(error) {\n    var _message;\n    var _this;\n    (0, _classCallCheck2.default)(this, UnknownError);\n    _this = _callSuper(this, UnknownError, [(_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error]);\n    _this.name = \"UnknownError\";\n    _this.code = error.code;\n    if (error instanceof Error) {\n      _this.stack = error.stack;\n    }\n    return _this;\n  }\n  (0, _inherits2.default)(UnknownError, _Error);\n  return (0, _createClass2.default)(UnknownError, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        name: this.name,\n        message: this.message,\n        stack: this.stack\n      };\n    }\n  }]);\n}((0, _wrapNativeSuper2.default)(Error));\nvar OAuthCallbackError = exports.OAuthCallbackError = function (_UnknownError) {\n  function OAuthCallbackError() {\n    var _this2;\n    (0, _classCallCheck2.default)(this, OAuthCallbackError);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _callSuper(this, OAuthCallbackError, [].concat(args));\n    (0, _defineProperty2.default)(_this2, \"name\", \"OAuthCallbackError\");\n    return _this2;\n  }\n  (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n  return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nvar AccountNotLinkedError = exports.AccountNotLinkedError = function (_UnknownError2) {\n  function AccountNotLinkedError() {\n    var _this3;\n    (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    _this3 = _callSuper(this, AccountNotLinkedError, [].concat(args));\n    (0, _defineProperty2.default)(_this3, \"name\", \"AccountNotLinkedError\");\n    return _this3;\n  }\n  (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n  return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nvar MissingAPIRoute = exports.MissingAPIRoute = function (_UnknownError3) {\n  function MissingAPIRoute() {\n    var _this4;\n    (0, _classCallCheck2.default)(this, MissingAPIRoute);\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    _this4 = _callSuper(this, MissingAPIRoute, [].concat(args));\n    (0, _defineProperty2.default)(_this4, \"name\", \"MissingAPIRouteError\");\n    (0, _defineProperty2.default)(_this4, \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n    return _this4;\n  }\n  (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n  return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nvar MissingSecret = exports.MissingSecret = function (_UnknownError4) {\n  function MissingSecret() {\n    var _this5;\n    (0, _classCallCheck2.default)(this, MissingSecret);\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    _this5 = _callSuper(this, MissingSecret, [].concat(args));\n    (0, _defineProperty2.default)(_this5, \"name\", \"MissingSecretError\");\n    (0, _defineProperty2.default)(_this5, \"code\", \"NO_SECRET\");\n    return _this5;\n  }\n  (0, _inherits2.default)(MissingSecret, _UnknownError4);\n  return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nvar MissingAuthorize = exports.MissingAuthorize = function (_UnknownError5) {\n  function MissingAuthorize() {\n    var _this6;\n    (0, _classCallCheck2.default)(this, MissingAuthorize);\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    _this6 = _callSuper(this, MissingAuthorize, [].concat(args));\n    (0, _defineProperty2.default)(_this6, \"name\", \"MissingAuthorizeError\");\n    (0, _defineProperty2.default)(_this6, \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n    return _this6;\n  }\n  (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n  return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nvar MissingAdapter = exports.MissingAdapter = function (_UnknownError6) {\n  function MissingAdapter() {\n    var _this7;\n    (0, _classCallCheck2.default)(this, MissingAdapter);\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    _this7 = _callSuper(this, MissingAdapter, [].concat(args));\n    (0, _defineProperty2.default)(_this7, \"name\", \"MissingAdapterError\");\n    (0, _defineProperty2.default)(_this7, \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n    return _this7;\n  }\n  (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n  return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nvar MissingAdapterMethods = exports.MissingAdapterMethods = function (_UnknownError7) {\n  function MissingAdapterMethods() {\n    var _this8;\n    (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    _this8 = _callSuper(this, MissingAdapterMethods, [].concat(args));\n    (0, _defineProperty2.default)(_this8, \"name\", \"MissingAdapterMethodsError\");\n    (0, _defineProperty2.default)(_this8, \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n    return _this8;\n  }\n  (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n  return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nvar UnsupportedStrategy = exports.UnsupportedStrategy = function (_UnknownError8) {\n  function UnsupportedStrategy() {\n    var _this9;\n    (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    _this9 = _callSuper(this, UnsupportedStrategy, [].concat(args));\n    (0, _defineProperty2.default)(_this9, \"name\", \"UnsupportedStrategyError\");\n    (0, _defineProperty2.default)(_this9, \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n    return _this9;\n  }\n  (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n  return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nvar InvalidCallbackUrl = exports.InvalidCallbackUrl = function (_UnknownError9) {\n  function InvalidCallbackUrl() {\n    var _this10;\n    (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    _this10 = _callSuper(this, InvalidCallbackUrl, [].concat(args));\n    (0, _defineProperty2.default)(_this10, \"name\", \"InvalidCallbackUrl\");\n    (0, _defineProperty2.default)(_this10, \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n    return _this10;\n  }\n  (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n  return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nfunction upperSnake(s) {\n  return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n  return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n  return Object.keys(methods).reduce(function (acc, name) {\n    acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n      var method,\n        _args = arguments;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            method = methods[name];\n            _context.next = 4;\n            return method.apply(void 0, _args);\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return acc;\n  }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n  if (!adapter) return;\n  return Object.keys(adapter).reduce(function (acc, name) {\n    acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n      var _len10,\n        args,\n        _key10,\n        method,\n        e,\n        _args2 = arguments;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            for (_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n              args[_key10] = _args2[_key10];\n            }\n            logger.debug(\"adapter_\".concat(name), {\n              args: args\n            });\n            method = adapter[name];\n            _context2.next = 6;\n            return method.apply(void 0, args);\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n            e = new UnknownError(_context2.t0);\n            e.name = \"\".concat(capitalize(name), \"Error\");\n            throw e;\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n    return acc;\n  }, {});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/index.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _exportNames = {\n  SessionContext: true,\n  useSession: true,\n  getSession: true,\n  getCsrfToken: true,\n  getProviders: true,\n  signIn: true,\n  signOut: true,\n  SessionProvider: true\n};\nexports.SessionContext = void 0;\nexports.SessionProvider = SessionProvider;\nexports.getCsrfToken = getCsrfToken;\nexports.getProviders = getProviders;\nexports.getSession = getSession;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.useSession = useSession;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\"));\nvar _logger2 = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(ssr)/./node_modules/next-auth/utils/logger.js\"));\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(ssr)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _utils = __webpack_require__(/*! ../client/_utils */ \"(ssr)/./node_modules/next-auth/client/_utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/next-auth/react/types.js\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\nvar _process$env$NEXTAUTH, _ref, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _React$createContext;\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2.default)(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar __NEXTAUTH = {\n  baseUrl: (0, _parseUrl.default)((_process$env$NEXTAUTH = process.env.NEXTAUTH_URL) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.VERCEL_URL).origin,\n  basePath: (0, _parseUrl.default)(process.env.NEXTAUTH_URL).path,\n  baseUrlServer: (0, _parseUrl.default)((_ref = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.NEXTAUTH_URL) !== null && _ref !== void 0 ? _ref : process.env.VERCEL_URL).origin,\n  basePathServer: (0, _parseUrl.default)((_process$env$NEXTAUTH3 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.NEXTAUTH_URL).path,\n  _lastSync: 0,\n  _session: undefined,\n  _getSession: function _getSession() {}\n};\nvar broadcast = (0, _utils.BroadcastChannel)();\nvar logger = (0, _logger2.proxyLogger)(_logger2.default, __NEXTAUTH.basePath);\nfunction useOnline() {\n  var _React$useState = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    isOnline = _React$useState2[0],\n    setIsOnline = _React$useState2[1];\n  var setOnline = function setOnline() {\n    return setIsOnline(true);\n  };\n  var setOffline = function setOffline() {\n    return setIsOnline(false);\n  };\n  React.useEffect(function () {\n    window.addEventListener(\"online\", setOnline);\n    window.addEventListener(\"offline\", setOffline);\n    return function () {\n      window.removeEventListener(\"online\", setOnline);\n      window.removeEventListener(\"offline\", setOffline);\n    };\n  }, []);\n  return isOnline;\n}\nvar SessionContext = exports.SessionContext = (_React$createContext = React.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(React, undefined);\nfunction useSession(options) {\n  if (!SessionContext) {\n    throw new Error(\"React Context is unavailable in Server Components\");\n  }\n  var value = React.useContext(SessionContext);\n  if (!value && true) {\n    throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n  }\n  var _ref2 = options !== null && options !== void 0 ? options : {},\n    required = _ref2.required,\n    onUnauthenticated = _ref2.onUnauthenticated;\n  var requiredAndNotLoading = required && value.status === \"unauthenticated\";\n  React.useEffect(function () {\n    if (requiredAndNotLoading) {\n      var url = \"/api/auth/signin?\".concat(new URLSearchParams({\n        error: \"SessionRequired\",\n        callbackUrl: window.location.href\n      }));\n      if (onUnauthenticated) onUnauthenticated();else window.location.href = url;\n    }\n  }, [requiredAndNotLoading, onUnauthenticated]);\n  if (requiredAndNotLoading) {\n    return {\n      data: value.data,\n      update: value.update,\n      status: \"loading\"\n    };\n  }\n  return value;\n}\nfunction getSession(_x) {\n  return _getSession2.apply(this, arguments);\n}\nfunction _getSession2() {\n  _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {\n    var _params$broadcast;\n    var session;\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _utils.fetchData)(\"session\", __NEXTAUTH, logger, params);\n        case 2:\n          session = _context3.sent;\n          if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {\n            broadcast.post({\n              event: \"session\",\n              data: {\n                trigger: \"getSession\"\n              }\n            });\n          }\n          return _context3.abrupt(\"return\", session);\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getSession2.apply(this, arguments);\n}\nfunction getCsrfToken(_x2) {\n  return _getCsrfToken.apply(this, arguments);\n}\nfunction _getCsrfToken() {\n  _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(params) {\n    var response;\n    return _regenerator.default.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return (0, _utils.fetchData)(\"csrf\", __NEXTAUTH, logger, params);\n        case 2:\n          response = _context4.sent;\n          return _context4.abrupt(\"return\", response === null || response === void 0 ? void 0 : response.csrfToken);\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _getCsrfToken.apply(this, arguments);\n}\nfunction getProviders() {\n  return _getProviders.apply(this, arguments);\n}\nfunction _getProviders() {\n  _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5() {\n    return _regenerator.default.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return (0, _utils.fetchData)(\"providers\", __NEXTAUTH, logger);\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getProviders.apply(this, arguments);\n}\nfunction signIn(_x3, _x4, _x5) {\n  return _signIn.apply(this, arguments);\n}\nfunction _signIn() {\n  _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(provider, options, authorizationParams) {\n    var _ref5, _ref5$callbackUrl, callbackUrl, _ref5$redirect, redirect, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, _signInUrl, res, data, _data$url, url, error;\n    return _regenerator.default.wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$callbackUrl = _ref5.callbackUrl, callbackUrl = _ref5$callbackUrl === void 0 ? window.location.href : _ref5$callbackUrl, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;\n          baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n          _context6.next = 4;\n          return getProviders();\n        case 4:\n          providers = _context6.sent;\n          if (providers) {\n            _context6.next = 8;\n            break;\n          }\n          window.location.href = \"\".concat(baseUrl, \"/error\");\n          return _context6.abrupt(\"return\");\n        case 8:\n          if (!(!provider || !(provider in providers))) {\n            _context6.next = 11;\n            break;\n          }\n          window.location.href = \"\".concat(baseUrl, \"/signin?\").concat(new URLSearchParams({\n            callbackUrl: callbackUrl\n          }));\n          return _context6.abrupt(\"return\");\n        case 11:\n          isCredentials = providers[provider].type === \"credentials\";\n          isEmail = providers[provider].type === \"email\";\n          isSupportingReturn = isCredentials || isEmail;\n          signInUrl = \"\".concat(baseUrl, \"/\").concat(isCredentials ? \"callback\" : \"signin\", \"/\").concat(provider);\n          _signInUrl = \"\".concat(signInUrl).concat(authorizationParams ? \"?\".concat(new URLSearchParams(authorizationParams)) : \"\");\n          _context6.t0 = fetch;\n          _context6.t1 = _signInUrl;\n          _context6.t2 = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          };\n          _context6.t3 = URLSearchParams;\n          _context6.t4 = _objectSpread;\n          _context6.t5 = _objectSpread({}, options);\n          _context6.t6 = {};\n          _context6.next = 25;\n          return getCsrfToken();\n        case 25:\n          _context6.t7 = _context6.sent;\n          _context6.t8 = callbackUrl;\n          _context6.t9 = {\n            csrfToken: _context6.t7,\n            callbackUrl: _context6.t8,\n            json: true\n          };\n          _context6.t10 = (0, _context6.t4)(_context6.t5, _context6.t6, _context6.t9);\n          _context6.t11 = new _context6.t3(_context6.t10);\n          _context6.t12 = {\n            method: \"post\",\n            headers: _context6.t2,\n            body: _context6.t11\n          };\n          _context6.next = 33;\n          return (0, _context6.t0)(_context6.t1, _context6.t12);\n        case 33:\n          res = _context6.sent;\n          _context6.next = 36;\n          return res.json();\n        case 36:\n          data = _context6.sent;\n          if (!(redirect || !isSupportingReturn)) {\n            _context6.next = 42;\n            break;\n          }\n          url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : callbackUrl;\n          window.location.href = url;\n          if (url.includes(\"#\")) window.location.reload();\n          return _context6.abrupt(\"return\");\n        case 42:\n          error = new URL(data.url).searchParams.get(\"error\");\n          if (!res.ok) {\n            _context6.next = 46;\n            break;\n          }\n          _context6.next = 46;\n          return __NEXTAUTH._getSession({\n            event: \"storage\"\n          });\n        case 46:\n          return _context6.abrupt(\"return\", {\n            error: error,\n            status: res.status,\n            ok: res.ok,\n            url: error ? null : data.url\n          });\n        case 47:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _signIn.apply(this, arguments);\n}\nfunction signOut(_x6) {\n  return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n  _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee7(options) {\n    var _options$redirect;\n    var _ref6, _ref6$callbackUrl, callbackUrl, baseUrl, fetchOptions, res, data, _data$url2, url;\n    return _regenerator.default.wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _ref6 = options !== null && options !== void 0 ? options : {}, _ref6$callbackUrl = _ref6.callbackUrl, callbackUrl = _ref6$callbackUrl === void 0 ? window.location.href : _ref6$callbackUrl;\n          baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n          _context7.t0 = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          };\n          _context7.t1 = URLSearchParams;\n          _context7.next = 6;\n          return getCsrfToken();\n        case 6:\n          _context7.t2 = _context7.sent;\n          _context7.t3 = callbackUrl;\n          _context7.t4 = {\n            csrfToken: _context7.t2,\n            callbackUrl: _context7.t3,\n            json: true\n          };\n          _context7.t5 = new _context7.t1(_context7.t4);\n          fetchOptions = {\n            method: \"post\",\n            headers: _context7.t0,\n            body: _context7.t5\n          };\n          _context7.next = 13;\n          return fetch(\"\".concat(baseUrl, \"/signout\"), fetchOptions);\n        case 13:\n          res = _context7.sent;\n          _context7.next = 16;\n          return res.json();\n        case 16:\n          data = _context7.sent;\n          broadcast.post({\n            event: \"session\",\n            data: {\n              trigger: \"signout\"\n            }\n          });\n          if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {\n            _context7.next = 23;\n            break;\n          }\n          url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : callbackUrl;\n          window.location.href = url;\n          if (url.includes(\"#\")) window.location.reload();\n          return _context7.abrupt(\"return\");\n        case 23:\n          _context7.next = 25;\n          return __NEXTAUTH._getSession({\n            event: \"storage\"\n          });\n        case 25:\n          return _context7.abrupt(\"return\", data);\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _signOut.apply(this, arguments);\n}\nfunction SessionProvider(props) {\n  if (!SessionContext) {\n    throw new Error(\"React Context is unavailable in Server Components\");\n  }\n  var children = props.children,\n    basePath = props.basePath,\n    refetchInterval = props.refetchInterval,\n    refetchWhenOffline = props.refetchWhenOffline;\n  if (basePath) __NEXTAUTH.basePath = basePath;\n  var hasInitialSession = props.session !== undefined;\n  __NEXTAUTH._lastSync = hasInitialSession ? (0, _utils.now)() : 0;\n  var _React$useState3 = React.useState(function () {\n      if (hasInitialSession) __NEXTAUTH._session = props.session;\n      return props.session;\n    }),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    session = _React$useState4[0],\n    setSession = _React$useState4[1];\n  var _React$useState5 = React.useState(!hasInitialSession),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    loading = _React$useState6[0],\n    setLoading = _React$useState6[1];\n  React.useEffect(function () {\n    __NEXTAUTH._getSession = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n      var _ref4,\n        event,\n        storageEvent,\n        _args = arguments;\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, event = _ref4.event;\n            _context.prev = 1;\n            storageEvent = event === \"storage\";\n            if (!(storageEvent || __NEXTAUTH._session === undefined)) {\n              _context.next = 10;\n              break;\n            }\n            __NEXTAUTH._lastSync = (0, _utils.now)();\n            _context.next = 7;\n            return getSession({\n              broadcast: !storageEvent\n            });\n          case 7:\n            __NEXTAUTH._session = _context.sent;\n            setSession(__NEXTAUTH._session);\n            return _context.abrupt(\"return\");\n          case 10:\n            if (!(!event || __NEXTAUTH._session === null || (0, _utils.now)() < __NEXTAUTH._lastSync)) {\n              _context.next = 12;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 12:\n            __NEXTAUTH._lastSync = (0, _utils.now)();\n            _context.next = 15;\n            return getSession();\n          case 15:\n            __NEXTAUTH._session = _context.sent;\n            setSession(__NEXTAUTH._session);\n            _context.next = 22;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](1);\n            logger.error(\"CLIENT_SESSION_ERROR\", _context.t0);\n          case 22:\n            _context.prev = 22;\n            setLoading(false);\n            return _context.finish(22);\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 19, 22, 25]]);\n    }));\n    __NEXTAUTH._getSession();\n    return function () {\n      __NEXTAUTH._lastSync = 0;\n      __NEXTAUTH._session = undefined;\n      __NEXTAUTH._getSession = function () {};\n    };\n  }, []);\n  React.useEffect(function () {\n    var unsubscribe = broadcast.receive(function () {\n      return __NEXTAUTH._getSession({\n        event: \"storage\"\n      });\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  React.useEffect(function () {\n    var _props$refetchOnWindo = props.refetchOnWindowFocus,\n      refetchOnWindowFocus = _props$refetchOnWindo === void 0 ? true : _props$refetchOnWindo;\n    var visibilityHandler = function visibilityHandler() {\n      if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n        event: \"visibilitychange\"\n      });\n    };\n    document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n    return function () {\n      return document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n    };\n  }, [props.refetchOnWindowFocus]);\n  var isOnline = useOnline();\n  var shouldRefetch = refetchWhenOffline !== false || isOnline;\n  React.useEffect(function () {\n    if (refetchInterval && shouldRefetch) {\n      var refetchIntervalTimer = setInterval(function () {\n        if (__NEXTAUTH._session) {\n          __NEXTAUTH._getSession({\n            event: \"poll\"\n          });\n        }\n      }, refetchInterval * 1000);\n      return function () {\n        return clearInterval(refetchIntervalTimer);\n      };\n    }\n  }, [refetchInterval, shouldRefetch]);\n  var value = React.useMemo(function () {\n    return {\n      data: session,\n      status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n      update: function update(data) {\n        return (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n          var newSession;\n          return _regenerator.default.wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(loading || !session)) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 2:\n                setLoading(true);\n                _context2.t0 = _utils.fetchData;\n                _context2.t1 = __NEXTAUTH;\n                _context2.t2 = logger;\n                _context2.next = 8;\n                return getCsrfToken();\n              case 8:\n                _context2.t3 = _context2.sent;\n                _context2.t4 = data;\n                _context2.t5 = {\n                  csrfToken: _context2.t3,\n                  data: _context2.t4\n                };\n                _context2.t6 = {\n                  body: _context2.t5\n                };\n                _context2.t7 = {\n                  req: _context2.t6\n                };\n                _context2.next = 15;\n                return (0, _context2.t0)(\"session\", _context2.t1, _context2.t2, _context2.t7);\n              case 15:\n                newSession = _context2.sent;\n                setLoading(false);\n                if (newSession) {\n                  setSession(newSession);\n                  broadcast.post({\n                    event: \"session\",\n                    data: {\n                      trigger: \"getSession\"\n                    }\n                  });\n                }\n                return _context2.abrupt(\"return\", newSession);\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }))();\n      }\n    };\n  }, [session, loading]);\n  return (0, _jsxRuntime.jsx)(SessionContext.Provider, {\n    value: value,\n    children: children\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react/types.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/types.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(ssr)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      (0, _defineProperty2.default)(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction formatError(o) {\n  if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n    return {\n      message: o.message,\n      stack: o.stack,\n      name: o.name\n    };\n  }\n  if (hasErrorProperty(o)) {\n    var _o$message;\n    o.error = formatError(o.error);\n    o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n  }\n  return o;\n}\nfunction hasErrorProperty(x) {\n  return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n  error: function error(code, metadata) {\n    metadata = formatError(metadata);\n    console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n  },\n  warn: function warn(code) {\n    console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n  },\n  debug: function debug(code, metadata) {\n    console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n  }\n};\nfunction setLogger() {\n  var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var debug = arguments.length > 1 ? arguments[1] : undefined;\n  if (!debug) _logger.debug = function () {};\n  if (newLogger.error) _logger.error = newLogger.error;\n  if (newLogger.warn) _logger.warn = newLogger.warn;\n  if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = exports[\"default\"] = _logger;\nfunction proxyLogger() {\n  var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n  var basePath = arguments.length > 1 ? arguments[1] : undefined;\n  try {\n    if (true) {\n      return logger;\n    }\n    var clientLogger = {};\n    var _loop = function _loop(level) {\n      clientLogger[level] = function () {\n        var _ref = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(code, metadata) {\n          var url, body;\n          return _regenerator.default.wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                  metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                url = \"\".concat(basePath, \"/_log\");\n                body = new URLSearchParams(_objectSpread({\n                  level: level,\n                  code: code\n                }, metadata));\n                if (!navigator.sendBeacon) {\n                  _context.next = 8;\n                  break;\n                }\n                return _context.abrupt(\"return\", navigator.sendBeacon(url, body));\n              case 8:\n                _context.next = 10;\n                return fetch(url, {\n                  method: \"POST\",\n                  body: body,\n                  keepalive: true\n                });\n              case 10:\n                return _context.abrupt(\"return\", _context.sent);\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    };\n    for (var level in logger) {\n      _loop(level);\n    }\n    return clientLogger;\n  } catch (_unused) {\n    return _logger;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n  var _url2;\n  const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n  if (url && !url.startsWith(\"http\")) {\n    url = `https://${url}`;\n  }\n  const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n  const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n  const base = `${_url.origin}${path}`;\n  return {\n    origin: _url.origin,\n    host: _url.host,\n    path,\n    base,\n    toString: () => base\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsOENBQTZDO0VBQzNDRyxLQUFLLEVBQUU7QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csUUFBUTtBQUMxQixTQUFTQSxRQUFRQSxDQUFDQyxHQUFHLEVBQUU7RUFDckIsSUFBSUMsS0FBSztFQUNULE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxHQUFHLENBQUMsZ0NBQWdDLENBQUM7RUFDNUQsSUFBSUgsR0FBRyxJQUFJLENBQUNBLEdBQUcsQ0FBQ0ksVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFO0lBQ2xDSixHQUFHLEdBQUksV0FBVUEsR0FBSSxFQUFDO0VBQ3hCO0VBQ0EsTUFBTUssSUFBSSxHQUFHLElBQUlGLEdBQUcsQ0FBQyxDQUFDRixLQUFLLEdBQUdELEdBQUcsTUFBTSxJQUFJLElBQUlDLEtBQUssS0FBSyxLQUFLLENBQUMsR0FBR0EsS0FBSyxHQUFHQyxVQUFVLENBQUM7RUFDckYsTUFBTUksSUFBSSxHQUFHLENBQUNELElBQUksQ0FBQ0UsUUFBUSxLQUFLLEdBQUcsR0FBR0wsVUFBVSxDQUFDSyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBUSxFQUFFQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztFQUM3RixNQUFNQyxJQUFJLEdBQUksR0FBRUosSUFBSSxDQUFDSyxNQUFPLEdBQUVKLElBQUssRUFBQztFQUNwQyxPQUFPO0lBQ0xJLE1BQU0sRUFBRUwsSUFBSSxDQUFDSyxNQUFNO0lBQ25CQyxJQUFJLEVBQUVOLElBQUksQ0FBQ00sSUFBSTtJQUNmTCxJQUFJO0lBQ0pHLElBQUk7SUFDSkcsUUFBUSxFQUFFQSxDQUFBLEtBQU1IO0VBQ2xCLENBQUM7QUFDSCIsInNvdXJjZXMiOlsiL1VzZXJzL2plcmVtaWFoL0RvY3VtZW50cy9HaXRIdWIvQ2hNUy9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBhcnNlVXJsO1xuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIHZhciBfdXJsMjtcbiAgY29uc3QgZGVmYXVsdFVybCA9IG5ldyBVUkwoXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2F1dGhcIik7XG4gIGlmICh1cmwgJiYgIXVybC5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgIHVybCA9IGBodHRwczovLyR7dXJsfWA7XG4gIH1cbiAgY29uc3QgX3VybCA9IG5ldyBVUkwoKF91cmwyID0gdXJsKSAhPT0gbnVsbCAmJiBfdXJsMiAhPT0gdm9pZCAwID8gX3VybDIgOiBkZWZhdWx0VXJsKTtcbiAgY29uc3QgcGF0aCA9IChfdXJsLnBhdGhuYW1lID09PSBcIi9cIiA/IGRlZmF1bHRVcmwucGF0aG5hbWUgOiBfdXJsLnBhdGhuYW1lKS5yZXBsYWNlKC9cXC8kLywgXCJcIik7XG4gIGNvbnN0IGJhc2UgPSBgJHtfdXJsLm9yaWdpbn0ke3BhdGh9YDtcbiAgcmV0dXJuIHtcbiAgICBvcmlnaW46IF91cmwub3JpZ2luLFxuICAgIGhvc3Q6IF91cmwuaG9zdCxcbiAgICBwYXRoLFxuICAgIGJhc2UsXG4gICAgdG9TdHJpbmc6ICgpID0+IGJhc2VcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwicGFyc2VVcmwiLCJ1cmwiLCJfdXJsMiIsImRlZmF1bHRVcmwiLCJVUkwiLCJzdGFydHNXaXRoIiwiX3VybCIsInBhdGgiLCJwYXRobmFtZSIsInJlcGxhY2UiLCJiYXNlIiwib3JpZ2luIiwiaG9zdCIsInRvU3RyaW5nIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ })

};
;